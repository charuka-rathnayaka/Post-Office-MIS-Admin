{"version":3,"sources":["views/Login/loginStyles.js","views/Login/loginActionTypes.js","auth/base.js","auth/auth.js","views/Login/loginActions.js","views/Login/login.jsx","components/SidePanel/sidePanelStyles.js","components/SidePanel/sidePanel.jsx","components/Charts/PerformanceChart/performanceChart.js","components/TopBar/topBarStyles.js","components/Profile/profileModalStyles.js","components/Profile/profileModal.js","components/TopBar/topBar.jsx","components/Reports/reportStyles.js","components/Reports/revenueReport.js","views/Home/Dashboard/dashboardActionTypes.js","views/Home/Dashboard/dashboardActions.js","components/DatePicker/dateRangePicker.js","views/Home/Dashboard/dashboard.jsx","images/calendar.jpg","views/Home/ReceptionistDashboard/dashboard.jsx","views/Home/homeActionTypes.js","views/Home/homeActions.js","views/Error/errorStyles.js","views/Error/authError.jsx","components/GoogleMap/googleMap.jsx","views/LiveDelivery/liveDeliveryStyles.js","views/LiveDelivery/liveDeliveryActionTypes.js","views/LiveDelivery/liveDeliveryActions.js","views/LiveDelivery/liveDelivery.jsx","components/Registration/registrationStyles.jsx","views/Registration/registrationActionTypes.js","views/Registration/registrationAction.js","components/Registration/registration.jsx","views/Registration/registration.jsx","components/Charts/PieCharts/revenueChart.js","components/Charts/AcceptedServiceTypeLineChart/acceptedServiceTypesLineChart.js","views/Statistics/statisticsStyles.js","components/DatePicker/dateFramePicker.js","views/Statistics/statisticActionTypes.js","views/Statistics/statisticsActions.js","components/Charts/PieCharts/countChart.js","components/Reports/statisticsReport.js","views/Statistics/statistics.jsx","components/Complain/complainStyles.js","views/Complains/complainsActionTypes.js","views/Complains/complainsActions.js","components/Complain/complainComponent.jsx","views/Complains/complains.jsx","views/RecepFunc/recepActionTypes.js","views/RecepFunc/recepActions.js","components/RecepForms/normalPost.jsx","views/RecepFunc/normPform.jsx","components/RecepForms/registeredPost.jsx","views/RecepFunc/regPform.jsx","components/RecepForms/logiPost.jsx","views/RecepFunc/logiPform.jsx","components/RecepForms/moneyOrder.jsx","views/RecepFunc/moneyOform.jsx","components/MoneyOrderList/moneyOrders.jsx","views/RecepFunc/moneyO.jsx","views/MailAssignments/mailAssignmentsActionTypes.js","views/MailAssignments/mailAssignmentsActions.js","components/MailAssignment/mailAssignment.js","views/MailAssignments/mailAssignmentsStyles.js","views/MailAssignments/mailAssignments.jsx","components/MailTransfer/mailTransferStyles.js","components/BarcodePrinter/barcodePrinter.js","components/MailTransfer/mailTransfer.js","views/MailTransfers/mailTransfersActionTypes.js","views/MailTransfers/mailTransfersActions.js","views/MailTransfers/mailTransfersStyles.js","views/MailTransfers/mailTransfers.jsx","views/PostmenRoutes/postmenRoutesActionTypes.js","views/PostmenRoutes/postmenRoutesActions.js","components/PostmanRoute/postmanRouteStyles.js","components/PostmanRoute/postmanRoute.js","views/PostmenRoutes/postmenRoutes.jsx","router.js","auth/privateRoute.js","App.js","reportWebVitals.js","sagas/loginSaga.js","firebase/firestore.js","sagas/homeSaga.js","sagas/employeeRegistrationSaga.js","sagas/liveDeliverySaga.js","sagas/recepSaga.js","sagas/dashboardSaga.js","sagas/statisticsSaga.js","sagas/complainsSaga.js","sagas/mailAssignmentsSaga.js","sagas/mailTransfersSaga.js","sagas/postmenRoutesSaga.js","sagas/index.js","views/Login/loginReducer.js","views/Home/homeReducer.js","views/LiveDelivery/liveDeliveryReducer.js","views/RecepFunc/postOfficeReducer.js","views/Registration/registrationReducer.js","views/Home/Dashboard/dashboardReducer.js","views/Statistics/statisticsReducer.js","views/Complains/complainsReducer.js","views/MailAssignments/mailAssignmentsReducer.js","views/MailTransfers/mailTransfersReducer.js","views/PostmenRoutes/postmenRoutesReducer.js","rootReducer.js","index.js"],"names":["useStyles","makeStyles","errorText","fontSize","color","marginTop","float","marginLeft","fontFamily","fontStyle","fontWeight","styles","LoginPage","backgroundColor","minHeight","underline","borderBottom","labelRoot","opacity","root","marginBottom","borderStyle","borderWidth","borderColor","borderRadius","password","boxMain","background","padding","maxWidth","maxHeight","textAlign","boxMainXs","border","marginRight","title","link","LoginButton","withStyles","textDecoration","minWidth","Button","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_REQUEST","SAVE_ID_TOKEN","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","dispatch","useDispatch","useEffect","onAuthStateChanged","user","getIdToken","then","idToken","type","actionTypes","token","localStorage","setItem","refreshToken","style","Grid","container","direction","justify","alignItems","spacing","position","top","src","width","height","alt","item","CircularProgress","size","Provider","value","withWidth","props","useContext","newClasses","data","useSelector","state","loginReducer","showPassword","setShowPassword","classes","error","formik","useFormik","initialValues","emailVal","passwordVal","validate","values","errors","test","email","length","onSubmit","touched","loginRequest","to","className","logocontainer","handleSubmit","autoComplete","TextField","id","fullWidth","label","variant","name","InputProps","InputLabelProps","onChange","handleChange","onBlur","handleBlur","undefined","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","requireLogin","loginButton","drawerWidthTab","drawerWidthLap","theme","display","drawer","breakpoints","up","flexShrink","transitions","create","easing","sharp","duration","leavingScreen","appBar","boxShadow","menuButton","Divider","HoverEffect","DrawerButtons","boxSizing","DrawerLables","down","toolbar","mixins","drawerPaper","paddingLeft","paddingTop","content","flexGrow","contentXs","listItem","avatar","notifiIcon","NavButton","userRole","homeReducer","role","List","activeStyle","ListItem","button","ListItemIcon","Badge","invisible","bottom","Drawer","paper","open","PerformanceChart","dashboardReducer","revenueData","AreaChart","margin","right","left","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","Label","YAxis","angle","textAnchor","CartesianGrid","strokeDasharray","Tooltip","Area","stroke","fillOpacity","fill","grow","inputRoot","inputInput","transition","userName","modal","justifyContent","shadows","ProfileModal","setOpen","userDetails","Modal","onClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","cstyle","firstName","lastName","contactNumber","NIC","currentUserEmail","currentUserID","TopBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","userFirstName","userLastName","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","e","preventDefault","AppBar","paddingBottom","Toolbar","Typography","noWrap","page","edge","event","currentTarget","ExportButton","RevenueReport","csvReport","filename","headers","key","dataRetreived","disableElevation","PERFORMANCE_DATA_REQUEST","PERFORMANCE_DATA_SUCCESS","PERFORMANCE_DATA_ERROR","performanceDataSuccess","DateRangePick","afterToday","DateRangePicker","dateRange","setDateRange","console","log","disabledDate","block","placeholder","Dashboard","today","Date","day20","postOffice","startDate","endDate","performanceDataRequest","paper1","palette","text","secondary","paper2","h2","ReceptionistDashboard","date","getFullYear","getMonth","getDate","xs","sm","Paper","calendar","format","ticking","timezone","AUTHORIZATION_REQUEST","AUTHORIZATION_SUCCESS","AUTHORIZATION_ERROR","authorizationSuccess","errorCode","errorMessage","AuthError","Container","GoogleMapLive","require","MarkerWithLabel","withScriptjs","withGoogleMap","liveLocations","defaultZoom","defaultCenter","postOfficeLocation","lengthOfLiveLocationList","Array","isInfoWindowShowing","setInfoWindowShowing","postmanIcon","url","scaledSize","window","google","maps","Size","labelOrigin","Point","postOfficeIcon","options","fullscreenControl","lat","_lat","lng","_long","icon","map","postman","index","location","JSON","parse","stringify","boxStyle","onCloseClick","dateFormat","timeStamp","Map","GET_LOCATIONS_REQUEST","GET_LOCATIONS_SUCCESS","GET_LOCATIONS_ERROR","getLocationsSuccess","locationData","postOfficeData","getLocationsError","LiveDelivery","LiveDeliveryReducer","getLocationsRequest","locationsRetrieved","googleMapURL","loadingElement","containerElement","mapElement","defaultOptions","showLabels","isLoading","InputLine","InputLabel","Input","Form","ErrorText","successText","loadingText","errorTextMsg","ADD_EMPLOYEE_REQUEST","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEE_ERROR","addEmployeeError","RegistrationForm","userID","registrationReducer","showPassword1","setShowPassword1","showPassword2","setShowPassword2","password1","nic","password2","addEmployee","select","employeeTypes","option","marginBelow","isRequested","requestSuccessful","requestUnSuccessful","Registration","userType","RevenueChart","statisticsReducer","revenuePieData","COLORS","PieChart","Pie","nameKey","cx","cy","outerRadius","entry","Cell","AcceptedServiceTypesLineChart","countData","LineChart","Legend","Line","PieBox","PieGrid","PieTitle","DateFramePicker","COUNT_DATA_REQUEST","COUNT_DATA_SUCCESS","COUNT_DATA_ERROR","countDataSuccess","countList","countPieData","CountChart","StatisticsReport","Statistics","countDataRequest","form","alignContent","fieldLabel","fieldValue","letterSpacing","SubmitButton","COMPLAINS_DATA_REQUEST","COMPLAINS_DATA_SUCCESS","COMPLAINS_DATA_ERROR","MARK_SOLVED_REQUEST","MARK_SOLVED_SUCCESS","MARK_SOLVED_ERROR","complainsDataRequest","complainsDataSuccess","markSolvedRequest","ComplainComponent","complainData","complain","a","complainID","pid","message","markAsSolved","Complains","complainsReducer","dataRetrieved","ADD_POST_START","ADD_POST_SUCCESS","ADD_POST_FAIL","ADD_REG_POST_START","ADD_REG_POST_SUCCESS","ADD_REG_POST_FAIL","ADD_LOGI_POST_START","ADD_LOGI_POST_SUCCESS","ADD_LOGI_POST_FAIL","ADD_MONEYORDER_START","ADD_MONEYORDER_SUCCESS","ADD_MONEYORDER_FAIL","GET_POSTOFFICE_START","GET_POSTOFFICE_SUCCESS","GET_POSTOFFICE_FAIL","GET_MONEYORDERS_START","GET_MONEYORDERS_SUCCESS","GET_MONEYORDERS_FAIL","REMOVE_MONEY_ORDER_START","REMOVE_MONEY_ORDER_SUCCESS","REMOVE_MONEY_ORDER_FAIL","addPostSuccess","types","getPostOfficeStart","getPostOfficeSuccess","getMoneyOrdersSuccess","moneyOrders","textField","formControl","selectEmpty","Transition","forwardRef","ref","Slide","NormalForm","wrapper_ref","useRef","handleClose","postOfficeReducer","initialState","recipientName","recipientAddressNo","recipientStreet1","recipientStreet2","recipientCity","cost","employee","acceptedPostOffice","destinationPostOffice","resetForm","long","required","shrink","FormControl","Select","city","code","labelId","Dialog","TransitionComponent","DialogTitle","DialogContent","DialogContentText","DialogActions","elem","current","html2canvas","scale","canvas","iframe","document","createElement","body","appendChild","imgUrl","toDataURL","quality","newWin","frames","write","close","NormalPostForm","RegisteredForm","year","month","day","tod","toString","slice","num","store","longitude","latitude","POcode","Pid","senderName","senderAddressNo","senderStreet1","senderStreet2","senderCity","senderEmail","get","set","number","parseInt","iid","RegisteredPostForm","LogiForm","recipientEmail","weight","LogiPostForm","MoneyOrderForm","senderID","recipientID","moneyAmount","securityCode","Math","random","MoneyOForm","columns","align","tableHeader","MOTable","setPage","rowsPerPage","setRowsPerPage","MoneyOrders","i","removeMoneyOrderStart","TableContainer","Table","stickyHeader","TableHead","TableRow","column","TableCell","TableBody","row","TablePagination","rowsPerPageOptions","component","count","onPageChange","newPage","onRowsPerPageChange","target","MoneyOrder","postOfficeID","getMoneyOrdersStart","GET_MAILS_REQUEST","GET_MAILS_SUCCESS","GET_MAILS_ERROR","CHANGE_POSTMAN","SUBMIT_ASSIGNMENTS_REQUEST","SUBMIT_ASSIGNMENTS_SUCCESS","SUBMIT_ASSIGNMENTS_ERROR","getMailsSuccess","assignments","postmenRoutes","getMailsError","submitMailAssignmentsError","StyledTableCell","head","StyledTableRow","action","hover","table","MailAssignment","mailAssignments","postmen","postmenData","changeRow","changePostman","mail","scope","addressNumber","street1","street2","defaultValue","postmanID","el","MailAssignments","mailAssignmentsReducer","MailAssignmentsReducer","submitted","setSubmitted","confirmAssignments","getMails","submitRequested","submitSuccess","submitFailure","heading","typography","pxToRem","secondaryHeading","verticalAlign","accorditionHeading","details","accordionActions","flexBasis","helper","borderLeft","divider","primary","main","BarcodePrinter","MailTransfer","wrapperRef","useHistory","formattedDate","transfer","Accordion","AccordionSummary","expandIcon","itemCount","AccordionDetails","mails","printBarcode","GET_TRANSFERS_REQUEST","GET_TRANSFERS_SUCCESS","GET_TRANSFERS_ERROR","CONFIRM_TRANSFER_REQUEST","CONFIRM_TRANSFER_SUCCESS","CONFIRM_TRANSFER_ERROR","getTransfersError","confirmTransferSuccess","transfers","confirmTransferError","MailTransfers","transferReducer","MailTransfersReducer","confirmTransfers","confirmTransfer","getTransfers","confirmationRequested","confirmationSuccessfull","POSTMEN_ROUTES_DATA_REQUEST","POSTMEN_ROUTES_DATA_SUCCESS","POSTMEN_ROUTES_DATA_ERROR","POSTMAN_ROUTE_SAVE_REQUEST","POSTMAN_ROUTE_SAVE_SUCCESS","POSTMAN_ROUTE_SAVE_ERROR","POSTMAN_ROUTE_REMOVE_REQUEST","POSTMAN_ROUTE_REMOVE_SUCCESS","POSTMAN_ROUTE_REMOVE_ERROR","postmenRoutesDataSuccess","saveStreetError","removeStreetError","RemoveButton","PostmanRoute","street","setStreet","addStreet","saveStreet","deleteStreet","removeStreet","routes","noValidate","PostmenRoutes","postmenRoutesReducer","postmenRoutesDataRequest","dataChanged","postmenRoutesData","Authorization","uID","uid","isAuthorized","exact","path","Login","PrivateRoute","RouteComponent","rest","render","routeProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loginSaga","request","signInWithEmailAndPassword","put","logoutSaga","signOut","firestore","getUserDetailsSaga","getUserDetails","collection","doc","userData","catch","call","addEmployeeSaga","NIc","axios","method","params","lastname","response","status","result","getLiveLocations","getPostmanDetails","getDataList","getLiveLocationsSaga","collectionGroup","where","channel","eventChannel","emit","onSnapshot","take","Data","docs","documentID","parent","geoLocations","latestElement","sort","b","timestamp","seconds","userDocumentID","postOfficeRef","getPostOffice","locations","loc","filter","getMoneyOrders","removeMoneyOrder","addPostDetailsSaga","addRegPostDetailsSaga","addLogiPostDetailsSaga","addMoneyOrderDetailsSaga","getPostOfficeSaga","getMoneyOrdersSaga","removeMoneyOrderSaga","addPostDetails","loc_lat","loc_long","acceptedPostoffice","destinationPostoffice","add","histories","GeoPoint","Timestamp","now","recipientDetails","addRegPostDetails","senderDetails","signature","addLogiPostDetails","addMoneyOrderDetails","deliverMoneyOrder","orderBy","startAt","endAt","delete","push","removedMoneyOrder","getPerformanceDataFromPending","getPerformanceDataFromDelievered","getRevenueList","getPerformanceDataSaga","toDate","performanceData","dayList","d","setDate","currDate","reducer","previousValue","currentValue","parseFloat","normalMailsOnCurr","registeredMailsOnCurr","packageOnCurr","moneyOrderOnCurr","normalMailTotal","reduce","registeredMailTotal","moneyOrderTotal","packageTotal","performanceDataPending","performanceDataDelivered","revenueList","getCountDataFromPending","getCountDataFromDelievered","getCountList","getRevenuePieData","getCountPieData","getCountDataSaga","normalMailsList","registeredMailsList","packageList","moneyOrderList","countDataPending","countDataDelivered","getComplainsData","getComplainDataSaga","markComplainSolved","setComplainSolvedSaga","complainsData","update","getPostmenRoutes","assignPostmen","getMailsSaga","submitAssignments","submitAssignmentsSaga","recepientName","route","mailsData","availablePostman","includes","postmanEmail","postmanFirstName","postmanLastName","forEach","assignment","arrayUnion","getPostOffices","groupTransfers","markTransfers","getTransfersSaga","confirmMails","confirmTransfersSaga","PostOffice","postOffices","office","destinationPostOfficeCode","transferData","postOfficeCode","markTransfer","mailList","relevantDocumentRef","empty","docID","transferAssignments","all","transferList","transferMarking","mailRef","getPostmenRoutesData","getPostmenRoutesDataSaga","addStreetSaga","removeStreetSaga","FieldValue","arrayRemove","takeEvery","loginActionTypes","homeActionTypes","addEmployeeActionTypes","liveDeliveryActionTypes","recepActionTypes","takeLatest","dashboardActionTypes","statisticsActionTypes","complainsActionTypes","mailAssignmentsActionTypes","mailTransfersActionTypes","postmenRoutesActionTypes","loggedIn","liveLocationActionTypes","post","ismarkRequested","ismarkSuccess","markError","changedCount","objIndex","findIndex","obj","confirmationUnsuccessfull","isSaveRequested","isSaveSuccess","saveError","isRemoveRequested","isRemoveSuccess","removeError","combineReducers","registerObserver","sagaMiddleware","createSagaMiddleware","createStore","combinedReducers","composeWithDevTools","applyMiddleware","run","rootSaga","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3127a33c.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  errorText: {\r\n    fontSize: \"14px\",\r\n    color: \"#F7685B\",\r\n    marginTop: -14,\r\n    float: \"left\",\r\n    marginLeft: \"13px\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const styles = {\r\n  LoginPage:{\r\n    backgroundColor:\"#d4d4d4\",\r\n    minHeight:\"100vh\"\r\n  },\r\n\r\n  underline: {\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  labelRoot: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0) !important\",\r\n    opacity: 0.7,\r\n    color: \"#6A707E\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 400,\r\n    fontSize: \"16px\",\r\n  },\r\n  root: {\r\n    marginBottom: \"16px\",\r\n    backgroundColor: \"#FDFDFD !important\",\r\n    fontFamily: \"Poppins\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"#D9EAFD\",\r\n    borderRadius: 8,\r\n  },\r\n  \r\n  password: {\r\n    marginBottom: \"16px\",\r\n    backgroundColor: \"#FDFDFD !important\",\r\n    fontFamily: \"Poppins\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"#D9EAFD\",\r\n    borderRadius: 8,\r\n  },\r\n  boxMain: {\r\n    background: \"#121226\",\r\n    borderRadius: \"16px\",\r\n    padding: \"53px\",\r\n    maxWidth: \"436px\",\r\n    maxHeight: \"473px\",\r\n    marginTop: \"6%\",\r\n    textAlign: \"center\",\r\n  },\r\n  boxMainXs: {\r\n    background: \"#121226\",\r\n    padding: \"25px\",\r\n    maxWidth: \"488px\",\r\n    maxHeight: \"473px\",\r\n    border: \"2px solid #F4F4F4\",\r\n    marginLeft: \"20px\",\r\n    marginRight: \"20px\",\r\n    background: \"#980404\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Poppins\",\r\n    fontWeight: \"800\",\r\n    fontStyle: \"normal\",\r\n    marginTop: 0,\r\n    marginBottom: \"60px\",\r\n    color: \"white\",\r\n    fontSize: \"24px\",\r\n  },\r\n  link: {\r\n    marginTop: \"15px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport const LoginButton = withStyles(() => ({\r\n  root: {\r\n    borderRadius: 8,\r\n    textDecoration:\"none\",\r\n    color:\"white\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#01011a\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"#000000\",\r\n        fontSize:\"15px\"\r\n    },\r\n    minWidth:\"100px\"\r\n    },\r\n}))(Button);\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const SAVE_ID_TOKEN = \"SAVE_ID_TOKEN\";","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport \"firebase/compat/storage\";\r\nimport \"firebase/compat/firestore\";\r\n//import * as admin from 'firebase-admin';\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\nexport const app = firebase.initializeApp(firebaseConfig);\r\n\r\n// export const firestore = app.firestore();\r\nexport const auth = app.auth();","import React, { useEffect, useState } from \"react\";\r\nimport {app} from \"./base.js\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveIdToken } from \"../views/Login/loginActions.js\";\r\nexport const AuthContext = React.createContext();\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n      /*console.log(\"User \",user.getIdTokenResult().claims);\r\n      user.getIdTokenResult()\r\n      .then((idTokenResult) => {\r\n        console.log(\"User \",idTokenResult.claims);\r\n      })*/\r\n      if (user) {\r\n          user.getIdToken(true).then((idToken) => {\r\n            dispatch(saveIdToken(idToken));\r\n          });\r\n          localStorage.setItem(\"refreshToken\", user.refreshToken);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (pending) {\r\n    return (\r\n      <div style={{backgroundColor:\"#d4d4d4\",\r\n      minHeight:\"100vh\"}}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        style={{ position: \"absolute\", top: \"35%\" }}\r\n      >\r\n        <Grid>\r\n          <img\r\n            src=\"/App_Icon.png\"\r\n            style={{ width: 200 * 1.5, height: 80 * 1.5,  }}\r\n            alt=\"APP Logo\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <CircularProgress size={80} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import * as actionTypes from \"./loginActionTypes.js\";\r\n\r\nexport function loginRequest(data) {\r\n  return { type: actionTypes.LOGIN_REQUEST, data };\r\n}\r\n\r\nexport function loginSuccess() {\r\n  return { type: actionTypes.LOGIN_SUCCESS };\r\n}\r\n\r\nexport function loginError(error) {\r\n  return{ type:  actionTypes.LOGIN_ERROR, error: error};\r\n}\r\n\r\nexport function logoutRequest() {\r\n  return { type: actionTypes.LOGOUT_REQUEST };\r\n}\r\n\r\nexport function saveIdToken(token) {\r\n  return { type: actionTypes.SAVE_ID_TOKEN, token };\r\n}\r\n","import React, {useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  withStyles,\r\n  withWidth,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { LoginButton, styles, useStyles } from \"./loginStyles.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { loginRequest } from \"./loginActions.js\";\r\nimport { AuthContext } from \"../../auth/auth.js\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction Login(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const newClasses = useStyles();\r\n  const data = useSelector((state) => state.loginReducer); \r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { classes } = props;\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n  const { error } = [];\r\n  const dispatch = useDispatch();\r\n  // console.log(\"state = \", data);\r\n  \r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.emailVal) {\r\n      errors.email = \"Email field is required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailVal)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    if (!values.passwordVal) {\r\n      errors.password = \"Password field is required\";\r\n    } else if (values.passwordVal.length < 6) {\r\n      errors.password = \"Password should contain atleast 6 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    \r\n    initialValues: {\r\n      emailVal: \"\",\r\n      passwordVal: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      formik.touched.emailVal = false;\r\n      formik.touched.passwordVal = false;\r\n      dispatch(loginRequest(values));\r\n    },\r\n  });\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className={classes.LoginPage}>\r\n    <Grid container alignItems={\"center\"} justify={\"center\"}>\r\n      <Grid\r\n        item\r\n        className={props.width !== \"xs\" ? classes.boxMain : classes.boxMainXs}\r\n      > \r\n      <div className={classes.logocontainer}> \r\n        <img \r\n          src=\"/App_Icon.png\"\r\n          style={{ width: 220, height: 80,color:\"white\" }}\r\n          alt=\"Logo\"\r\n        />\r\n    </div>\r\n        <h2 className={classes.title}>Management System Login</h2>\r\n        <form onSubmit={formik.handleSubmit} autoComplete=\"none\">\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            fullWidth\r\n            label=\"Enter Email....\"\r\n            variant=\"filled\"\r\n            type=\"email\"\r\n            name=\"emailVal\"\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n              // disableUnderline,\r\n              classes: {\r\n                underline: classes.underline,\r\n                root: classes.root,\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.labelRoot,\r\n              },\r\n            }}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.emailVal}\r\n          />\r\n          {formik.touched.emailVal && formik.errors.email !== undefined ? (\r\n            <p className={newClasses.errorText}>{formik.errors.email}</p>\r\n          ) : null}\r\n          {formik.errors.email === undefined && !formik.touched.emailVal ? (\r\n            <p className={newClasses.errorText}>{error}</p>\r\n          ) : null}\r\n\r\n          <TextField\r\n            variant=\"filled\"\r\n            fullWidth\r\n            label=\"Enter Password....\"\r\n            name=\"passwordVal\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.passwordVal}\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.labelRoot,\r\n              },\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {formik.values.password !== \"\" ? (\r\n                    <IconButton\r\n                      style={{ color: \"#1b1b2b\" }}\r\n                      id=\"iconButton\"\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  ) : (\r\n                    <p />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n              classes: {\r\n                underline: classes.underline,\r\n                root: classes.password,\r\n              },\r\n            }}\r\n          />\r\n          <Grid container direction=\"column\">\r\n          <Grid item>\r\n          {formik.touched.passwordVal && formik.errors.password !== undefined ? (\r\n            <span><p className={newClasses.errorText}>{formik.errors.password}</p></span>\r\n          ) : null}\r\n          </Grid>\r\n          <Grid item>\r\n            {data.error.length>0 && data.requireLogin==true ? (\r\n              <span><p className={newClasses.errorText}>{data.error}</p></span>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item>\r\n          <LoginButton\r\n            variant=\"contained\"\r\n            className={classes.loginButton}\r\n            \r\n            type=\"submit\"\r\n            \r\n          >\r\n            LOGIN\r\n          </LoginButton>\r\n          </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(Login));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst drawerWidthTab = 100;\r\nconst drawerWidthLap = 250;\r\nconst drawerWidthMobile = 56;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    fontFamily: \"Poppins\",\r\n    minWidth: \"400px\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: drawerWidthMobile,\r\n      flexShrink: 0,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidthTab,\r\n      flexShrink: 0,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidthLap,\r\n      flexShrink: 0,\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBar: {\r\n    position: \"fixed\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"none\",\r\n    color: \"white\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidthTab}px)`,\r\n      marginLeft: drawerWidthTab,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: `calc(100% - ${drawerWidthLap}px)`,\r\n      marginLeft: drawerWidthLap,\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  Divider: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  // drawer\r\n  HoverEffect: {\r\n    marginTop: 0,\r\n    \"& :hover\": {\r\n      color: \"white\",\r\n      fontWeight: \"800\",\r\n      fontSize:\"16px\",\r\n      \r\n    },\r\n    \"&.active\": {\r\n      color: \"#63231c\",\r\n      backgroundColor: \"#4B76D1\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  DrawerButtons: {\r\n    color: \"#63231c\",\r\n    boxSizing: \"border-box\",\r\n    \"&.active\": {\r\n      color: \"#F3F7FB\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      fontSize: 28,\r\n      marginLeft: \"21px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      fontSize: 25,\r\n    },\r\n  },\r\n  DrawerLables: {\r\n    fontFamily: \"Rubik, sans-serif\",\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"sm\") && theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar #980404 #290202\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    backgroundColor: \"#070712\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: drawerWidthMobile,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidthTab,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidthLap,\r\n    },\r\n  },\r\n  logocontainer: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"150px\",\r\n      paddingLeft: \"5px\",\r\n      paddingTop: \"10px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n      paddingTop: \"5px\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\") && theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"center\",\r\n      paddingTop: \"10px\",\r\n      height: \"150px\",\r\n    },\r\n  },\r\n  content: {\r\n    backgroundColor:\"white\",\r\n    flexGrow: 1,\r\n    \r\n    \r\n  },\r\n  contentXs: {\r\n    backgroundColor: \"blue\",\r\n    flexGrow: 1,\r\n    \r\n    \r\n  },\r\n  listItem: {\r\n    height: \"41px\",\r\n    marginBottom: \"8px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"32px\",\r\n    },\r\n    backgroundColor: \"inherit\",\r\n    \r\n  },\r\n  avatar: {\r\n    height: \"48px\",\r\n    width: \"48px\",\r\n    color:\"white\"\r\n  },\r\n  notifiIcon: {\r\n    height: \"30px\",\r\n    width: \"30px\",\r\n    color:\"white\"\r\n  },\r\n  NavButton:{\r\n    \"& :hover\": {\r\n      color: \"white\",\r\n      fontWeight: \"800\",\r\n    \r\n      backgroundColor:\"#9c9dad\"\r\n    },\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React,{useContext} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { Hidden, withWidth, Badge } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport useStyles from \"./sidePanelStyles.js\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport PaymentIcon from '@material-ui/icons/Payment';\r\n\r\n\r\nfunction MainDrawer(props) {\r\n  const classes = useStyles();\r\n  const { width } = props;\r\n  const userRole= useSelector((state)=>state.homeReducer.role);\r\n  const drawer = (\r\n    <div style={{ height: \"100%\", fontFamily: \"Poppins !important\" }}>\r\n      <div className={classes.logocontainer}> \r\n          <img \r\n            src=\"/App_Icon.png\"\r\n            style={{ width: 220, height: 80,color:\"white\" }}\r\n            alt=\"Logo\"\r\n          />\r\n      </div>\r\n\r\n      <List\r\n        style={{ fontFamily: \"Rubik, sans-serif\" }}\r\n        className={classes.HoverEffect}\r\n      >\r\n        {userRole==\"postmaster\"?(\r\n          <div>\r\n        <NavLink\r\n          to=\"/dashboard\"\r\n\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Rubik, sans-serif\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n           \r\n          >\r\n            <ListItemIcon>\r\n             \r\n               <DashboardIcon color='primary' style={{ color:\"#727287\"}}/>\r\n          \r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Rubik, sans-serif\"}}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Dashboard\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/live-delivery\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Rubik, sans-serif\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}      \r\n          >\r\n            <ListItemIcon>\r\n              <DirectionsBikeIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Rubik, sans-serif\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Live Delivery\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/statistics\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Mulish\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n            \r\n          >\r\n            <ListItemIcon style={{ position: \"relative\" }}>\r\n              <EqualizerIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Poppins !important\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Statistics\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/registration\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Mulish\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n            \r\n          >\r\n            <ListItemIcon style={{ position: \"relative\" }}>\r\n              <PersonAddIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Poppins !important\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Registration\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n\r\n        \r\n\r\n\r\n        <NavLink\r\n          to=\"/complains\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Mulish\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n          \r\n          >\r\n            <ListItemIcon style={{ position: \"relative\" }}>\r\n              <FeedbackIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Poppins !important\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Complains\r\n            </label>\r\n          </ListItem>\r\n        </NavLink></div>):(\r\n          userRole==\"supervisor\"?\r\n            (<div>\r\n              <NavLink\r\n                to=\"/dashboard\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                 \r\n                >\r\n                  <ListItemIcon>      \r\n                    <DashboardIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Dashboard\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/registration\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                  \r\n                >\r\n                  <ListItemIcon style={{ position: \"relative\" }}>\r\n                    <PersonAddIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Registration\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/mail-assignments\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                  \r\n                >\r\n                  <ListItemIcon style={{ position: \"relative\" }}>\r\n                    <AssignmentIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Mail Assignment\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/mail-transfer\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                  \r\n                >\r\n                  <ListItemIcon style={{ position: \"relative\",color:\"white\"}}>\r\n                    <LocalShippingIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Mail transfers\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/postmen-routes\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                  \r\n                >\r\n                  <ListItemIcon style={{ position: \"relative\",color:\"white\"}}>\r\n                    <DirectionsBikeIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Postmen Routes\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n            </div>):null\r\n        )}\r\n        {\r\n\r\nuserRole==\"receptionist\"?\r\n  (<div>\r\n    <NavLink\r\n      to=\"/dashboard\"\r\n      style={{\r\n        color: \"#f7f3f2\",\r\n        textDecoration: \"none\",\r\n        fontFamily: \"Mulish\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"16px\",\r\n        fontStyle: \"normal\",\r\n      }}\r\n      activeStyle={{\r\n        color: \"#63231c\",\r\n        backgroundColor: \"#de8071\",\r\n        fontWeight: \"bold\",\r\n        \r\n      }}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.listItem}\r\n        style={{\r\n          backgroundColor: \"inherit\",\r\n          fontFamily: \"Poppins !important\",\r\n        }}\r\n      >\r\n        <ListItemIcon>\r\n          <Badge color=\"secondary\" variant=\"dot\" invisible={true}>\r\n          <DashboardIcon style={{color:\"white\"}} activeStyle={{color:\"red\"}}/>\r\n          </Badge>\r\n        </ListItemIcon>\r\n        <label\r\n          style={{ fontFamily: \"Poppins !important\" }}\r\n          className={classes.DrawerLables}\r\n        >\r\n          Dashboard\r\n        </label>\r\n      </ListItem>\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/normPform\"\r\n      style={{\r\n        color: \"#f7f3f2\",\r\n        textDecoration: \"none\",\r\n        fontFamily: \"Mulish\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"16px\",\r\n        fontStyle: \"normal\",\r\n      }}\r\n      activeStyle={{\r\n        color: \"#63231c\",\r\n        backgroundColor: \"#de8071\",\r\n        fontWeight: \"bold\",\r\n        \r\n      }}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.listItem}\r\n        style={{\r\n          backgroundColor: \"inherit\",\r\n          fontFamily: \"Poppins !important\",\r\n        }}\r\n      >\r\n        <ListItemIcon style={{ position: \"relative\" }}>\r\n          <AddBoxIcon/>\r\n        </ListItemIcon>\r\n        <label\r\n          style={{ fontFamily: \"Poppins !important\" }}\r\n          className={classes.DrawerLables}\r\n        >\r\n          Normal Post\r\n        </label>\r\n      </ListItem>\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/regPform\"\r\n      style={{\r\n        color: \"#f7f3f2\",\r\n        textDecoration: \"none\",\r\n        fontFamily: \"Mulish\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"16px\",\r\n        fontStyle: \"normal\",\r\n      }}\r\n      activeStyle={{\r\n        color: \"#63231c\",\r\n        backgroundColor: \"#de8071\",\r\n        fontWeight: \"bold\",\r\n        \r\n      }}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.listItem}\r\n        style={{\r\n          backgroundColor: \"inherit\",\r\n          fontFamily: \"Poppins !important\",\r\n        }}\r\n      >\r\n        <ListItemIcon style={{ position: \"relative\" }}>\r\n          <AddBoxIcon/>\r\n        </ListItemIcon>\r\n        <label\r\n          style={{ fontFamily: \"Poppins !important\" }}\r\n          className={classes.DrawerLables}\r\n        >\r\n          Registered Post\r\n        </label>\r\n      </ListItem>\r\n    </NavLink>\r\n\r\n    <NavLink\r\n      to=\"/logiPform\"\r\n      style={{\r\n        color: \"#f7f3f2\",\r\n        textDecoration: \"none\",\r\n        fontFamily: \"Mulish\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"16px\",\r\n        fontStyle: \"normal\",\r\n      }}\r\n      activeStyle={{\r\n        color: \"#63231c\",\r\n        backgroundColor: \"#de8071\",\r\n        fontWeight: \"bold\",\r\n        \r\n      }}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.listItem}\r\n        style={{\r\n          backgroundColor: \"inherit\",\r\n          fontFamily: \"Poppins !important\",\r\n        }}\r\n      >\r\n        <ListItemIcon style={{ position: \"relative\" }}>\r\n          <AddBoxIcon/>\r\n        </ListItemIcon>\r\n        <label\r\n          style={{ fontFamily: \"Poppins !important\" }}\r\n          className={classes.DrawerLables}\r\n        >\r\n          Logi Post\r\n        </label>\r\n      </ListItem>\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/moneyOform\"\r\n      style={{\r\n        color: \"#f7f3f2\",\r\n        textDecoration: \"none\",\r\n        fontFamily: \"Mulish\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"16px\",\r\n        fontStyle: \"normal\",\r\n      }}\r\n      activeStyle={{\r\n        color: \"#63231c\",\r\n        backgroundColor: \"#de8071\",\r\n        fontWeight: \"bold\",\r\n        \r\n      }}\r\n    >\r\n      <ListItem\r\n        button\r\n        className={classes.listItem}\r\n        style={{\r\n          backgroundColor: \"inherit\",\r\n          fontFamily: \"Poppins !important\",\r\n        }}\r\n      >\r\n        <ListItemIcon style={{ position: \"relative\" }}>\r\n          <AddBoxIcon/>\r\n        </ListItemIcon>\r\n        <label\r\n          style={{ fontFamily: \"Poppins !important\" }}\r\n          className={classes.DrawerLables}\r\n        >\r\n          Money Order\r\n        </label>\r\n      </ListItem>\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/moneyO\"\r\n      style={{\r\n        color: \"#f7f3f2\",\r\n        textDecoration: \"none\",\r\n        fontFamily: \"Mulish\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"16px\",\r\n        fontStyle: \"normal\",\r\n      }}\r\n      activeStyle={{\r\n        color: \"#63231c\",\r\n        backgroundColor: \"#de8071\",\r\n        fontWeight: \"bold\",\r\n        \r\n      }}\r\n    >\r\n    <ListItem\r\n      button\r\n      className={classes.listItem}\r\n      style={{\r\n        backgroundColor: \"inherit\",\r\n        fontFamily: \"Poppins !important\",\r\n      }}\r\n    >\r\n    <ListItemIcon style={{ position: \"relative\" }}>\r\n      <PaymentIcon/>\r\n    </ListItemIcon>\r\n    <label\r\n      style={{ fontFamily: \"Poppins !important\" }}\r\n      className={classes.DrawerLables}\r\n    >\r\n      Pay Money Order\r\n    </label>\r\n    </ListItem>\r\n    </NavLink>\r\n  </div>):null\r\n  };\r\n\r\n      </List>\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"10px\",\r\n          width: \"100%\",\r\n          fontFamily: \"Poppins !important\",\r\n        }}\r\n      >\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Drawer\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          variant=\"permanent\"\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        {/* </Hidden>*/}\r\n      </nav>\r\n      <main className={width !== \"xs\" ? classes.content : classes.contentXs}>\r\n        <div> {props.children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainDrawer.propTypes = {\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(MainDrawer);\r\n","import React from \"react\";\r\nimport { AreaChart, linearGradient,XAxis, YAxis,CartesianGrid,Tooltip,Area,Label  } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction PerformanceChart(){\r\n  const data = useSelector((state) => state.dashboardReducer.revenueData); \r\n    return(\r\n        <AreaChart width={1100} height={450} data={data}\r\n            margin={{ top: 10, right: 30, left: 10, bottom: 10}}>\r\n            <defs>\r\n                <linearGradient id=\"colorNormalMail\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorRegisterMail\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#e1e81e\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#e1e81e\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorMoneyOrder\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#daa1e3\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#daa1e3\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorPackage\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#2ec720\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#2ec720\" stopOpacity={0}/>\r\n                </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"date\">\r\n                <Label value=\"Date\" offset={-5} position=\"insideBottom\" />\r\n            </XAxis>\r\n            <YAxis label={{ value: 'Revenue', angle: -90, position: 'insideLeft', textAnchor: 'middle' }} />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"Normal Mail\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorNormalMail)\" />\r\n            <Area type=\"monotone\" dataKey=\"Registered Mail\" stroke=\"#e1e81e\" fillOpacity={1} fill=\"url(#colorRegisterMail)\" />\r\n            <Area type=\"monotone\" dataKey=\"Money Order\" stroke=\"#daa1e3\" fillOpacity={1} fill=\"url(#colorMoneyOrder)\" />\r\n            <Area type=\"monotone\" dataKey=\"Package Delievery\" stroke=\"#2ec720\" fillOpacity={1} fill=\"url(#colorPackage)\" />\r\n            </AreaChart>\r\n    )\r\n}\r\nexport default PerformanceChart;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n     \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        color:\"white\",\r\n        fontFamily:\"Rubik, sans-serif\",\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\",\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    \r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    userName:{\r\n        color:\"white\",\r\n        fontSize:\"15px\",\r\n        paddingLeft:\"10px\",\r\n        fontFamily:\"Rubik, sans-serif\",\r\n        fontWeight:\"normal\"\r\n    }\r\n    \r\n  }));\r\n\r\nexport default useStyles;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      backgroundColor: \"#e8edff\",\r\n      border: '1px solid #030117',\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n    content:{\r\n        fontSize:\"16px\",\r\n        marginTop:\"10px\",\r\n        fontWeight:900,\r\n        color:\"#040324\"\r\n    },\r\n    role:{\r\n        color:\"#8b89c4\"\r\n    }\r\n  }));","import React from 'react';\r\nimport { useStyles } from './profileModalStyles';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\n\r\nexport default function ProfileModal(props) {\r\n  const classes = useStyles();\r\n  const open=props.open;\r\n  const setOpen=props.setOpen;\r\n  // console.log(\"props \",open,setOpen,props)\r\n  const userDetails=props.userDetails;\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n     \r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className={classes.modal}\r\n        open={open}\r\n        onClose={handleClose}\r\n        closeAfterTransition\r\n        BackdropComponent={Backdrop}\r\n        BackdropProps={{\r\n          timeout: 500,\r\n        }}\r\n      >\r\n        <Fade in={open}>\r\n          <div className={classes.paper}>\r\n            <Grid container direction=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n                <Grid item>\r\n                    <AccountCircle  cstyle={{backgroundColor: 'white'}} style={{ fontSize: 70 }}/>\r\n                </Grid>\r\n                <Grid item>\r\n                    <div className={classes.role}>{userDetails.role}</div>\r\n                </Grid>\r\n                <Grid item style={{marginTop:\"20px\"}}>\r\n                    <div className={classes.content}>Name : {userDetails.firstName} {userDetails.lastName}</div>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <div className={classes.content}>Contact Number : {userDetails.contactNumber}</div>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <div className={classes.content}>NIC : {userDetails.NIC}</div>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <div className={classes.content}>Email : {userDetails.currentUserEmail}</div>\r\n                </Grid>\r\n\r\n                <Grid item style={{marginBottom:\"15px\"}}>\r\n                    <div className={classes.content}>ID : {userDetails.currentUserID}</div>\r\n                </Grid>\r\n            </Grid>\r\n          \r\n           \r\n            \r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport useStyles from './topBarStyles';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutRequest } from \"../../views/Login/loginActions.js\";\r\nimport ProfileModal from '../Profile/profileModal';\r\n\r\nexport default function TopBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const userFirstName= useSelector((state)=>state.homeReducer.firstName);\r\n  const userLastName=useSelector((state)=>state.homeReducer.lastName);\r\n  const userDetails=useSelector((state)=>state.homeReducer);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = React.useState(false);\r\n // console.log(\"page-\",page)\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    setOpen(true);\r\n    handleMobileMenuClose();\r\n  };\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logoutRequest());\r\n  };\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={logout}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" style={{ background: '#070712',paddingBottom:\"10px\" }}>\r\n        <Toolbar>\r\n          \r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {props.page}\r\n          </Typography>\r\n          \r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"error\"\r\n            >\r\n              <AccountCircle  color=\"primary\" style={{ fontSize: 40 }}/>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.userName}>{userFirstName} {userLastName}</div>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      <ProfileModal open={open} setOpen={setOpen} userDetails={userDetails}/>\r\n      {renderMenu}\r\n\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport const ExportButton = withStyles(() => ({\r\n    root: {\r\n        textDecoration:\"none\",\r\n        color:\"white\",\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"#01011a\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#000000\",\r\n            fontSize:\"14px\"\r\n        },\r\n        minWidth:\"100px\"\r\n        },\r\n  }))(Button);","import React from \"react\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ExportButton} from \"./reportStyles\";\r\n\r\n\r\nfunction RevenueReport(){\r\n    const dashboardReducer = useSelector((state) => state.dashboardReducer); \r\n    const header=[\r\n        {label:\"Date\", key:\"date\"},\r\n        {label:\"Normal Mail\", key:\"Normal Mail\"},\r\n        {label:\"Registered Mail\", key:\"Registered Mail\"},\r\n        {label:\"Money Order\", key:\"Money Order\"},\r\n        {label:\"Package Delievery\", key:\"Package Delievery\"},\r\n    ]\r\n    const csvReport={\r\n        filename:\"Revenue-Report.csv\",\r\n        headers:header,\r\n        data:dashboardReducer.revenueData\r\n    }\r\n    const gotData=dashboardReducer.dataRetreived;\r\n    return(   \r\n            <div>\r\n                <CSVLink {...csvReport} style={{textDecoration:\"none\"}}>\r\n                    <ExportButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        disableElevation\r\n                        type=\"submit\"  \r\n                        >\r\n                            EXPORT REVENUE REPORT\r\n                    </ExportButton>\r\n                </CSVLink>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default RevenueReport;","export const PERFORMANCE_DATA_REQUEST = \"PERFORMANCE_DATA_REQUEST\";\r\nexport const PERFORMANCE_DATA_SUCCESS = \"PERFORMANCE_DATA_SUCCESS\";\r\nexport const PERFORMANCE_DATA_ERROR = \"PERFORMANCE_DATA_ERROR\";","import * as actionTypes from \"./dashboardActionTypes\";\r\n\r\nexport function performanceDataRequest(startDate,endDate,postOffice) {\r\n  return { type: actionTypes.PERFORMANCE_DATA_REQUEST,startDate,endDate,postOffice};\r\n}\r\n\r\nexport function performanceDataSuccess(data) {\r\n  return { type: actionTypes.PERFORMANCE_DATA_SUCCESS,data};\r\n}\r\n\r\nexport function performanceDataError() {\r\n  return { type: actionTypes.PERFORMANCE_DATA_ERROR };\r\n}\r\n","import React,{useState} from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport DateRangePicker from 'rsuite/DateRangePicker';\r\nimport 'rsuite/styles/index.less'; // less\r\nimport 'rsuite/dist/rsuite.min.css'; // or css\r\nimport 'rsuite/dist/rsuite-rtl.min.css';\r\n// import './dateRangePickerStyles.css'\r\n\r\nexport function DateRangePick(props){\r\n    const {afterToday} =DateRangePicker;\r\n    const dateRange = props.dateRange;\r\n    const setDateRange= props.setDateRange;\r\n    console.log(\"Date range - \",dateRange)\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item style={{marginTop:\"25px\"}}>\r\n                   <DateRangePicker disabledDate={afterToday()} block value={dateRange} onChange={setDateRange} placeholder=\"Select Date Range\" style={{ width: 230 }}/>\r\n                </Grid>\r\n               \r\n            </Grid>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport Nav from \"../../../components/SidePanel/sidePanel\";\r\nimport PerformanceChart from \"../../../components/Charts/PerformanceChart/performanceChart\";\r\nimport TopBar from \"../../../components/TopBar/topBar\";\r\nimport RevenueReport from \"../../../components/Reports/revenueReport\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { performanceDataRequest} from \"./dashboardActions\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { DateRangePick} from \"../../../components/DatePicker/dateRangePicker\";\r\n\r\nexport default function Dashboard(){\r\n    const today=new Date();\r\n    const day20 = new Date(today - 1000 * 60 * 60 * 24 * 20);\r\n    const [dateRange, setDateRange] = React.useState([day20, today]);\r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(performanceDataRequest(dateRange[0],dateRange[1],postOffice))\r\n    },[dispatch,dateRange,postOffice]);\r\n    \r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Dashboard\"/>\r\n                <div>\r\n                    <Grid container direction=\"row\" justifyContent=\"center\" spacing={5}>\r\n                        <Grid item>\r\n                            <DateRangePick\r\n                                dateRange={dateRange}\r\n                                setDateRange={setDateRange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={{marginTop:\"5px\"}}>\r\n                            <RevenueReport/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div style={{marginTop:\"20px\", paddingBottom:\"15px\"}}>\r\n                    <PerformanceChart/>\r\n                </div>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/calendar.d962e02c.jpg\";","import React from \"react\";\r\nimport Nav from \"../../../components/SidePanel/sidePanel\";\r\n\r\nimport TopBar from \"../../../components/TopBar/topBar\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Clock from 'react-live-clock';\r\nimport calendar from '../../../images/calendar.jpg';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper1: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n    paper2: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n        backgroundColor: '#00004d',\r\n      },\r\n    h2:{\r\n        color:\"black\",\r\n    }\r\n  }));\r\n\r\nexport default function ReceptionistDashboard(){\r\n    \r\n    const classes = useStyles();\r\n    var today = new Date();\r\n    const date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\r\n   \r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar/>\r\n                <br/>\r\n                <h1>Receptionist Dashboard</h1>\r\n                <br/><br/><br/>\r\n                <Grid container spacing={0}>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper className={classes.paper1}>\r\n                        <img src={calendar} alt=\"\"/>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6}>\r\n                        <Paper className={classes.paper2}>\r\n                        <br/><br/>\r\n                            <h2 style={{color:\"white\"}}>Date</h2>\r\n                            \r\n                            <p style={{fontSize:\"60px\", color:\"white\",fontWeight:\"bold\"}}>{date}</p>\r\n                            <br/><br/>\r\n                            <h2 style={{color:\"white\"}}>Time</h2>\r\n                            <p style={{fontSize:\"60px\", color:\"white\",fontWeight:\"bold\"}}><Clock format={'HH:mm:ss'} ticking={true} timezone={'Asia/Kolkata'} /></p>\r\n                            <br/><br/>\r\n                        </Paper>\r\n                    </Grid>\r\n                       \r\n                </Grid>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","export const AUTHORIZATION_REQUEST = \"AUTHORIZATION_REQUEST\";\r\nexport const AUTHORIZATION_SUCCESS = \"AUTHORIZATION_SUCCESS\";\r\nexport const AUTHORIZATION_ERROR = \"AUTHORIZATION_ERROR\";\r\n","import * as actionTypes from \"./homeActionTypes\";\r\n\r\nexport function authorizationRequest(data) {\r\n  return { type: actionTypes.AUTHORIZATION_REQUEST,data};\r\n}\r\n\r\nexport function authorizationSuccess(data,currentUserID,currentUserEmail) {\r\n  return { type: actionTypes.AUTHORIZATION_SUCCESS,data,currentUserID,currentUserEmail};\r\n}\r\n\r\nexport function authorizationError() {\r\n  return { type: actionTypes.AUTHORIZATION_ERROR };\r\n}\r\n\r\n\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    logocontainer:{\r\n        marginTop:\"100px\"\r\n    },\r\n    errorCode:{\r\n        marginTop:\"60px\",\r\n        fontSize:\"30px\",\r\n        fontWeight:900,\r\n        color:\"red\"\r\n    },\r\n    errorMessage:{\r\n        fontSize:\"25px\"\r\n    }\r\n      \r\n}));","import { Container, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./errorStyles\";\r\n\r\n\r\n\r\nexport default function AuthError(data){\r\n    console.log(\"data - \",data)\r\n    const classes=useStyles()\r\n    const errorCode=data.errorCode;\r\n    const errorMessage=data.errorMessage;\r\n    return(\r\n        <Container>\r\n            <Grid container direction=\"column\" justifyContent=\"center\">\r\n                <Grid item className={classes.logocontainer}>\r\n                    <div > \r\n                        <img \r\n                        src=\"/App_Icon.png\"\r\n                        style={{ width: 220, height: 80,color:\"white\" }}\r\n                        alt=\"Logo\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <div className={classes.errorCode}>Error: {errorCode}</div>\r\n                </Grid>\r\n                    \r\n                <Grid item>\r\n                    <div className={classes.errorMessage}>{errorMessage}</div>\r\n                </Grid>\r\n\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\";\r\nimport * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst { MarkerWithLabel } = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\r\n\r\nconst GoogleMapLive = withScriptjs(\r\n  withGoogleMap(\r\n    ({\r\n      liveLocations,\r\n      defaultZoom,\r\n      defaultCenter,\r\n      postOfficeLocation\r\n      \r\n    }) => {\r\n      const lengthOfLiveLocationList = liveLocations.length;\r\n      const [isInfoWindowShowing, setInfoWindowShowing] = React.useState(\r\n        new Array(lengthOfLiveLocationList).fill(false)\r\n      );\r\n      \r\n      React.useEffect(() => {\r\n        setInfoWindowShowing(new Array(lengthOfLiveLocationList).fill(false));\r\n      }, []);\r\n\r\n      const postmanIcon={\r\n          url: `http://maps.google.com/mapfiles/ms/micons/police.png`,\r\n          scaledSize: new window.google.maps.Size(28, 28),\r\n          labelOrigin: new window.google.maps.Point(19, 12)\r\n        };\r\n      const postOfficeIcon={\r\n          url: `http://maps.google.com/mapfiles/ms/micons/rangerstation.png`,\r\n          scaledSize: new window.google.maps.Size(42, 42),\r\n          labelOrigin: new window.google.maps.Point(19, 12)\r\n      }\r\n      \r\n      return (\r\n        <div >\r\n          <GoogleMap options={{ fullscreenControl: false }} defaultCenter={defaultCenter} defaultZoom={defaultZoom}>\r\n            <Marker\r\n              position={{ lat: postOfficeLocation._lat, lng:  postOfficeLocation._long}}\r\n              icon={postOfficeIcon}\r\n            />\r\n\r\n          {liveLocations.map((postman,index)=>{\r\n              return(\r\n    \r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: postman.location.lat, lng:  postman.location.lng}}\r\n                  icon={postmanIcon}\r\n                  onClick={() => {\r\n                    isInfoWindowShowing[index] = !isInfoWindowShowing[index];\r\n                    setInfoWindowShowing(JSON.parse(JSON.stringify(isInfoWindowShowing)));\r\n                  }}\r\n                >\r\n                  {isInfoWindowShowing[index] && (\r\n                    <InfoWindow\r\n                    options={{\r\n                          backgroundColor:\"red\",\r\n                          boxStyle: {\r\n                              boxShadow: `3px 3px 10px rgba(0,0,0,0.6)`\r\n                          },\r\n                          \r\n                      }}\r\n                      onCloseClick={() => {\r\n                        isInfoWindowShowing[index] = false;\r\n                        setInfoWindowShowing(JSON.parse(JSON.stringify(isInfoWindowShowing)));\r\n                      }}\r\n                    >\r\n                      <div >\r\n                        <p style={{fontWeight:\"bold\"}}>Name: {postman.firstName+\" \"+postman.lastName}</p>\r\n                        <p >Email: {postman.email}</p>\r\n                        <p >Contact Number: {postman.contactNumber}</p>\r\n                        <p >Last seen: {dateFormat(new Date(postman.timeStamp), \"dd/mm/yyyy hh:MM TT\")}</p>\r\n                        \r\n                      </div>\r\n                    </InfoWindow>\r\n                  )}\r\n                </Marker>  \r\n                  )\r\n          })}\r\n         \r\n          </GoogleMap>\r\n        </div>\r\n      );\r\n    }\r\n  )\r\n);\r\n\r\nexport default GoogleMapLive;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    Map:{\r\n        \r\n       \r\n    }\r\n}));","export const GET_LOCATIONS_REQUEST = \"GET_LOCATIONS_REQUEST\";\r\nexport const GET_LOCATIONS_SUCCESS = \"GET_LOCATIONS_SUCCESS\";\r\nexport const GET_LOCATIONS_ERROR = \"GET_LOCATIONS_ERROR\";","import * as actionTypes from \"./liveDeliveryActionTypes.js\";\r\n\r\nexport function getLocationsRequest(postOffice) {\r\n  return { type: actionTypes.GET_LOCATIONS_REQUEST, postOffice };\r\n}\r\n\r\nexport function getLocationsSuccess(locationData,postOfficeData) {\r\n    //console.log(\"loc success here\",data)\r\n    return { type: actionTypes.GET_LOCATIONS_SUCCESS, locationData:locationData,postOfficeData:postOfficeData};\r\n  }\r\n\r\nexport function getLocationsError(error) {\r\n  return { type: actionTypes.GET_LOCATIONS_ERROR, error };\r\n}","import React, { useEffect } from \"react\";\r\nimport Nav from \"./../../components/SidePanel/sidePanel\";\r\nimport {\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker,\r\n  } from \"react-google-maps\";\r\nimport GoogleMapLive from \"./../../components/GoogleMap/googleMap\";\r\nimport TopBar from \"./../../components/TopBar/topBar\";\r\nimport {useStyles} from \"./liveDeliveryStyles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLocationsRequest } from \"./liveDeliveryActions\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\nexport default function LiveDelivery(){\r\n    const classes=useStyles();\r\n    const liveLocations = useSelector((state) => state.LiveDeliveryReducer); \r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n      dispatch(getLocationsRequest(postOffice))\r\n    },[dispatch])\r\n    const defaultMapOptions = {fullscreenControl: true};\r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Live Delivery\"/>\r\n                {(liveLocations.locationsRetrieved)?\r\n                <div className={classes.Map}>\r\n                    <GoogleMapLive\r\n                        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyC2lWdYmx2Q8xZEENBM7FYfa5XJCVSIRIg&v=3.exp&libraries=geometry,drawing,places`}\r\n                        loadingElement={<div style={{ height: \"100%\" }} />}\r\n                        containerElement={<div style={{ height: \"90vh\", width: \"100%\",backgroundColor:\"#fcdcdc\" }} />}\r\n                        mapElement={<div style={{ height: \"100%\" }} />}\r\n                        liveLocations={liveLocations.locationData}\r\n                        postOfficeLocation={liveLocations.postOffice}\r\n                        defaultOptions={defaultMapOptions}\r\n                        showLabels={[]}\r\n                        defaultZoom={14.0} \r\n                        defaultCenter={{lat: liveLocations.postOffice._lat, lng:liveLocations.postOffice._long}}\r\n                    />\r\n                </div>\r\n                :((liveLocations.isLoading)?\r\n                (<Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                >\r\n                    <Grid item>\r\n                    <CircularProgress size={60} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n                    </Grid>\r\n                </Grid>):(\r\n                <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>))}\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    InputLine:{\r\n        marginBottom:\"6px\",\r\n        marginLeft:\"80px\",\r\n    },\r\n    InputLabel:{\r\n        textAlign:\"left\",\r\n        minWidth:\"238px\",\r\n        fontSize:\"18px\",\r\n        marginTop:\"14px\",\r\n        \r\n    },\r\n    Input:{\r\n        marginLeft:\"70px\",\r\n        minWidth:\"350px\",\r\n        \r\n    },\r\n      Form:{\r\n        backgroundColor: \"#dddce6\",\r\n        marginTop:\"30px\",\r\n        paddingTop:\"50px\",\r\n        marginLeft:\"30px\",\r\n        marginRight:\"30px\",\r\n        marginBottom:\"50px\",\r\n        paddingBottom:\"60px\",\r\n        borderRadius:10\r\n      },\r\n      password: {\r\n        marginBottom: \"16px\",\r\n        height: \"48px\",\r\n        backgroundColor: \"#FDFDFD !important\",\r\n        fontFamily: \"Poppins\",\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        borderColor: \"#D9EAFD\",\r\n        borderRadius: 8,\r\n      },\r\n      ErrorText:{\r\n          marginTop:\"14px\",\r\n          color: \"#6e0603\",\r\n      },\r\n      errorText: {\r\n        fontSize: \"14px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"4px\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      successText: {\r\n        fontSize: \"16px\",\r\n        color: \"green\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      loadingText: {\r\n        fontSize: \"16px\",\r\n        color: \"orange\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      errorTextMsg: {\r\n        fontSize: \"16px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"35%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n\r\n}))\r\n\r\nexport const LoginButton = withStyles(() => ({\r\n  root: {\r\n    textDecoration:\"none\",\r\n    color:\"white\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#01011a\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"#000000\",\r\n        fontSize:\"14px\"\r\n    },\r\n    minWidth:\"100px\"\r\n    },\r\n  }))(Button);\r\n\r\n  export const styles = makeStyles(() => ({\r\n    errorText: {\r\n      fontSize: \"12px\",\r\n      color: \"#F7685B\",\r\n      \r\n      float: \"left\",\r\n      marginLeft: \"13px\",\r\n      fontFamily: \"Poppins\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 600,\r\n    },\r\n  }));","export const ADD_EMPLOYEE_REQUEST=\"ADD_EMPLOYEE_REQUEST\";\r\nexport const ADD_EMPLOYEE_SUCCESS=\"ADD_EMPLOYEE_SUCCESS\";\r\nexport const ADD_EMPLOYEE_ERROR=\"ADD_EMPLOYEE_ERROR\"","import * as actionTypes from \"./registrationActionTypes\"\r\n\r\nexport function addEmployee(data,idToken){\r\n    return {type:actionTypes.ADD_EMPLOYEE_REQUEST,data,idToken}\r\n}\r\n\r\nexport function addEmployeeSuccess(){\r\n    return {type:actionTypes.ADD_EMPLOYEE_SUCCESS}\r\n}\r\n\r\nexport function addEmployeeError(data){\r\n    return {type:actionTypes.ADD_EMPLOYEE_ERROR,data}\r\n}","import React, {useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    IconButton,\r\n    InputAdornment,\r\n    TextField,\r\n    withStyles,\r\n    withWidth,\r\n    Grid,\r\n  } from \"@material-ui/core\";\r\n  import Visibility from \"@material-ui/icons/Visibility\";\r\n  import VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\n  import { useFormik } from \"formik\";\r\n  import {useStyles,styles,LoginButton} from \"./registrationStyles\";\r\n  import {addEmployee} from \"../../views/Registration/registrationAction\";\r\n  import { MenuItem } from '@material-ui/core';\r\n\r\n\r\nfunction RegistrationForm(data){\r\n    const classes=useStyles()\r\n    const newClasses=styles()\r\n    const { error } = [];\r\n    const dispatch = useDispatch();\r\n    const userID = useSelector((state) => state.homeReducer.currentUserID);\r\n    const registrationReducer = useSelector((state) => state.registrationReducer);     \r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const idToken=useSelector((state) => state.loginReducer.idToken);\r\n    const [showPassword1, setShowPassword1] = useState(false);\r\n    const handleClickShowPassword1 = () => setShowPassword1(!showPassword1);\r\n    const handleMouseDownPassword1 = () => setShowPassword1(!showPassword1);\r\n    const [showPassword2, setShowPassword2] = useState(false);\r\n    const handleClickShowPassword2 = () => setShowPassword2(!showPassword2);\r\n    const handleMouseDownPassword2 = () => setShowPassword2(!showPassword2);\r\n    const validate = (values) => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = \"Email field is required\";\r\n        } \r\n        else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n        if(!values.firstName){\r\n            errors.firstName = \"First name is required\";\r\n        }if(!values.lastName){\r\n            errors.lastName = \"Last name is required\";\r\n        }\r\n        if(!values.contactNumber){\r\n            errors.contactNumber = \"Contact Number is required\";\r\n        }\r\n        if(!values.nic){\r\n            errors.nic = \"NIC is required\";\r\n        }\r\n        if(!values.password2){\r\n            errors.password2 = \"Password confirmation is required\";\r\n        }\r\n        if(values.password2!=values.password1){\r\n            errors.password2 = \"Password confirmation is incorrect\";\r\n        }\r\n        if(!values.role){\r\n            errors.role = \"Employee role is required\";\r\n        }\r\n        \r\n        if (!values.password1) {\r\n          errors.password1 = \"Password field is required\";\r\n        } else if (values.password1.length < 6) {\r\n          errors.password1 = \"Password should contain atleast 6 characters\";\r\n        }\r\n        return errors;\r\n      };\r\n    \r\n    \r\n    \r\n      const formik = useFormik({\r\n        initialValues: {\r\n          email: \"\",\r\n          password1: \"111111\",\r\n          firstName:\"\",\r\n          lastName:\"\",\r\n          contactNumber:\"\",\r\n          nic:\"\",\r\n          password2:\"111111\",\r\n          postOffice:postOffice,\r\n          role:\"\",\r\n          userID:userID\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n          formik.touched.email = false;\r\n          formik.touched.password1 = false;\r\n          formik.touched.firstName=false;\r\n          formik.touched.lastName=false;\r\n          formik.touched.contactNumber=false;\r\n          formik.touched.nic=false;\r\n          formik.touched.password2=false;\r\n          formik.touched.role=false;\r\n          dispatch(addEmployee(values,idToken));\r\n        },\r\n      });\r\n\r\n    return(\r\n        <div className={classes.Form}>\r\n            <Grid container alignItems={\"center\"} >\r\n                <Grid item > \r\n                    <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Firstname</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.firstName}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.firstName && formik.errors.firstName !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.firstName}</p>\r\n                                ) : null}\r\n                                {formik.errors.firstName === undefined && !formik.touched.firstName ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Lastname</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.lastName}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.lastName && formik.errors.lastName !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.lastName}</p>\r\n                                ) : null}\r\n                                {formik.errors.lastName === undefined && !formik.touched.lastName ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Type</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"                    \r\n                                    name=\"role\"                                 \r\n                                    onChange={formik.handleChange}\r\n                                    select \r\n                                    label=\"Employee Type\" \r\n                                >\r\n                                    {data.employeeTypes.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.role && formik.errors.role !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.role}</p>\r\n                                ) : null}\r\n                                {formik.errors.role === undefined && !formik.touched.role ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Contact Number</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"contactNumber\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.contactNumber}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.contactNumber && formik.errors.contactNumber !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.contactNumber}</p>\r\n                                ) : null}\r\n                                {formik.errors.contactNumber=== undefined && !formik.touched.contactNumber ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        \r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee NIC Number</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"nic\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.nic}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.nic && formik.errors.nic !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.nic}</p>\r\n                                ) : null}\r\n                                {formik.errors.nic === undefined && !formik.touched.nic ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Email</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.email}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.email && formik.errors.email !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.email}</p>\r\n                                ) : null}\r\n                                {formik.errors.email === undefined && !formik.touched.email ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                            \r\n                        <Grid container spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Password</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input}>\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        id=\"outlined-basic\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"password1\"\r\n                                        type={showPassword1 ? \"text\" : \"password\"}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.password1}\r\n                                        InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                            {formik.values.password1 !== \"\" ? (\r\n                                                <IconButton\r\n                                                style={{ color: \"#090726\" }}\r\n                                                id=\"iconButton\"\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword1}\r\n                                                onMouseDown={handleMouseDownPassword1}\r\n                                                >\r\n                                                {showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            ) : (\r\n                                                <p />\r\n                                            )}\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                        \r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item className={classes.ErrorText}>\r\n                                    <span>\r\n                                        {formik.touched.password1 && formik.errors.password1 !== undefined ? (\r\n                                            <span><p className={classes.errorText}>{formik.errors.password1}</p></span>\r\n                                        ) : null}\r\n                                    </span>\r\n                                </Grid>\r\n                            </Grid>  \r\n\r\n\r\n\r\n                            <Grid container spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div> Confirm Password</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input}>\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        id=\"outlined-basic\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"password2\"\r\n                                        type={showPassword2 ? \"text\" : \"password\"}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.password2}\r\n                                        InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                            {formik.values.password2 !== \"\" ? (\r\n                                                <IconButton\r\n                                                style={{ color: \"#090726\" }}\r\n                                                id=\"iconButton\"\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword2}\r\n                                                onMouseDown={handleMouseDownPassword2}\r\n                                                >\r\n                                                {showPassword2 ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            ) : (\r\n                                                <p />\r\n                                            )}\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                        \r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item className={classes.ErrorText}>\r\n                                    <span>\r\n                                        {formik.touched.password2 && formik.errors.password2 !== undefined ? (\r\n                                            <span><p className={classes.errorText}>{formik.errors.password2}</p></span>\r\n                                        ) : null}\r\n                                    </span>\r\n                                </Grid>\r\n                            </Grid> \r\n\r\n\r\n                            <Grid container direction=\"column\" style={{marginBelow:\"50px\"}}>\r\n                                <Grid item>\r\n                                     <span>\r\n                                    {(registrationReducer.isRequested==false && registrationReducer.requestSuccessful==false && registrationReducer.requestUnSuccessful==true) ? (\r\n                                        <p className={classes.errorTextMsg}>Registration Unsuccessfull Try Again</p>\r\n                                    ) : null}\r\n                                    {(registrationReducer.isRequested==false && registrationReducer.requestSuccessful==true && registrationReducer.requestUnSuccessful==false) ? (\r\n                                        <p className={classes.successText}>Registration Successfull</p>\r\n                                    ) : null}\r\n                                    {(registrationReducer.isRequested==true && registrationReducer.requestSuccessful==false && registrationReducer.requestUnSuccessful==false) ? (\r\n                                        <p className={classes.loadingText}>Registering..........</p>\r\n                                    ) : null}\r\n                                    </span>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <LoginButton\r\n                                        variant=\"contained\"\r\n                                        color=\"#63231c\"\r\n                                        className={classes.loginButton}\r\n                                        disableElevation\r\n                                        type=\"submit\"\r\n                                        \r\n                                    >\r\n                                        REGISTER EMPLOYEE\r\n                                    </LoginButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;","import React from \"react\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport RegistrationForm from \"../../components/Registration/registration\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Registration(){\r\n    const userType = useSelector((state) => state.homeReducer.role); \r\n    const employeeTypesPostmaster = [\r\n            {\r\n                label: \"Postmaster\",\r\n                value: \"postmaster\"\r\n            },\r\n            {\r\n                label: \"Supervisor\",\r\n                value: \"supervisor\"\r\n            },\r\n            {\r\n                label: \"Receptionist\",\r\n                value: \"receptionist\"\r\n            },\r\n            {\r\n                label: \"Postman\",\r\n                value: \"postman\"\r\n            },\r\n            {\r\n                label: \"Delivery Log Keeper\",\r\n                value: \"deliveryLogKeeper\"\r\n            }\r\n            ]\r\n\r\n    const employeeTypesSupervisor = [\r\n                {\r\n                    label: \"Receptionist\",\r\n                    value: \"receptionist\"\r\n                },\r\n                {\r\n                    label: \"Postman\",\r\n                    value: \"postman\"\r\n                },\r\n                {\r\n                    label: \"Delivery Log Keeper\",\r\n                    value: \"deliveryLogKeeper\"\r\n                }\r\n                ]\r\n    \r\n   \r\n    return(\r\n        <div style={{backgroundColor: \"#fab8b6\"}}>\r\n            <Nav>\r\n                <TopBar page=\"Registration\"/>\r\n                {userType==\"postmaster\"?\r\n                    <RegistrationForm employeeTypes={employeeTypesPostmaster}/>\r\n                    :\r\n                    <RegistrationForm employeeTypes={employeeTypesSupervisor}/>\r\n                }\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { PieChart,Pie ,Cell } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction RevenueChart(){\r\n \r\n  const data = useSelector((state) => state.statisticsReducer.revenuePieData); \r\n      let renderLabel = function(entry) {\r\n        return entry.name;\r\n    } \r\n      const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n    return(\r\n        <PieChart width={500} height={350}>\r\n            <Pie data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={130} fill=\"#8884d8\" label={renderLabel} >\r\n            {data?.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n            </Pie>\r\n\r\n            \r\n        </PieChart>\r\n    )\r\n}\r\n\r\nexport default RevenueChart;\r\n\r\n","import {React} from \"react\";\r\nimport { LineChart, CartesianGrid,XAxis,YAxis,Tooltip,Legend,Line  } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction AcceptedServiceTypesLineChart(){\r\n  const data = useSelector((state) => state.statisticsReducer.countData);\r\n    return (\r\n        <LineChart width={1050} height={400} data={data}\r\n            margin={{ top: 5, right: 5, left: 10, bottom: 5 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"Date\" />\r\n            <YAxis label={{ value: 'Number of Items', angle: -90, position: 'insideLeft', textAnchor: 'middle' }} />\r\n            <Tooltip />\r\n            <Legend  />\r\n            <Line type=\"monotone\" dataKey=\"Registered Mail\" stroke=\"#8884d8\" />\r\n            <Line type=\"monotone\" dataKey=\"Normal Mail\" stroke=\"#82ca9d\" />\r\n            <Line type=\"monotone\" dataKey=\"Money Order\" stroke=\"#daa1e3\" />\r\n            <Line type=\"monotone\" dataKey=\"Package Delievery\" stroke=\"#dbd939\" />\r\n        </LineChart>\r\n    )\r\n}\r\n\r\nexport default AcceptedServiceTypesLineChart;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    PieBox:{\r\n        textAlign: \"center\",\r\n      \r\n    },\r\n    PieGrid:{\r\n        marginTop:\"30px\"\r\n    },\r\n    PieTitle:{\r\n        fontFamily: \"Rubik, sans-serif\",\r\n        fontSize: \"16px\",\r\n    }\r\n}));","import React,{useEffect} from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport Grid from '@material-ui/core/Grid';\r\n//import {performanceDataRequest} from \"../../views/Home/Dashboard/dashboardActions\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\n\r\nfunction DateFramePicker(props){\r\n    const { startDate, setStartDate, startLabel, endDate, setEndDate, endLabel } = props;\r\n    console.log(\"prps \",props)\r\n    //const postOffice = useSelector((state) => state.homeReducer.postOffice);\r\n    const [startDateError, setStartDateError] = React.useState(\"\");\r\n    const [endDateError, setEndDateError] = React.useState(\"\");\r\n    console.log(\"out - \",startDate)\r\n   /* console.log(\"fram - \",startDate,endDate);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(performanceDataRequest(startDate,endDate,postOffice))\r\n    },[dispatch,startDate,endDate,postOffice]);\r\n    const handleStartDateChange = (date) => {\r\n        console.log(\"handle start\",date,startDate,endDate)\r\n        if(date<endDate){\r\n            setStartDate(date);\r\n        }\r\n        else{\r\n            setStartDateError(\"Invalid Date\")\r\n        }\r\n      };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        console.log(\"handle end\",date,startDate,endDate)\r\n        setEndDate(date);\r\n      };*/\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\"  spacing={3}>\r\n            <Grid item>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                <KeyboardDatePicker\r\n                    disableFuture\r\n                    disableToolbar\r\n                    inputVariant=\"filled\"\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date1-picker-inline\"\r\n                    label={startLabel}\r\n                    value={startDate}\r\n                    error={false}\r\n                    helperText={null}\r\n                    onError={setStartDateError}\r\n                    onChange = {(event, newValue, previousValue, name) => {\r\n                        if(event==\"Invalid Date\"){ \r\n                            setStartDateError(\"Invalid Date\")  \r\n                        }else{\r\n                        if(event!==null){\r\n                            setStartDateError(\"\")\r\n                            setStartDate(event)\r\n                        }\r\n                        else{\r\n                            setStartDateError(\"Invalid Date\");\r\n                        }\r\n                        } \r\n                        }}\r\n                    KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\"\r\n                    }}\r\n                    InputProps={{\r\n                        disableUnderline: true\r\n                    }}\r\n                    />\r\n                </Grid>\r\n                <Grid item >\r\n                    <span style={{ color:\"red\",textAlign:\"left\"}}>{startDateError.length>0?\"Invalid Start date\":null}</span>\r\n                </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        \r\n        <Grid item>\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n            <KeyboardDatePicker\r\n                disableFuture\r\n                disableToolbar\r\n                inputVariant=\"filled\"\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date2-picker-inline\"\r\n                label={endLabel}\r\n                value={endDate}\r\n                error={false}\r\n                helperText={null}\r\n                onError={setEndDateError}\r\n                onChange = {(event, newValue, previousValue, name) => {\r\n                    if(event==\"Invalid Date\"){ \r\n                        setEndDateError(\"Invalid Date\")  \r\n                    }else{\r\n                    if(event!==null){\r\n                        setEndDateError(\"\")\r\n                        setEndDate(event)\r\n                    }\r\n                    else{\r\n                        setEndDateError(\"Invalid Date\");\r\n                    }\r\n                    } \r\n                    }}\r\n                KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\"\r\n                }}\r\n                InputProps={{\r\n                    disableUnderline: true\r\n                }}\r\n                />\r\n            </Grid>\r\n            <Grid item >\r\n                <span style={{ color:\"red\",textAlign:\"left\"}}>{endDateError.length>0?\"Invalid End date\":null}</span>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\nexport default DateFramePicker;","export const COUNT_DATA_REQUEST = \"COUNT_DATA_REQUEST\";\r\nexport const COUNT_DATA_SUCCESS = \"COUNT_DATA_SUCCESS\";\r\nexport const COUNT_DATA_ERROR = \"COUNT_DATA_ERROR\";","import * as actionTypes from \"./statisticActionTypes\";\r\n\r\nexport function countDataRequest(startDate,endDate,postOffice) {\r\n  return { type: actionTypes.COUNT_DATA_REQUEST,startDate,endDate,postOffice};\r\n}\r\n\r\nexport function countDataSuccess(countList,revenuePieData,countPieData) {\r\n  return { type: actionTypes.COUNT_DATA_SUCCESS,countList,revenuePieData,countPieData};\r\n}\r\n\r\nexport function countDataError() {\r\n  return { type: actionTypes.COUNT_DATA_ERROR };\r\n}\r\n","import React from \"react\"\r\nimport { PieChart,Pie ,Cell } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction CountChart(){\r\n \r\n  const data = useSelector((state) => state.statisticsReducer.countPieData); \r\n      let renderLabel = function(entry) {\r\n        return entry.name;\r\n    } \r\n      const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n    return(\r\n        <PieChart width={500} height={350}>\r\n            <Pie data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={130} fill=\"#8884d8\" label={renderLabel} >\r\n            {data?.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n            </Pie>\r\n        </PieChart>\r\n    )\r\n}\r\n\r\nexport default CountChart;\r\n\r\n","import React from \"react\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ExportButton} from \"./reportStyles\";\r\n\r\n\r\nfunction StatisticsReport(){\r\n    const statisticsReducer = useSelector((state) => state.statisticsReducer); \r\n    const header=[\r\n        {label:\"Date\", key:\"Date\"},\r\n        {label:\"Normal Mail\", key:\"Normal Mail\"},\r\n        {label:\"Registered Mail\", key:\"Registered Mail\"},\r\n        {label:\"Money Order\", key:\"Money Order\"},\r\n        {label:\"Package Delievery\", key:\"Package Delievery\"},\r\n    ]\r\n    const csvReport={\r\n        filename:\"Statistics-Report.csv\",\r\n        headers:header,\r\n        data:statisticsReducer.countData\r\n    }\r\n    return(   \r\n            <div>\r\n                <CSVLink {...csvReport} style={{textDecoration:\"none\"}}>\r\n                    <ExportButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        \r\n                        type=\"submit\"  \r\n                        >\r\n                            EXPORT STATISTICS REPORT\r\n                    </ExportButton>\r\n                </CSVLink>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default StatisticsReport;","import React,{useEffect} from \"react\";\r\nimport Nav from \"./../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"./../../components/TopBar/topBar\";\r\nimport RevenueChart from \"../../components/Charts/PieCharts/revenueChart\";\r\nimport AcceptedServiceTypesLineChart from \"../../components/Charts/AcceptedServiceTypeLineChart/acceptedServiceTypesLineChart\";\r\nimport { useStyles } from \"./statisticsStyles\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport DateFramePicker from \"../../components/DatePicker/dateFramePicker\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { countDataRequest } from \"./statisticsActions\";\r\nimport CountChart from \"../../components/Charts/PieCharts/countChart\";\r\nimport StatisticsReport from \"../../components/Reports/statisticsReport\";\r\nimport { DateRangePick} from \"../../components/DatePicker/dateRangePicker\";\r\n\r\nexport default function Statistics(){\r\n   const classes=useStyles();\r\n   const today=new Date();\r\n   const day20 = new Date(today - 1000 * 60 * 60 * 24 * 20);\r\n   const [dateRange, setDateRange] = React.useState([day20, today]);\r\n   const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(countDataRequest(dateRange[0],dateRange[1],postOffice))\r\n    },[dispatch,dateRange,postOffice])\r\n   \r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Statistics\"/>\r\n                <div>\r\n                    <Grid container direction=\"row\" justifyContent=\"center\" spacing={5}>\r\n                        <Grid item>\r\n                            <DateRangePick\r\n                                dateRange={dateRange}\r\n                                setDateRange={setDateRange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={{marginTop:\"5px\"}}>\r\n                            <StatisticsReport/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div style={{marginTop:\"80px\"}}>\r\n                    <AcceptedServiceTypesLineChart/>\r\n                </div>\r\n                <Grid container direction=\"row\" spacing={0} alignItems={\"center\"} justify={\"space-evenly\"} className={classes.PieGrid}>\r\n                    <Grid item className={classes.PieBox}>\r\n                        <div className={classes.PieTitle}>Mail Service Revenue</div>\r\n                        <RevenueChart/> \r\n                    </Grid>\r\n                    <Grid item className={classes.PieBox}>   \r\n                        <div className={classes.PieTitle}>Mail Service Count</div>        \r\n                        <CountChart/>              \r\n                    </Grid>\r\n                </Grid>\r\n                <div></div>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    form:{\r\n        backgroundColor:\"#dddce6\",\r\n        justifyContent:\"center\",\r\n        maxWidth:\"850px\",\r\n        display:\"flex\",\r\n        marginLeft:\"10%\",\r\n        marginRight:\"10%\",\r\n        marginBottom:\"30px\",\r\n        border:\"8px black\",\r\n        borderRadius:10\r\n    },\r\n    button:{\r\n        alignContent:\"left\",\r\n        paddingBottom:\"15px\"\r\n  \r\n    },\r\n    fieldLabel: {\r\n        fontSize: \"18px\",\r\n        color: \"#2B292B\",\r\n        textAlign: \"left\",\r\n        fontWeight: \"normal\",\r\n      },\r\n      fieldValue: {\r\n        marginLeft:\"5px\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"18px\",\r\n        letterSpacing: \"0.25px\",\r\n        fontStyle: \"normal\",\r\n        color: \"#2B292B\",\r\n        textAlign: \"left\",\r\n       \r\n      },\r\n  }));\r\n\r\n\r\n  export const SubmitButton = withStyles(() => ({\r\n    root: {\r\n      textDecoration:\"none\",\r\n      color:\"white\",\r\n      marginTop: \"20px\",\r\n      backgroundColor: \"#1b1b2e\",\r\n      \"&:hover\": {\r\n          backgroundColor: \"#000000\",\r\n          fontSize:\"14px\"\r\n      },\r\n      minWidth:\"100px\"\r\n      }\r\n    \r\n  }))(Button);","export const COMPLAINS_DATA_REQUEST = \"COMPLAINS_DATA_REQUEST\";\r\nexport const COMPLAINS_DATA_SUCCESS = \"COMPLAINS_DATA_SUCCESS\";\r\nexport const COMPLAINS_DATA_ERROR = \"COMPLAINS_DATA_ERROR\";\r\n\r\nexport const MARK_SOLVED_REQUEST = \"MARK_SOLVED_REQUEST\";\r\nexport const MARK_SOLVED_SUCCESS = \"MARK_SOLVED_SUCCESS\";\r\nexport const MARK_SOLVED_ERROR = \"MARK_SOLVED_ERROR\";","import * as actionTypes from \"./complainsActionTypes\";\r\n\r\n// getting complins data actions\r\n\r\nexport function complainsDataRequest(postOffice) {\r\n  return { type: actionTypes.COMPLAINS_DATA_REQUEST,postOffice};\r\n}\r\n\r\nexport function complainsDataSuccess(data) {\r\n  return { type: actionTypes.COMPLAINS_DATA_SUCCESS,data};\r\n}\r\n\r\nexport function complainsDataError(error) {\r\n  return { type: actionTypes.COMPLAINS_DATA_ERROR,error};\r\n}\r\n\r\n\r\n\r\n//marking complain solved actions\r\n\r\nexport function markSolvedRequest(data) {\r\n  return { type: actionTypes. MARK_SOLVED_REQUEST,data};\r\n}\r\n\r\nexport function markSolvedSuccess() {\r\n  return { type: actionTypes.MARK_SOLVED_SUCCESS,};\r\n}\r\n\r\nexport function markSolvedError(error) {\r\n  return { type: actionTypes. MARK_SOLVED_ERROR,error};\r\n}\r\n","import React from \"react\";\r\nimport { useStyles,SubmitButton } from \"./complainStyles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { markSolvedRequest,complainsDataRequest } from \"../../views/Complains/complainsActions\";\r\n    \r\n\r\nexport default function ComplainComponent(data){\r\n    const dispatch = useDispatch();\r\n    const classes=useStyles();\r\n    const complainData=data.complain;\r\n    const postOffice = data.postOffice; \r\n    async function markAsSolved(){\r\n        dispatch(markSolvedRequest(complainData.complainID));\r\n        dispatch(complainsDataRequest(postOffice))\r\n    }\r\n    return(\r\n        <div className={classes.form}>\r\n            <Grid container direction=\"column\" >\r\n                <Grid item style={{marginTop:\"10px\"}}>\r\n\r\n                    <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginLeft:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>Name: </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue} data-testid=\"name-id\">{complainData.name}</div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginRight:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>PID: </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue}>{complainData.pid} </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid item style={{marginTop:\"10px\"}}>\r\n                    <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\">\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldLabel} style={{marginLeft:\"10px\"}}>Email: </div>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldValue}>{complainData.email}</div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\">\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldLabel}>Contact Number: </div>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldValue}>{complainData.contactNumber} </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginRight:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>Date: </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue}>{complainData.date}</div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                <Grid item style={{ marginTop:\"10px\"}}>\r\n                    <Grid container direction=\"row\" >\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginLeft:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>Content: </div>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue}>{complainData.message}</div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n\r\n\r\n                <Grid item style={{marginTop:\"10px\"}}>\r\n                    <div className={classes.button}>\r\n                        <SubmitButton\r\n                            variant=\"contained\"\r\n                            color=\"#63231c\"\r\n                            className={classes.loginButton}\r\n                            disableElevation\r\n                            type=\"submit\"\r\n                            onClick={()=>markAsSolved()}        \r\n                            >\r\n                                MARK AS RESOLVED\r\n                        </SubmitButton>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*<Grid item>\r\n    <div data-testid=\"title-id\" className={classes.title}>Title:-</div>\r\n</Grid>*/\r\n\r\n","import React,{ useEffect }  from \"react\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport ComplainComponent from \"../../components/Complain/complainComponent\";\r\nimport { complainsDataRequest } from \"./complainsActions\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\nexport default function Complains(){ \r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const dispatch = useDispatch();\r\n    const complainsReducer=useSelector((state) => state.complainsReducer); \r\n    useEffect(()=>{\r\n        dispatch(complainsDataRequest(postOffice))\r\n    },[dispatch])\r\n\r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Dashboard\"/>\r\n                    {(complainsReducer.isRequested===false && complainsReducer.dataRetrieved===true)?\r\n                    (   complainsReducer.complainData.map((complain)=>\r\n                            <div style={{marginTop:\"30px\"}}>\r\n                                <ComplainComponent complain={complain} postOffice={postOffice}/>\r\n                            </div>\r\n                        )\r\n                    ):\r\n                    ((complainsReducer.isRequested===true && complainsReducer.dataRetrieved===false)?\r\n                    (\r\n                        <Grid\r\n                            container\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                        >\r\n                            <Grid item>\r\n                            <CircularProgress size={60} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ):\r\n                    <h3>Error Occured</h3>\r\n                    )\r\n                    }\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","export const ADD_POST_START = \"ADD_POST_START\";\r\nexport const ADD_POST_SUCCESS = \"ADD_POST_SUCCESS\";\r\nexport const ADD_POST_FAIL = \"ADD_POST_FAIL\";\r\n\r\nexport const ADD_REG_POST_START = \"ADD_REG_POST_START\";\r\nexport const ADD_REG_POST_SUCCESS = \"ADD_REG_POST_SUCCESS\";\r\nexport const ADD_REG_POST_FAIL = \"ADD_REG_POST_FAIL\";\r\n\r\nexport const ADD_LOGI_POST_START = \"ADD_LOGI_POST_START\";\r\nexport const ADD_LOGI_POST_SUCCESS = \"ADD_LOGI_POST_SUCCESS\";\r\nexport const ADD_LOGI_POST_FAIL = \"ADD_LOGI_POST_FAIL\";\r\n\r\nexport const ADD_MONEYORDER_START = \"ADD_MONEYORDER_START\";\r\nexport const ADD_MONEYORDER_SUCCESS = \"ADD_MONEYORDER_SUCCESS\";\r\nexport const ADD_MONEYORDER_FAIL = \"ADD_MONEYORDER_FAIL\";\r\n\r\nexport const GET_POSTOFFICE_START=\"GET_POSTOFFICE_START\";\r\nexport const GET_POSTOFFICE_SUCCESS=\"GET_POSTOFFICE_SUCCESS\";\r\nexport const GET_POSTOFFICE_FAIL=\"GET_POSTOFFICE_FAIL\";\r\n\r\nexport const GET_MONEYORDERS_START=\"GET_MONEYORDERS_START\";\r\nexport const GET_MONEYORDERS_SUCCESS=\"GET_MONEYORDERS_SUCCESS\";\r\nexport const GET_MONEYORDERS_FAIL=\"GET_MONEYORDERS_FAIL\";\r\n\r\nexport const REMOVE_MONEY_ORDER_START=\"REMOVE_MONEY_ORDER_START\";\r\nexport const REMOVE_MONEY_ORDER_SUCCESS=\"REMOVE_MONEY_ORDER_SUCCESS\";\r\nexport const REMOVE_MONEY_ORDER_FAIL=\"REMOVE_MONEY_ORDER_FAIL\";","import * as types from \"./recepActionTypes\";\r\n\r\nexport function addPostStart (data){ \r\n    //console.log(data);\r\n    return{type: types.ADD_POST_START,data}\r\n};\r\n\r\nexport function addPostSuccess (pid){\r\n    console.log(\"at addpostsuccess\",pid);\r\n    return{type: types.ADD_POST_SUCCESS,pid}\r\n};\r\n\r\nexport function addPostFail (error){\r\n    return{type: types.ADD_POST_FAIL,error}\r\n};\r\nexport function addRegPostStart (data){ \r\n    //console.log(data);\r\n    return{type: types.ADD_REG_POST_START,data}\r\n};\r\n\r\nexport function addRegPostSuccess (pid){\r\n    //console.log(addPostSuccess);\r\n    return{type: types.ADD_REG_POST_SUCCESS,pid}\r\n};\r\n\r\nexport function addRegPostFail (error){\r\n    return{type: types.ADD_REG_POST_FAIL,error}\r\n};\r\n\r\nexport function addLogiPostStart (data){ \r\n    //console.log(data,num);\r\n    return{type: types.ADD_LOGI_POST_START,data}\r\n};\r\n\r\nexport function addLogiPostSuccess (pid){\r\n    //console.log(addPostSuccess);\r\n    return{type: types.ADD_LOGI_POST_SUCCESS,pid}\r\n};\r\n\r\nexport function addLogiPostFail (error){\r\n    return{type: types.ADD_LOGI_POST_FAIL,error}\r\n};\r\n\r\nexport function addMoneyOrderStart (data){ \r\n    //console.log(data);\r\n    return{type: types.ADD_MONEYORDER_START,data}\r\n};\r\n\r\nexport function addMoneyOrderSuccess (pid){\r\n    //console.log(addPostSuccess);\r\n    return{type: types.ADD_MONEYORDER_SUCCESS,pid}\r\n};\r\n\r\nexport function addMoneyOrderFail (error){\r\n    return{type: types.ADD_MONEYORDER_FAIL,error}\r\n};\r\n\r\nexport function getPostOfficeStart (){\r\n    //console.log(\"putpost\");\r\n    return{type: types.GET_POSTOFFICE_START}\r\n};\r\n\r\nexport function getPostOfficeSuccess (postOffice){\r\n    return{type: types.GET_POSTOFFICE_SUCCESS,postOffice}\r\n};\r\n\r\nexport function getPostOfficeFail (error){\r\n    return{type: types.GET_POSTOFFICE_FAIL,error}\r\n};\r\n\r\nexport function getMoneyOrdersStart (postOfficeID){\r\n    //console.log(\"putpost\");\r\n    return{type: types.GET_MONEYORDERS_START,postOfficeID}\r\n};\r\n\r\nexport function getMoneyOrdersSuccess (moneyOrders){\r\n    return{type: types.GET_MONEYORDERS_SUCCESS,moneyOrders}\r\n};\r\n\r\nexport function getMoneyOrdersFail (error){\r\n    return{type: types.GET_MONEYORDERS_FAIL,error}\r\n};\r\nexport function removeMoneyOrderStart (id,userID){ \r\n    //console.log(id);\r\n    return{type: types.REMOVE_MONEY_ORDER_START,id,userID}\r\n};\r\n\r\nexport function removeMoneyOrderSuccess (){\r\n    //console.log(\"at addpostsuccess\");\r\n    return{type: types.REMOVE_MONEY_ORDER_SUCCESS}\r\n};\r\n\r\nexport function removeMoneyOrderFail (error){\r\n    return{type: types.REMOVE_MONEY_ORDER_FAIL,error}\r\n};","import React from 'react';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {addPostStart} from \"../../views/RecepFunc/recepActions\";\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { Formik, useFormik } from 'formik';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Barcode from 'react-barcode';\r\nimport html2canvas from 'html2canvas';\r\n// import combinedReducers from \"../../rootReducer\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\n// import { applyMiddleware, createStore } from \"redux\";\r\n// import createSagaMiddleware from \"redux-saga\";\r\n// import { Provider } from \"react-redux\";\r\n\r\n// const sagaMiddleware = createSagaMiddleware();\r\n\r\n// const NormalFormWrapper = () => {\r\n//     const store = createStore(combinedReducers,composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n  \r\n//     return (\r\n//       <Provider store={store}> \r\n//         <NormalForm /> \r\n//       </Provider>\r\n//     )\r\n// }\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nfunction NormalForm({postOffice}) {\r\n    //console.log(\"postOffice\",postOffice);\r\n    //let today=new Date();\r\n    //let year=today.getFullYear();\r\n    //let month=today.getMonth()+1;\r\n    //let day=today.getDate();\r\n    //let tod=year.toString(10).slice(-2)+((\"0\"+month.toString(10)).slice(-2))+((\"0\"+day.toString(10)).slice(-2));\r\n    //let num='';\r\n    //var store=require('store');\r\n    const [open, setOpen] = React.useState(false);\r\n    const wrapper_ref = React.useRef();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const dispatch = useDispatch();  \r\n    // const longitude=postOffice[0].location._long;\r\n    // const latitude=postOffice[0].location._lat;\r\n    //const POcode=postOffice.map((option)=>(option.code));\r\n    const userID = useSelector((state)=>state.homeReducer.currentUserID); \r\n    const pid = useSelector((state)=>state.postOfficeReducer.pid);\r\n    \r\n    //const Pid=tod+POcode[0]+POcode[1];\r\n    \r\n    const initialState=useFormik({\r\n        initialValues:{  \r\n            recipientName:\"\",\r\n            recipientAddressNo:\"\",\r\n            recipientStreet1:\"\",\r\n            recipientStreet2:\"\",\r\n            recipientCity:\"\",\r\n            cost:\"\",\r\n            employee:userID,\r\n            acceptedPostOffice:\"\",\r\n            destinationPostOffice:\"\",\r\n                \r\n        },\r\n        onSubmit:(values,{resetForm})=>{\r\n            // if ((store.get(\"pid\")==null)||(store.get('pid').date!==tod)){\r\n            //     store.set(\"pid\",{date:tod,number:'0001'});\r\n            //     num='0001';\r\n            // }else{\r\n            //     num=('0000'+(parseInt(store.get('pid').number)+1).toString()).slice(-4);\r\n            //     store.set(\"pid\",{date:tod,number:num});\r\n            // }    \r\n            initialState.touched.recipientName=false;\r\n            initialState.touched.recipientAddressNo=false;\r\n            initialState.touched.recipientStreet1=false;\r\n            initialState.touched.recipientStreet2=false;\r\n            initialState.touched.recipientCity=false;\r\n            initialState.touched.cost=false;\r\n            initialState.touched.pid=false;\r\n            initialState.touched.employee=false;\r\n            initialState.touched.acceptedPostOffice=false;\r\n            initialState.touched.destinationPostOffice=false;\r\n            initialState.touched.long=false;\r\n            initialState.touched.lat=false;\r\n            dispatch(addPostStart(initialState));\r\n            handleClickOpen();\r\n            resetForm({})\r\n        }\r\n    });\r\n    \r\n    //console.log(initialState);\r\n    const onClick=(e)=>{\r\n        const opt = {\r\n           scale: 4\r\n       }\r\n       const elem = wrapper_ref.current;\r\n       html2canvas(elem, opt).then(canvas => {\r\n           const iframe = document.createElement('iframe')\r\n           iframe.name = 'printf'\r\n           iframe.id = 'printf'\r\n           iframe.height = 0;\r\n           iframe.width = 0;\r\n           document.body.appendChild(iframe)\r\n   \r\n           const imgUrl = canvas.toDataURL({\r\n               format: 'jpeg',\r\n               quality: '1.0'\r\n           })\r\n   \r\n           const style=`\r\n               height:100vh;\r\n               width:100vw;\r\n               position:absolute;\r\n               left:0:\r\n               top:0;\r\n           `;\r\n   \r\n           const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n           var newWin = window.frames[\"printf\"];\r\n           newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n           newWin.document.close();\r\n   \r\n       });\r\n       handleClose();\r\n    }\r\n    const classes = useStyles();\r\n    \r\n     \r\n                        \r\n    \r\n    return ( \r\n        <>\r\n            <Formik>\r\n                \r\n                <Container role=\"combobox\" maxWidth=\"sm\">\r\n                    <h1>Normal Post</h1>\r\n                    <form  data-testid=\"normal-form\" className=\"form\" onSubmit={initialState.handleSubmit}>                            \r\n                        <div className=\"form-group-recipientName\">\r\n                            <TextField\r\n                                required\r\n                                data-testid=\"recipientName\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientName\"\r\n                                value={initialState.values.recipientName}\r\n                                onChange={initialState.handleChange}\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group-recipientAddressNo\">\r\n                            <TextField\r\n                                required\r\n                                data-testid=\"recipientAddressNo\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientAddressNo\"\r\n                                value={initialState.values.recipientAddressNo}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Address No\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group-recipientStreet1\">\r\n                            <TextField\r\n                                required\r\n                                data-testid=\"recipientStreet1\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientStreet1\"\r\n                                value={initialState.values.recipientStreet1}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Street 1\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group-recipientStreet2\">\r\n                            <TextField\r\n                                \r\n                                \r\n                                \r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientStreet2\"\r\n                                value={initialState.values.recipientStreet2}\r\n                                \r\n                                onChange={initialState.handleChange}\r\n                                data-testid=\"recipientStreet2\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Street 2\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group-recipientCity\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientCity\"\r\n                                value={initialState.values.recipientCity}\r\n                                onChange={initialState.handleChange}\r\n                                data-testid=\"recipientCity\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's City\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group-cost\">\r\n                            <TextField\r\n                                required\r\n                               \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"cost\"\r\n                                value={initialState.values.cost}\r\n                                onChange={initialState.handleChange}\r\n                                data-testid=\"cost\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Cost\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        \r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}placeholder=\"acceptedPostOffice\">\r\n                            <InputLabel id=\"acceptedPostOffice\">Accepted PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            key={initialState.values.acceptedPostOffice.city}\r\n                            label=\"acceptedPostOffices\"\r\n                            data-testid={initialState.values.acceptedPostOffice.city}\r\n                            name=\"acceptedPostOffice\"\r\n                            value={initialState.values.acceptedPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            placeholder=\"Accepted PostOffice\"\r\n                            \r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option} key={option.code}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                        \r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}>\r\n                            <InputLabel id=\"destinationPostOffice\">Destination PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            key={initialState.values.destinationPostOffice}\r\n                            labelId=\"destinationPostOffice\"\r\n                            data-testid={initialState.values.destinationPostOffice}\r\n                            name=\"destinationPostOffice\"\r\n                            value={initialState.values.destinationPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            placeholder=\"Destination PostOffice\"\r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option.code} label={option.city}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                            \r\n                        <Button type=\"submit\"  variant=\"contained\"color=\"primary\"  value=\"add\">Submit</Button>\r\n                        <br/><br/>\r\n                    </form>\r\n\r\n                </Container>\r\n            </Formik>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Barcode for the Post\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    <div ref={wrapper_ref}>\r\n                        <Barcode value={pid} />\r\n                    </div>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={onClick} color=\"primary\">\r\n                    Print\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </>\r\n     );\r\n     \r\n                            \r\n    \r\n}\r\n\r\nexport default NormalForm;","import React, {useEffect} from \"react\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {getPostOfficeStart} from \"../RecepFunc/recepActions\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport NormalForm from \"../../components/RecepForms/normalPost\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nfunction NormalPostForm() {\r\n        \r\n    const postOffice = useSelector((state) => state.postOfficeReducer);\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPostOfficeStart());\r\n        console.log(\"dcf\");\r\n    }, [dispatch])\r\n    \r\n    return(\r\n        <>\r\n            <Nav>\r\n                <TopBar page=\"\"/>\r\n                {console.log(postOffice.dataRetrieved)}\r\n                \r\n                {(postOffice.dataRetrieved)?\r\n                <div>\r\n                    <NormalForm\r\n                postOffice={postOffice.postOffice}\r\n                />\r\n                </div>\r\n                \r\n                :((postOffice.isLoading)?\r\n                (<Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                >\r\n                    <Grid item>\r\n                    <CircularProgress size={60} color=\"secondary\" />\r\n                    </Grid>\r\n                </Grid>):              \r\n                (    \r\n                <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>\r\n                ))}\r\n                \r\n            </Nav>\r\n        </>\r\n    )\r\n                            \r\n    \r\n}\r\n\r\nexport default NormalPostForm;","import React from 'react';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {addRegPostStart} from \"../../views/RecepFunc/recepActions\";\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useFormik } from 'formik';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Barcode from 'react-barcode';\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\nfunction RegisteredForm({postOffice}) {\r\n    let today=new Date();\r\n    let year=today.getFullYear();\r\n    let month=today.getMonth()+1;\r\n    let day=today.getDate();\r\n    let tod=year.toString(10).slice(-2)+((\"0\"+month.toString(10)).slice(-2))+((\"0\"+day.toString(10)).slice(-2));\r\n    let num='';\r\n    var store=require('store');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const wrapper_ref = React.useRef();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const dispatch = useDispatch();    \r\n    \r\n    const longitude=postOffice[0].location._long;\r\n    const latitude=postOffice[0].location._lat;\r\n    const POcode=postOffice.map((option)=>(option.code));\r\n    const userID = useSelector((state)=>state.homeReducer.currentUserID);   \r\n    const Pid=tod+POcode[0]+POcode[1];\r\n    const pid = useSelector((state)=>state.postOfficeReducer.pid);\r\n    \r\n    const initialState=useFormik({\r\n        initialValues:{  \r\n            senderName:\"\",\r\n            senderAddressNo:\"\",\r\n            senderStreet1:\"\",\r\n            senderStreet2:\"\",\r\n            senderCity:\"\",\r\n            senderEmail:\"\",\r\n            recipientName:\"\",\r\n            recipientAddressNo:\"\",\r\n            recipientStreet1:\"\",\r\n            recipientStreet2:\"\",\r\n            recipientCity:\"\",\r\n            cost:\"\",\r\n            pid:Pid,\r\n            employee:userID,\r\n            acceptedPostOffice:\"\",\r\n            destinationPostOffice:\"\",\r\n            long:longitude,\r\n            lat:latitude      \r\n        },\r\n        onSubmit:(values,{resetForm})=>{\r\n            if ((store.get(\"pid\")==null)||(store.get('pid').date!==tod)){\r\n                store.set(\"pid\",{date:tod,number:'0001'});\r\n                num='0001';\r\n            }else{\r\n                num=('0000'+(parseInt(store.get('pid').number)+1).toString()).slice(-4);\r\n                store.set(\"pid\",{date:tod,number:num});\r\n            }\r\n            initialState.touched.senderName=false;\r\n            initialState.touched.senderAddressNo=false;\r\n            initialState.touched.senderStreet1=false;\r\n            initialState.touched.senderStreet2=false;\r\n            initialState.touched.senderCity=false;\r\n            initialState.touched.senderEmail=false;\r\n            initialState.touched.recipientName=false;\r\n            initialState.touched.recipientAddressNo=false;\r\n            initialState.touched.recipientStreet1=false;\r\n            initialState.touched.recipientStreet2=false;\r\n            initialState.touched.recipientCity=false;\r\n            initialState.touched.cost=false;\r\n            initialState.touched.pid=false;\r\n            initialState.touched.employee=false;\r\n            initialState.touched.acceptedPostOffice=false;\r\n            initialState.touched.destinationPostOffice=false;\r\n            initialState.touched.long=false;\r\n            initialState.touched.lat=false;\r\n            dispatch(addRegPostStart(initialState,num));\r\n            handleClickOpen();\r\n            resetForm({})\r\n        }\r\n    });\r\n    \r\n    //console.log(initialState);\r\n    const onClick=(e)=>{\r\n        const opt = {\r\n           scale: 4\r\n       }\r\n       const elem = wrapper_ref.current;\r\n       html2canvas(elem, opt).then(canvas => {\r\n           const iframe = document.createElement('iframe')\r\n           iframe.name = 'printf'\r\n           iframe.id = 'printf'\r\n           iframe.height = 0;\r\n           iframe.width = 0;\r\n           document.body.appendChild(iframe)\r\n   \r\n           const imgUrl = canvas.toDataURL({\r\n               format: 'jpeg',\r\n               quality: '1.0'\r\n           })\r\n   \r\n           const style=`\r\n               height:100vh;\r\n               width:100vw;\r\n               position:absolute;\r\n               left:0:\r\n               top:0;\r\n           `;\r\n   \r\n           const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n           var newWin = window.frames[\"printf\"];\r\n           newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n           newWin.document.close();\r\n   \r\n       });\r\n       handleClose();\r\n    }\r\n    const classes = useStyles();\r\n                           \r\n    \r\n    return ( \r\n        <>\r\n            \r\n                \r\n                <Container maxWidth=\"sm\">\r\n                    <h1>Registered Post</h1>\r\n                    <form  onSubmit={initialState.handleSubmit}>  \r\n                    <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderName\"\r\n                                value={initialState.values.senderName}\r\n                                onChange={initialState.handleChange}\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderAddressNo\"\r\n                                value={initialState.values.senderAddressNo}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Address No\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                iid=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderStreet1\"\r\n                                value={initialState.values.senderStreet1}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Street 1\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                \r\n                                \r\n                                \r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderStreet2\"\r\n                                value={initialState.values.senderStreet2}\r\n                                \r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Street 2\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderCity\"\r\n                                value={initialState.values.senderCity}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's City\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div> \r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"senderEmail\"\r\n                                value={initialState.values.senderEmail}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Email\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>                         \r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientName\"\r\n                                value={initialState.values.recipientName}\r\n                                onChange={initialState.handleChange}\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientAddressNo\"\r\n                                value={initialState.values.recipientAddressNo}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Address No\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                iid=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientStreet1\"\r\n                                value={initialState.values.recipientStreet1}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Street 1\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                \r\n                                \r\n                                \r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientStreet2\"\r\n                                value={initialState.values.recipientStreet2}\r\n                                \r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Street 2\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientCity\"\r\n                                value={initialState.values.recipientCity}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's City\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                               \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"cost\"\r\n                                value={initialState.values.cost}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Cost\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Accepted PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            name=\"acceptedPostOffice\"\r\n                            value={initialState.values.acceptedPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            \r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option.code}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                        \r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Destination PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            name=\"destinationPostOffice\"\r\n                            value={initialState.values.destinationPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            fullWidth \r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option.code}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                            \r\n                        <Button type=\"submit\"  variant=\"contained\"color=\"primary\"  >Submit</Button>\r\n                        <br/><br/>\r\n                    </form>\r\n\r\n                </Container>\r\n                <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Barcode for the Post\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    <div ref={wrapper_ref}>\r\n                        <Barcode value={pid} />\r\n                    </div>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={onClick} color=\"primary\">\r\n                    Print\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        \r\n        </>\r\n     );\r\n     \r\n                            \r\n    \r\n}\r\n\r\nexport default RegisteredForm;","import React, {useEffect} from \"react\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {getPostOfficeStart} from \"../RecepFunc/recepActions\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport RegisteredForm from \"../../components/RecepForms/registeredPost\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nfunction RegisteredPostForm() {\r\n        \r\n    const postOffice = useSelector((state) => state.postOfficeReducer);\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPostOfficeStart());\r\n        console.log(\"dcf\");\r\n    }, [dispatch])\r\n    \r\n    return(\r\n        <>\r\n            <Nav>\r\n                <TopBar page=\"\"/>\r\n                {console.log(postOffice.dataRetrieved)}\r\n                \r\n                {(postOffice.dataRetrieved)?\r\n                <div>\r\n                    <RegisteredForm\r\n                postOffice={postOffice.postOffice}\r\n                />\r\n                </div>\r\n                \r\n                :((postOffice.isLoading)?\r\n                (<Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                >\r\n                    <Grid item>\r\n                    <CircularProgress size={60} color=\"secondary\" />\r\n                    </Grid>\r\n                </Grid>):              \r\n                (    \r\n                <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>\r\n                ))}\r\n                \r\n            </Nav>\r\n        </>\r\n    )\r\n                            \r\n    \r\n}\r\n\r\nexport default RegisteredPostForm;","import React from 'react';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {addLogiPostStart} from \"../../views/RecepFunc/recepActions\";\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useFormik } from 'formik';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Barcode from 'react-barcode';\r\nimport html2canvas from 'html2canvas';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\nfunction LogiForm({postOffice}) {\r\n    let today=new Date();\r\n    let year=today.getFullYear();\r\n    let month=today.getMonth()+1;\r\n    let day=today.getDate();\r\n    let tod=year.toString(10).slice(-2)+((\"0\"+month.toString(10)).slice(-2))+((\"0\"+day.toString(10)).slice(-2));\r\n    let num=''\r\n    var store=require('store');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const wrapper_ref = React.useRef();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    \r\n    const dispatch = useDispatch();    \r\n    \r\n    const longitude=postOffice[0].location._long;\r\n    const latitude=postOffice[0].location._lat;\r\n    const POcode=postOffice.map((option)=>(option.code));\r\n    const userID = useSelector((state)=>state.homeReducer.currentUserID);   \r\n    const Pid=tod+POcode[0]+POcode[1];\r\n    const pid = useSelector((state)=>state.postOfficeReducer.pid);\r\n    \r\n    const initialState=useFormik({\r\n        initialValues:{  \r\n            senderName:\"\",\r\n            senderAddressNo:\"\",\r\n            senderStreet1:\"\",\r\n            senderStreet2:\"\",\r\n            senderCity:\"\",\r\n            senderEmail:\"\",\r\n            recipientName:\"\",\r\n            recipientAddressNo:\"\",\r\n            recipientStreet1:\"\",\r\n            recipientStreet2:\"\",\r\n            recipientCity:\"\",\r\n            recipientEmail:\"\",\r\n            cost:\"\",\r\n            pid:Pid,\r\n            employee:userID,\r\n            acceptedPostOffice:\"\",\r\n            destinationPostOffice:\"\",\r\n            long:longitude,\r\n            lat:latitude ,\r\n            weight:\"\"     \r\n        },\r\n        onSubmit:(values,{resetForm})=>{\r\n            if ((store.get(\"pid\")==null)||(store.get('pid').date!==tod)){\r\n                store.set(\"pid\",{date:tod,number:'0001'});\r\n                num='0001';\r\n            }else{\r\n                num=('0000'+(parseInt(store.get('pid').number)+1).toString()).slice(-4);\r\n                store.set(\"pid\",{date:tod,number:num});\r\n            }\r\n            initialState.touched.senderName=false;\r\n            initialState.touched.senderAddressNo=false;\r\n            initialState.touched.senderStreet1=false;\r\n            initialState.touched.senderStreet2=false;\r\n            initialState.touched.senderCity=false;\r\n            initialState.touched.senderEmail=false;\r\n            initialState.touched.recipientName=false;\r\n            initialState.touched.recipientAddressNo=false;\r\n            initialState.touched.recipientStreet1=false;\r\n            initialState.touched.recipientStreet2=false;\r\n            initialState.touched.recipientCity=false;\r\n            initialState.touched.recipientEmail=false;\r\n            initialState.touched.cost=false;\r\n            initialState.touched.pid=false;\r\n            initialState.touched.employee=false;\r\n            initialState.touched.acceptedPostOffice=false;\r\n            initialState.touched.destinationPostOffice=false;\r\n            initialState.touched.long=false;\r\n            initialState.touched.lat=false;\r\n            initialState.touched.weight=false;\r\n            dispatch(addLogiPostStart(initialState,num));\r\n            handleClickOpen();\r\n            resetForm({})\r\n        }\r\n    });\r\n    \r\n    //console.log(initialState);\r\n    const onClick=(e)=>{\r\n        const opt = {\r\n           scale: 4\r\n       }\r\n       const elem = wrapper_ref.current;\r\n       html2canvas(elem, opt).then(canvas => {\r\n           const iframe = document.createElement('iframe')\r\n           iframe.name = 'printf'\r\n           iframe.id = 'printf'\r\n           iframe.height = 0;\r\n           iframe.width = 0;\r\n           document.body.appendChild(iframe)\r\n   \r\n           const imgUrl = canvas.toDataURL({\r\n               format: 'jpeg',\r\n               quality: '1.0'\r\n           })\r\n   \r\n           const style=`\r\n               height:100vh;\r\n               width:100vw;\r\n               position:absolute;\r\n               left:0:\r\n               top:0;\r\n           `;\r\n   \r\n           const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n           var newWin = window.frames[\"printf\"];\r\n           newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n           newWin.document.close();\r\n   \r\n       });\r\n       handleClose();\r\n    }\r\n    const classes = useStyles();\r\n    \r\n    \r\n\r\n    // const handleInputChange = (e)=>{\r\n    //     let{name,value}=e.target;\r\n    //     setState({\r\n    //         ...initialState,\r\n    //         [name]:value,\r\n    //     });\r\n    //     console.log(\"initial\",initialState);\r\n    // };\r\n    \r\n                        \r\n    \r\n    return ( \r\n        <>\r\n            \r\n                \r\n            <Container maxWidth=\"sm\">\r\n                    <h1>Logi Post</h1>\r\n                    <form  onSubmit={initialState.handleSubmit}>  \r\n                    <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderName\"\r\n                                value={initialState.values.senderName}\r\n                                onChange={initialState.handleChange}\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderAddressNo\"\r\n                                value={initialState.values.senderAddressNo}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Address No\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                iid=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderStreet1\"\r\n                                value={initialState.values.senderStreet1}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Street 1\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                \r\n                                \r\n                                \r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderStreet2\"\r\n                                value={initialState.values.senderStreet2}\r\n                                \r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Street 2\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderCity\"\r\n                                value={initialState.values.senderCity}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's City\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div> \r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"senderEmail\"\r\n                                value={initialState.values.senderEmail}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Email\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>                         \r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientName\"\r\n                                value={initialState.values.recipientName}\r\n                                onChange={initialState.handleChange}\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientAddressNo\"\r\n                                value={initialState.values.recipientAddressNo}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Address No\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                iid=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientStreet1\"\r\n                                value={initialState.values.recipientStreet1}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Street 1\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                \r\n                                \r\n                                \r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientStreet2\"\r\n                                value={initialState.values.recipientStreet2}\r\n                                \r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Street 2\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientCity\"\r\n                                value={initialState.values.recipientCity}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's City\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientEmail\"\r\n                                value={initialState.values.recipientEmail}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Email\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"weight\"\r\n                                value={initialState.values.weight}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Weight\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                               \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"number\"\r\n                                className=\"form-control\"\r\n                                name=\"cost\"\r\n                                value={initialState.values.cost}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Cost\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Accepted PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            name=\"acceptedPostOffice\"\r\n                            value={initialState.values.acceptedPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            \r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option.code}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                        \r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Destination PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            name=\"destinationPostOffice\"\r\n                            value={initialState.values.destinationPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            fullWidth \r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option.code}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                            \r\n                        <Button type=\"submit\"  variant=\"contained\"color=\"primary\"  >Submit</Button>\r\n                        <br/><br/>\r\n                    </form>\r\n\r\n                </Container>\r\n                <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Barcode for the Post\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    <div ref={wrapper_ref}>\r\n                        <Barcode value={pid} />\r\n                    </div>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={onClick} color=\"primary\">\r\n                    Print\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        \r\n        </>\r\n     );\r\n     \r\n                            \r\n    \r\n}\r\n\r\nexport default LogiForm;","import React, {useEffect} from \"react\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {getPostOfficeStart} from \"../RecepFunc/recepActions\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport LogiForm from \"../../components/RecepForms/logiPost\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nfunction LogiPostForm() {\r\n        \r\n    const postOffice = useSelector((state) => state.postOfficeReducer);\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPostOfficeStart());\r\n        console.log(\"dcf\");\r\n    }, [dispatch])\r\n    \r\n    return(\r\n        <>\r\n            <Nav>\r\n                <TopBar page=\"\"/>\r\n                {console.log(postOffice.dataRetrieved)}\r\n                \r\n                {(postOffice.dataRetrieved)?\r\n                <div>\r\n                    <LogiForm\r\n                postOffice={postOffice.postOffice}\r\n                />\r\n                </div>\r\n                \r\n                :((postOffice.isLoading)?\r\n                (<Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                >\r\n                    <Grid item>\r\n                    <CircularProgress size={60} color=\"secondary\" />\r\n                    </Grid>\r\n                </Grid>):              \r\n                (    \r\n                <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>\r\n                ))}\r\n                \r\n            </Nav>\r\n        </>\r\n    )\r\n                            \r\n    \r\n}\r\n\r\nexport default LogiPostForm;","import React from 'react';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {addMoneyOrderStart} from \"../../views/RecepFunc/recepActions\";\r\nimport Container from '@material-ui/core/Container';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useFormik } from 'formik';\r\n//import GenerateRandomCode from 'GenerateRandomCode';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport html2canvas from 'html2canvas';\r\n\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\nconst useStyles = makeStyles((theme) => ({\r\n    \r\n    textField: {\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: '25ch',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n  }));\r\n\r\nfunction MoneyOrderForm({postOffice}) {\r\n    let today=new Date();\r\n    let year=today.getFullYear();\r\n    let month=today.getMonth()+1;\r\n    let day=today.getDate();\r\n    let tod=year.toString(10).slice(-2)+((\"0\"+month.toString(10)).slice(-2))+((\"0\"+day.toString(10)).slice(-2));\r\n    let num='';\r\n    var store=require('store');\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const wrapper_ref = React.useRef();\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n\r\n    const dispatch = useDispatch();    \r\n    \r\n    const longitude=postOffice[0].location._long;\r\n    const latitude=postOffice[0].location._lat;\r\n    const POcode=postOffice.map((option)=>(option.code));\r\n    const userID = useSelector((state)=>state.homeReducer.currentUserID);   \r\n    const Pid=tod+POcode[0]+POcode[1];\r\n    \r\n    //console.log(\"seccode\",secCode);\r\n    const pid = useSelector((state)=>state.postOfficeReducer.pid);\r\n    \r\n    \r\n    const initialState=useFormik({\r\n        initialValues:{ \r\n            senderName:\"\",\r\n            senderID:\"\",  \r\n            recipientName:\"\",\r\n            recipientID:\"\", \r\n            cost:\"\",\r\n            pid:Pid,\r\n            employee:userID,\r\n            acceptedPostOffice:\"\",\r\n            destinationPostOffice:\"\",\r\n            long:longitude,\r\n            lat:latitude,\r\n            moneyAmount:\"\",\r\n            securityCode:Math.random().toString().slice(2,11) \r\n        },\r\n        onSubmit:(values,{resetForm})=>{\r\n            if ((store.get(\"pid\")==null)||(store.get('pid').date!==tod)){\r\n                store.set(\"pid\",{date:tod,number:'0001'});\r\n                num='0001';\r\n            }else{\r\n                num=('0000'+(parseInt(store.get('pid').number)+1).toString()).slice(-4);\r\n                store.set(\"pid\",{date:tod,number:num});\r\n            }\r\n            initialState.touched.senderName=false;\r\n            initialState.touched.senderID=false;\r\n            initialState.touched.recipientName=false;\r\n            initialState.touched.recipientID=false;\r\n            initialState.touched.cost=false;\r\n            initialState.touched.pid=false;\r\n            initialState.touched.employee=false;\r\n            initialState.touched.acceptedPostOffice=false;\r\n            initialState.touched.destinationPostOffice=false;\r\n            initialState.touched.long=false;\r\n            initialState.touched.lat=false;\r\n            initialState.touched.moneyAmount=false;\r\n            initialState.touched.securityCode=false;\r\n            dispatch(addMoneyOrderStart(initialState,num));\r\n            handleClickOpen();\r\n            resetForm({})\r\n        }\r\n    });\r\n    \r\n    //console.log(initialState);\r\n    const onClick=(e)=>{\r\n        const opt = {\r\n           scale: 4\r\n       }\r\n       const elem = wrapper_ref.current;\r\n       html2canvas(elem, opt).then(canvas => {\r\n           const iframe = document.createElement('iframe')\r\n           iframe.name = 'printf'\r\n           iframe.id = 'printf'\r\n           iframe.height = 0;\r\n           iframe.width = 0;\r\n           document.body.appendChild(iframe)\r\n   \r\n           const imgUrl = canvas.toDataURL({\r\n               format: 'jpeg',\r\n               quality: '1.0'\r\n           })\r\n   \r\n           const style=`\r\n               height:100vh;\r\n               width:100vw;\r\n               position:absolute;\r\n               left:0:\r\n               top:0;\r\n           `;\r\n   \r\n           const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n           var newWin = window.frames[\"printf\"];\r\n           newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n           newWin.document.close();\r\n   \r\n       });\r\n       handleClose();\r\n    }\r\n    const classes = useStyles();\r\n    \r\n    \r\n\r\n    // const handleInputChange = (e)=>{\r\n    //     let{name,value}=e.target;\r\n    //     setState({\r\n    //         ...initialState,\r\n    //         [name]:value,\r\n    //     });\r\n    //     console.log(\"initial\",initialState);\r\n    // };\r\n    \r\n                        \r\n    \r\n    return ( \r\n        <>\r\n            \r\n                \r\n                <Container maxWidth=\"sm\">\r\n                    <h1>Money Order</h1>\r\n                    <form  onSubmit={initialState.handleSubmit}>                            \r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderName\"\r\n                                value={initialState.values.senderName}\r\n                                onChange={initialState.handleChange}\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"senderID\"\r\n                                value={initialState.values.senderID}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Sender's ID No:\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientName\"\r\n                                value={initialState.values.recipientName}\r\n                                onChange={initialState.handleChange}\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's Name\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                                id=\"filled-full-width\"\r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"recipientID\"\r\n                                value={initialState.values.recipientID}\r\n                                onChange={initialState.handleChange}\r\n                                \r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Recipient's ID No:\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                               \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"float\"\r\n                                className=\"form-control\"\r\n                                name=\"cost\"\r\n                                value={initialState.values.cost}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Cost\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <TextField\r\n                                required\r\n                               \r\n                                label=\"required\"\r\n                                variant=\"filled\"\r\n                                type=\"float\"\r\n                                className=\"form-control\"\r\n                                name=\"moneyAmount\"\r\n                                value={initialState.values.moneyAmount}\r\n                                onChange={initialState.handleChange}\r\n                                id=\"filled-full-width\"\r\n                                style={{ margin: 8 }}\r\n                                placeholder=\"Amount of Money\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                               \r\n                            />\r\n                            \r\n                        </div>\r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Accepted PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            name=\"acceptedPostOffice\"\r\n                            value={initialState.values.acceptedPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            \r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option.code}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                        \r\n                        <FormControl variant=\"filled\" fullWidth required className={classes.formControl}>\r\n                            <InputLabel id=\"demo-simple-select-filled-label\">Destination PostOffice</InputLabel>\r\n                            \r\n                            <Select\r\n                            labelId=\"demo-simple-select-filled-label\"\r\n                            id=\"demo-simple-select-filled\"\r\n                            name=\"destinationPostOffice\"\r\n                            value={initialState.values.destinationPostOffice}\r\n                            onChange={initialState.handleChange}\r\n                            fullWidth \r\n                            >\r\n                            \r\n                            {postOffice.map((option)=> (\r\n                                <MenuItem value={option.code}>{option.city}</MenuItem>\r\n                            ))}\r\n                            \r\n                            </Select>\r\n                           \r\n                        </FormControl><br/>\r\n                            \r\n                        <Button type=\"submit\"  variant=\"contained\"color=\"primary\"  >Submit</Button>\r\n                        <br/><br/>\r\n                    </form>\r\n\r\n                </Container>\r\n                <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                <DialogTitle id=\"alert-dialog-slide-title\">{\"Barcode for the Post\"}</DialogTitle>\r\n                <DialogContent>\r\n                <DialogContentText id=\"alert-dialog-slide-description\">\r\n                    <div ref={wrapper_ref}>\r\n                        <p>PID No: {pid}<br/>\r\n                        Security Code: {initialState.values.securityCode}</p>\r\n                    \r\n                    </div>\r\n                </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                <Button onClick={onClick} color=\"primary\">\r\n                    Print\r\n                </Button>\r\n                <Button onClick={handleClose} color=\"primary\">\r\n                    Close\r\n                </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        \r\n        </>\r\n     );\r\n     \r\n                            \r\n    \r\n}\r\n\r\nexport default MoneyOrderForm;","import React, {useEffect} from \"react\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {getPostOfficeStart} from \"../RecepFunc/recepActions\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport MoneyOrderForm from \"../../components/RecepForms/moneyOrder\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nfunction MoneyOForm() {\r\n        \r\n    const postOffice = useSelector((state) => state.postOfficeReducer);\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getPostOfficeStart());\r\n        console.log(\"dcf\");\r\n    }, [dispatch])\r\n    \r\n    return(\r\n        <>\r\n            <Nav>\r\n                <TopBar page=\"\"/>\r\n                {console.log(postOffice.dataRetrieved)}\r\n                \r\n                {(postOffice.dataRetrieved)?\r\n                <div>\r\n                    <MoneyOrderForm\r\n                postOffice={postOffice.postOffice}\r\n                />\r\n                </div>\r\n                \r\n                :((postOffice.isLoading)?\r\n                (<Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                >\r\n                    <Grid item>\r\n                    <CircularProgress size={60} color=\"secondary\" />\r\n                    </Grid>\r\n                </Grid>):              \r\n                (    \r\n                <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>\r\n                ))}\r\n                \r\n            </Nav>\r\n        </>\r\n    )\r\n                            \r\n    \r\n}\r\n\r\nexport default MoneyOForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { Button, TableFooter, Typography } from '@material-ui/core';\r\nimport {removeMoneyOrderStart} from \"../../views/RecepFunc/recepActions\";\r\n\r\n\r\n\r\nconst columns = [\r\n  { id: 'pid', label: 'PID', minWidth: 170 },\r\n  { id: 'recipientID', label: 'Recipient ID', minWidth: 120 },\r\n  {id: 'recipientName',\r\n    label: 'Recipient Name',\r\n    minWidth: 170,\r\n    \r\n  },\r\n  {\r\n    id: 'securityCode',\r\n    label: 'SecurityCode',\r\n    minWidth: 60,\r\n    \r\n  },\r\n  {\r\n    id: 'moneyAmount',\r\n    label: 'Amount of Money',\r\n    minWidth: 60,\r\n    align: 'right',\r\n    \r\n  },\r\n  {\r\n    id: 'paid',\r\n    label: '',\r\n    minWidth: 100,\r\n    \r\n  },\r\n];\r\n\r\n\r\n\r\n// const rows = [\r\n//   createData('India', 'IN', 1324171354, 3287263),\r\n//   createData('China', 'CN', 1403500365, 9596961),\r\n//   createData('Italy', 'IT', 60483973, 301340),\r\n//   createData('United States', 'US', 327167434, 9833520),\r\n//   createData('Canada', 'CA', 37602103, 9984670),\r\n//   createData('Australia', 'AU', 25475400, 7692024),\r\n//   createData('Germany', 'DE', 83019200, 357578),\r\n//   createData('Ireland', 'IE', 4857000, 70273),\r\n//   createData('Mexico', 'MX', 126577691, 1972550),\r\n//   createData('Japan', 'JP', 126317000, 377973),\r\n//   createData('France', 'FR', 67022000, 640679),\r\n//   createData('United Kingdom', 'GB', 67545757, 242495),\r\n//   createData('Russia', 'RU', 146793744, 17098246),\r\n//   createData('Nigeria', 'NG', 200962417, 923768),\r\n//   createData('Brazil', 'BR', 210147125, 8515767),\r\n// ];\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '97%',\r\n    height: '95%'\r\n  },\r\n  container: {\r\n    maxHeight: 650,\r\n    borderRadius: 15,\r\n    margin: '10px 10px'\r\n  },\r\n  tableHeader:{\r\n      fontWeight:\"bold\",\r\n      backgroundColor: '#4d4dff',\r\n      color:'black'\r\n    \r\n  }\r\n  \r\n});\r\n\r\nexport default function MOTable({moneyOrders}) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const userID = useSelector((state)=>state.homeReducer.currentUserID);\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(15);\r\n  let MoneyOrders=[]\r\n  for (let i=0;i<moneyOrders.length;i++){\r\n      MoneyOrders[i]={\r\n          pid: moneyOrders[i].pid,\r\n          recipientID: moneyOrders[i].recipientID,\r\n          recipientName: moneyOrders[i].recipientName,\r\n          securityCode: moneyOrders[i].securityCode,\r\n          moneyAmount:moneyOrders[i].moneyAmount,\r\n      }\r\n  }\r\n\r\n//   const rows=[];\r\n//   moneyOrders.map((option)=> (\r\n//     rows=[createData(option.pid,option.recipientID,option.recipientName,option.securityCode,option.moneyAmount,\"paid\")]\r\n//   ))\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    //console.log(\"Ch\")\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n  const handleSubmit=(id,userID)=> (event)=>{\r\n    event.preventDefault();\r\n    //console.log(\"handle\",id)\r\n    dispatch(removeMoneyOrderStart(id,userID))\r\n\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                    className={classes.tableHeader}\r\n                    key={column.id}\r\n                    align={column.align}\r\n                    style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {MoneyOrders.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map((row)=>(\r\n                <TableRow  key={row.pid}>\r\n                    <TableCell>\r\n                        <Typography className={classes.pid}>{row.pid}</Typography>    \r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Typography className={classes.recipientID}>{row.recipientID}</Typography>    \r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Typography className={classes.recipientName}>{row.recipientName}</Typography>    \r\n                    </TableCell>\r\n                    <TableCell>\r\n                        <Typography className={classes.securityCode}>{row.securityCode}</Typography>    \r\n                    </TableCell>\r\n                    <TableCell align='right'>\r\n                        <Typography className={classes.moneyAmount}>{row.moneyAmount}</Typography>    \r\n                    </TableCell>\r\n                    <TableCell>\r\n                      \r\n                        <Button type=\"submit\" variant=\"filled\" style={{backgroundColor:'#000033',color:'white'}} onClick={handleSubmit(row.pid,userID)}>Pay</Button>  \r\n                      \r\n                    </TableCell>\r\n                </TableRow>\r\n            ))}\r\n            \r\n                  \r\n          </TableBody>\r\n        </Table> \r\n        </TableContainer> \r\n      \r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 15]}\r\n        component=\"div\"\r\n        count={MoneyOrders.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n      \r\n      \r\n     \r\n    </Paper>\r\n  );\r\n}","import React, {useEffect} from \"react\";\r\nimport {useSelector,useDispatch} from \"react-redux\";\r\nimport {getMoneyOrdersStart} from \"../RecepFunc/recepActions\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport MOTable from \"../../components/MoneyOrderList/moneyOrders\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\n\r\n\r\n\r\nfunction MoneyOrder() {\r\n        \r\n    const moneyOrders = useSelector((state) => state.postOfficeReducer);\r\n    const postOfficeID =useSelector((state)=>state.homeReducer.postOffice)\r\n    \r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getMoneyOrdersStart(postOfficeID));\r\n        console.log(\"dcf\");\r\n    }, [dispatch])\r\n    \r\n    return(\r\n        <>\r\n            <Nav>\r\n                <TopBar page=\"MoneyOrders\"/>\r\n                {console.log(moneyOrders.dataRetrieved)}\r\n                \r\n                {(moneyOrders.dataRetrieved)?\r\n                <div>\r\n                    <MOTable\r\n                moneyOrders={moneyOrders.moneyOrders}\r\n                />\r\n                </div>\r\n                \r\n                :((moneyOrders.isLoading)?\r\n                (<Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                >\r\n                    <Grid item>\r\n                    <CircularProgress size={60} color=\"secondary\" />\r\n                    </Grid>\r\n                </Grid>):              \r\n                (    \r\n                <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>\r\n                ))}\r\n                \r\n            </Nav>\r\n        </>\r\n    )\r\n                            \r\n    \r\n}\r\n\r\nexport default MoneyOrder;","export const GET_MAILS_REQUEST=\"GET_MAILS_REQUEST\";\r\nexport const GET_MAILS_SUCCESS=\"GET_MAILS_SUCCESS\";\r\nexport const GET_MAILS_ERROR=\"GET_MAILS_ERROR\";\r\nexport const CHANGE_POSTMAN=\"CHANGE_POSTMAN\";\r\nexport const SUBMIT_ASSIGNMENTS_REQUEST=\"SUBMIT_ASSIGNMENTS_REQUEST\";\r\nexport const SUBMIT_ASSIGNMENTS_SUCCESS=\"SUBMIT_ASSIGNMENTS_SUCCESS\";\r\nexport const SUBMIT_ASSIGNMENTS_ERROR=\"SUBMIT_ASSIGNMENTS_ERROR\";","import * as actionTypes from \"./mailAssignmentsActionTypes\"\r\n\r\nexport function getMails(postOffice){\r\n    return {type:actionTypes.GET_MAILS_REQUEST,postOffice}\r\n}\r\n\r\nexport function getMailsSuccess(assignments,postmenRoutes){\r\n    return {type:actionTypes.GET_MAILS_SUCCESS,assignments,postmenRoutes}\r\n}\r\n\r\nexport function getMailsError(data){\r\n    return {type:actionTypes.GET_MAILS_ERROR,data}\r\n}\r\n\r\nexport function changePostman(pid,id){\r\n    return {type:actionTypes.CHANGE_POSTMAN,pid,id}\r\n}\r\n\r\nexport function submitMailAssignments(assignments){\r\n    return {type:actionTypes.SUBMIT_ASSIGNMENTS_REQUEST,assignments}\r\n}\r\n\r\nexport function submitMailAssignmentsSuccess(){\r\n    return {type:actionTypes.SUBMIT_ASSIGNMENTS_SUCCESS}\r\n}\r\n\r\nexport function submitMailAssignmentsError(data){\r\n    return {type:actionTypes.SUBMIT_ASSIGNMENTS_ERROR,data}\r\n}\r\n","\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {TextField,MenuItem, Select} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changePostman } from \"../../views/MailAssignments/mailAssignmentsActions\";\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#bcbbc7\",\r\n    color: \"black\",\r\n    fontFamily:\"bold\",\r\n    fontWeight:800,\r\n    fontSize:\"18px\"\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function MailAssignment(data){\r\n  const classes = useStyles();\r\n  const dispatch=useDispatch();\r\n  const mailAssignments=data.data.assignments;\r\n  const postmen=data.data.postmenData\r\n  function changeRow(pid,email){\r\n        dispatch(changePostman(pid,email));\r\n  }\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell >Post ID</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Address No</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Street 1</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Street 2</StyledTableCell>\r\n            <StyledTableCell align=\"center\">City</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Postman</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {mailAssignments.map((mail,index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n              {mail.pid}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.addressNumber}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.street1}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.street2}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.city}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">\r\n            \r\n                <Select\r\n                    fullWidth \r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"                    \r\n                    name=\"postman\"                                 \r\n                    defaultValue={mail.postmanID}\r\n                    onChange={(el)=>(changeRow(mail.pid,el.target.value))}\r\n                    \r\n                    >\r\n                        {postmen.map((postman) => (\r\n                            <MenuItem key={postman.id} value={postman.id}>\r\n                                {postman.firstName} {postman.lastName}\r\n                            </MenuItem>\r\n                        ))}\r\n                </Select>\r\n                        \r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const SubmitButton = withStyles(() => ({\r\n  root: {\r\n    textDecoration:\"none\",\r\n    color:\"white\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#01011a\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"#000000\",\r\n        fontSize:\"14px\"\r\n    },\r\n    minWidth:\"100px\"\r\n    },\r\n  }))(Button);\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    \r\n      errorText: {\r\n        fontSize: \"14px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"4px\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      successText: {\r\n        fontSize: \"16px\",\r\n        color: \"green\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      loadingText: {\r\n        fontSize: \"16px\",\r\n        color: \"orange\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      errorTextMsg: {\r\n        fontSize: \"16px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"35%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n\r\n}))","import React,{useEffect,useState} from \"react\";\r\nimport MailAssignment from \"../../components/MailAssignment/mailAssignment\";\r\nimport Nav from \"./../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMails,submitMailAssignments } from \"./mailAssignmentsActions\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { SubmitButton ,useStyles} from \"./mailAssignmentsStyles\";\r\n\r\nexport default function MailAssignments(){\r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const mailAssignmentsReducer = useSelector((state) => state.MailAssignmentsReducer);\r\n    const [submitted, setSubmitted] = useState(false); \r\n    const dispatch = useDispatch();\r\n    const classes=useStyles();\r\n    useEffect(()=>{\r\n      dispatch(getMails(postOffice))\r\n    },[dispatch,postOffice,submitted])\r\n\r\n    function confirmAssignments(){\r\n        dispatch(submitMailAssignments(mailAssignmentsReducer.assignments));\r\n        setSubmitted(!submitted)\r\n    }\r\n    return (\r\n        <Nav>\r\n            <TopBar page=\"Mail Assignments\"/>\r\n            {(mailAssignmentsReducer.isLoading==false && mailAssignmentsReducer.dataRetreived==true)?\r\n                <div style={{marginTop:\"20px\",marginLeft:\"20px\",marginRight:\"20px\"}}>\r\n                    <MailAssignment data={mailAssignmentsReducer} />\r\n                    <Grid container justifyContent=\"center\" style={{marginTop:\"20px\"}} direction=\"column\">\r\n                        <Grid item>\r\n                            <SubmitButton\r\n                                variant=\"contained\"\r\n                                color=\"#63231c\"\r\n                                disableElevation\r\n                                onClick={()=>(confirmAssignments())}                       \r\n                                >\r\n                                    CONFIRM MAIL ASSIGNMENTS\r\n                            </SubmitButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                                <span>\r\n                                    {(mailAssignmentsReducer.submitRequested==false && mailAssignmentsReducer.submitSuccess==false && mailAssignmentsReducer.submitFailure==true) ? (\r\n                                        <p className={classes.errorTextMsg}>Submission Unsuccessfull Try Again</p>\r\n                                    ) : null}\r\n                                    {(mailAssignmentsReducer.submitRequested==false && mailAssignmentsReducer.submitSuccess==true && mailAssignmentsReducer.submitFailure==false) ? (\r\n                                        <p className={classes.successText}>Submission Successfull</p>\r\n                                    ) : null}\r\n                                    {(mailAssignmentsReducer.submitRequested==true && mailAssignmentsReducer.submitSuccess==false && mailAssignmentsReducer.submitFailure==false) ? (\r\n                                        <p className={classes.loadingText}>Submission in progress..........</p>\r\n                                    ) : null}\r\n                                </span>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            :((mailAssignmentsReducer.isLoading==true && mailAssignmentsReducer.dataRetreived==false)?\r\n            (<Grid\r\n                container\r\n                alignItems=\"center\"\r\n                style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n            >\r\n                <Grid item>\r\n                <CircularProgress size={60} color=\"secondary\" />\r\n                </Grid>\r\n            </Grid>):\r\n            ( <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>)\r\n            )\r\n            }\r\n            \r\n        </Nav>\r\n    )\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: \"#dfdfe8\",\r\n    },\r\n    icon: {\r\n      verticalAlign: 'bottom',\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    accorditionHeading:{\r\n      backgroundColor:\"#0f0f2e\",\r\n      color:\"white\"\r\n    },\r\n    details: {\r\n      alignItems: 'center',\r\n      backgroundColor:\"#d7d7db\"\r\n    },\r\n    accordionActions:{\r\n      backgroundColor:\"#d7d7db\",\r\n      paddingBottom:\"10px\"\r\n    },\r\n    column: {\r\n      flexBasis: '33.33%',\r\n    },\r\n    helper: {\r\n      borderLeft: `2px solid ${theme.palette.divider}`,\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n    link: {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n  }));\r\n  \r\n\r\n  export const SubmitButton = withStyles(() => ({\r\n    root: {\r\n      textDecoration:\"none\",\r\n      color:\"white\",\r\n      marginTop: \"20px\",\r\n      backgroundColor: \"#1b1b2e\",\r\n      \"&:hover\": {\r\n          backgroundColor: \"#000000\",\r\n          fontSize:\"14px\"\r\n      },\r\n      minWidth:\"100px\"\r\n      },\r\n  }))(Button);","import React from 'react';\r\nimport BarCode from 'react-barcode';\r\nimport html2canvas from 'html2canvas';\r\n\r\n\r\nexport function BarcodePrinter(data){\r\n    //const wrapper_ref = React.useRef();\r\n    const code=data.code;\r\n    /*const onClick=(e)=>{\r\n       const opt = {\r\n          scale: 4\r\n      }\r\n      const elem = wrapper_ref.current;\r\n      html2canvas(elem, opt).then(canvas => {\r\n          const iframe = document.createElement('iframe')\r\n          iframe.name = 'printf'\r\n          iframe.id = 'printf'\r\n          iframe.height = 0;\r\n          iframe.width = 0;\r\n          document.body.appendChild(iframe)\r\n  \r\n          const imgUrl = canvas.toDataURL({\r\n              format: 'jpeg',\r\n              quality: '1.0'\r\n          })\r\n  \r\n          const style=`\r\n              height:30vh;\r\n              width:100vw;\r\n              position:absolute;\r\n              left:0:\r\n              top:0;\r\n          `;\r\n  \r\n          const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n          var newWin = window.frames[\"printf\"];\r\n          newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n          newWin.document.close();\r\n  \r\n      });\r\n    }*/\r\n  \r\n    return (\r\n        <div style={{marginTop:\"30px\"}}>\r\n          <div >\r\n              <BarCode\r\n                value={code}\r\n             />\r\n          </div>\r\n          \r\n        </div>\r\n      );\r\n  }\r\n  \r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport dateFormat from \"dateformat\";\r\nimport { useStyles,SubmitButton } from './mailTransferStyles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BarcodePrinter } from '../BarcodePrinter/barcodePrinter.js';\r\nimport BarCode from 'react-barcode';\r\nimport html2canvas from 'html2canvas'\r\n\r\nexport default function MailTransfer(data) {\r\n  const classes = useStyles();\r\n  const wrapperRef = React.useRef();\r\n  const history = useHistory();\r\n  const date=new Date();\r\n  const formattedDate=dateFormat(date, \"yyyy/mm/dd\");\r\n  const transfer=data.transfer;\r\n  function toBarcode(){\r\n    let path = `/barcode-printer/`+\"5654646\"; \r\n    history.push(path);\r\n  }\r\n  function printBarcode(){\r\n    const opt = {\r\n        scale: 4\r\n     }\r\n    const elem = wrapperRef.current;\r\n    html2canvas(elem, opt).then(canvas => {\r\n        const iframe = document.createElement('iframe')\r\n        iframe.name = 'printf'\r\n        iframe.id = 'printf'\r\n        iframe.height = 0;\r\n        iframe.width = 0;\r\n        document.body.appendChild(iframe)\r\n\r\n        const imgUrl = canvas.toDataURL({\r\n            format: 'jpeg',\r\n            quality: '1.0'\r\n        })\r\n\r\n        const style=`\r\n            height:30vh;\r\n            width:100vw;\r\n            position:absolute;\r\n            left:0:\r\n            top:0;\r\n        `;\r\n\r\n        const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n        var newWin = window.frames[\"printf\"];\r\n        newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n        newWin.document.close();\r\n\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon style={{color:\"white\"}}/>}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n          className={classes.accorditionHeading}\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading} style={{textAlign:\"left\"}}>To: {transfer.postOffice}</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>Number of Items: {transfer.itemCount}</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>Date: {formattedDate}</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n         \r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell style={{fontWeight:\"bold\"}}>PID</TableCell>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}>Post Type</TableCell>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}>Destination</TableCell>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}>Destination Address</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {transfer.mails.map((row) => (\r\n                <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.pid}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.type}</TableCell>\r\n                <TableCell align=\"center\">{row.city}</TableCell>\r\n                <TableCell align=\"center\">{row.addressNumber+\", \"+row.street1+\", \"+row.street2+\", \"+row.city}</TableCell>\r\n                \r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        <div ref={wrapperRef}>\r\n            <BarcodePrinter code={transfer.id}/> \r\n        </div>\r\n        <Divider />\r\n        <Grid container className={classes.accordionActions} justifyContent=\"center\">\r\n            <Grid item>\r\n                <SubmitButton\r\n                    variant=\"contained\"\r\n                    color=\"#63231c\"\r\n                    disableElevation\r\n                    type=\"submit\"\r\n                    onClick={()=>{printBarcode()}}        \r\n                    >\r\n                    PRINT BARCODE\r\n                </SubmitButton>\r\n            </Grid>\r\n\r\n            \r\n\r\n        </Grid>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","export const GET_TRANSFERS_REQUEST=\"GET_TRANSFERS_REQUEST\";\r\nexport const GET_TRANSFERS_SUCCESS=\"GET_TRANSFERS_SUCCESS\";\r\nexport const GET_TRANSFERS_ERROR=\"GET_TRANSFERS_ERROR\";\r\n\r\nexport const CONFIRM_TRANSFER_REQUEST=\"CONFIRM_TRANSFER_REQUEST\";\r\nexport const CONFIRM_TRANSFER_SUCCESS=\"CONFIRM_TRANSFER_SUCCESS\";\r\nexport const CONFIRM_TRANSFER_ERROR=\"CONFIRM_TRANSFER_ERROR\";","import * as actionTypes from \"./mailTransfersActionTypes\"\r\n\r\nexport function getTransfers(postOffice){\r\n    return {type:actionTypes.GET_TRANSFERS_REQUEST,postOffice}\r\n}\r\n\r\nexport function getTransfersSuccess(transfers){\r\n    return {type:actionTypes.GET_TRANSFERS_SUCCESS,transfers}\r\n}\r\n\r\nexport function getTransfersError(data){\r\n    return {type:actionTypes.GET_TRANSFERS_ERROR,data}\r\n}\r\n\r\nexport function confirmTransfer(transfers){\r\n    return {type:actionTypes.CONFIRM_TRANSFER_REQUEST,transfers}\r\n}\r\n\r\nexport function confirmTransferSuccess(transfers){\r\n    return {type:actionTypes.CONFIRM_TRANSFER_SUCCESS,transfers}\r\n}\r\n\r\nexport function confirmTransferError(data){\r\n    return {type:actionTypes.CONFIRM_TRANSFER_ERROR,data}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SubmitButton = withStyles(() => ({\r\n    root: {\r\n        textDecoration:\"none\",\r\n        color:\"white\",\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"#01011a\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#000000\",\r\n            fontSize:\"14px\"\r\n        },\r\n        minWidth:\"100px\"\r\n        },\r\n  }))(Button);\r\n\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React,{useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MailTransfer from \"../../components/MailTransfer/mailTransfer\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport { getTransfers,confirmTransfer } from \"./mailTransfersActions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SubmitButton } from \"./mailTransfersStyles\";\r\nimport { CircularProgress} from \"@material-ui/core\";\r\n\r\n\r\nexport default function MailTransfers(){\r\n    const dispatch= useDispatch();\r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const transferReducer = useSelector((state) => state.MailTransfersReducer);\r\n    useEffect(()=>{\r\n        dispatch(getTransfers(1001))\r\n      },[dispatch,postOffice])\r\n    \r\n    function confirmTransfers(transfers){\r\n        dispatch(confirmTransfer(transfers))\r\n    }\r\n    return(\r\n        <Nav>\r\n            <TopBar page=\"Mail Transfers\"/>\r\n            \r\n            <Grid container direction=\"column\" style={{marginTop:\"50px\"}}>\r\n                {(transferReducer.dataRetreived==true && transferReducer.isLoading==false)?(\r\n                transferReducer.transfers.map((transfer)=>(\r\n                    <Grid item style={{maxWidth:\"1000px\",marginLeft:\"60px\",marginBottom:\"30px\"}}>\r\n                        <MailTransfer transfer={transfer}></MailTransfer>\r\n                    </Grid>\r\n                ))):\r\n                (\r\n                    <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginTop: \"15%\",marginLeft:\"45%\" }}\r\n                    >\r\n                        <Grid item>\r\n                        <CircularProgress size={60} color=\"secondary\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                )}                \r\n            </Grid>\r\n            {(transferReducer.dataRetreived==true && transferReducer.isLoading==false && (transferReducer.transfers.length)>0)?(\r\n            <Grid container justifyContent=\"center\" direction=\"column\">\r\n                <Grid item>\r\n                    <SubmitButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        disableElevation\r\n                        type=\"submit\"\r\n                        onClick={()=>confirmTransfers(transferReducer.transfers)}        \r\n                        >\r\n                        CONFIRM TRANSFERS\r\n                    </SubmitButton>\r\n                </Grid>\r\n                {(transferReducer.confirmationRequested==true)?(\r\n                    <CircularProgress size={20} color=\"secondary\" />\r\n                \r\n                ):((transferReducer.confirmationSuccessfull==true)?(\r\n                    <span style={{color:\"green\"}}>Confirmation Successfull</span>\r\n                ):((transferReducer.confirmationSuccessfull==true)?(\r\n                     <span style={{color:\"red\"}}>Confirmation Unsuccessfull</span>\r\n                ):null)\r\n                )}\r\n\r\n            </Grid>):(transferReducer.dataRetreived==true && transferReducer.isLoading==false)?<span style={{color:\"red\"}}>No Transfer Data to display</span>:\r\n            null}\r\n        </Nav>\r\n    )\r\n}","export const POSTMEN_ROUTES_DATA_REQUEST = \" POSTMEN_ROUTES_DATA_REQUEST\";\r\nexport const  POSTMEN_ROUTES_DATA_SUCCESS = \" POSTMEN_ROUTES_DATA_SUCCESS\";\r\nexport const  POSTMEN_ROUTES_DATA_ERROR = \" POSTMEN_ROUTES_DATA_ERROR\";\r\n\r\nexport const  POSTMAN_ROUTE_SAVE_REQUEST = \"POSTMAN_ROUTE_SAVE_REQUEST\";\r\nexport const POSTMAN_ROUTE_SAVE_SUCCESS = \"POSTMAN_ROUTE_SAVE_SUCCESS\";\r\nexport const POSTMAN_ROUTE_SAVE_ERROR = \"POSTMAN_ROUTE_SAVE_ERROR\";\r\n\r\nexport const  POSTMAN_ROUTE_REMOVE_REQUEST = \"POSTMAN_ROUTE_REMOVE_REQUEST\";\r\nexport const POSTMAN_ROUTE_REMOVE_SUCCESS = \"POSTMAN_ROUTE_REMOVE_SUCCESS\";\r\nexport const POSTMAN_ROUTE_REMOVE_ERROR = \"POSTMAN_ROUTE_REMOVE_ERROR\";","import * as actionTypes from \"./postmenRoutesActionTypes\";\r\n\r\n// getting complins data actions\r\n\r\nexport function postmenRoutesDataRequest(postOffice) {\r\n  return { type: actionTypes.POSTMEN_ROUTES_DATA_REQUEST,postOffice};\r\n}\r\n\r\nexport function postmenRoutesDataSuccess(data) {\r\n  return { type: actionTypes.POSTMEN_ROUTES_DATA_SUCCESS,data};\r\n}\r\n\r\nexport function postmenRoutesDataError(error) {\r\n  return { type: actionTypes.POSTMEN_ROUTES_DATA_ERROR,error};\r\n}\r\n\r\n\r\nexport function saveStreet(userID,street){\r\n    return {type:actionTypes.POSTMAN_ROUTE_SAVE_REQUEST,userID,street}\r\n}\r\n\r\nexport function saveStreetSuccess(){\r\n    return {type:actionTypes.POSTMAN_ROUTE_SAVE_SUCCESS}\r\n}\r\n\r\nexport function saveStreetError(data){\r\n    return {type:actionTypes.POSTMAN_ROUTE_SAVE_ERROR,data}\r\n}\r\n\r\n\r\nexport function removeStreet(userID,street){\r\n    return {type:actionTypes.POSTMAN_ROUTE_REMOVE_REQUEST,userID,street}\r\n}\r\n\r\nexport function removeStreetSuccess(){\r\n    return {type:actionTypes.POSTMAN_ROUTE_REMOVE_SUCCESS}\r\n}\r\n\r\nexport function removeStreetError(data){\r\n    return {type:actionTypes.POSTMAN_ROUTE_REMOVE_ERROR,data}\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: \"#dfdfe8\",\r\n    },\r\n    icon: {\r\n      verticalAlign: 'bottom',\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    accorditionHeading:{\r\n      backgroundColor:\"#0f0f2e\",\r\n      color:\"white\"\r\n    },\r\n    details: {\r\n      alignItems: 'center',\r\n      backgroundColor:\"#d7d7db\"\r\n    },\r\n    accordionActions:{\r\n      backgroundColor:\"#d7d7db\",\r\n      paddingBottom:\"10px\"\r\n    },\r\n    column: {\r\n      flexBasis: '33.33%',\r\n    },\r\n    helper: {\r\n      borderLeft: `2px solid ${theme.palette.divider}`,\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n    link: {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n  }));\r\n  \r\n\r\n  export const SubmitButton = withStyles(() => ({\r\n      \r\n    root: {\r\n        maxHeight:\"25px\",\r\n      fontSize:\"12px\",\r\n      textDecoration:\"none\",\r\n      color:\"white\",\r\n      backgroundColor: \"#1b1b2e\",\r\n      \"&:hover\": {\r\n          backgroundColor: \"#000000\",\r\n          fontSize:\"12px\"\r\n      },\r\n      minWidth:\"100px\"\r\n      },\r\n  }))(Button);\r\n\r\n  export const RemoveButton = withStyles(() => ({\r\n      \r\n    root: {\r\n        maxHeight:\"25px\",\r\n      fontSize:\"12px\",\r\n      textDecoration:\"none\",\r\n      color:\"white\",\r\n      backgroundColor: \"#540e09\",\r\n      \"&:hover\": {\r\n          backgroundColor: \"#240301\",\r\n          fontSize:\"12px\"\r\n      },\r\n      minWidth:\"100px\"\r\n      },\r\n  }))(Button);","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport dateFormat from \"dateformat\";\r\nimport { useStyles,SubmitButton,RemoveButton } from './postmanRouteStyles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { useDispatch} from \"react-redux\";\r\nimport { saveStreet, removeStreet} from '../../views/PostmenRoutes/postmenRoutesActions';\r\n\r\nexport default function PostmanRoute(data) {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const wrapperRef = React.useRef();\r\n  const history = useHistory();\r\n  const date=new Date();\r\n  const formattedDate=dateFormat(date, \"yyyy/mm/dd\");\r\n  const postman=data.postman;\r\n  const [street, setStreet] = React.useState(\"\");\r\n    function addStreet(postman,street){\r\n        dispatch(saveStreet(postman.userID,street))\r\n    }\r\n\r\n    function deleteStreet(postman,street){\r\n        dispatch(removeStreet(postman.userID,street))\r\n    }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon style={{color:\"white\"}}/>}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n          className={classes.accorditionHeading}\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading} style={{textAlign:\"left\"}}>Name: {postman.firstName} {postman.lastName}</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>Email: {postman.email}</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>NIC: {postman.NIC}</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}>Route</TableCell>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}></TableCell>\r\n                \r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {postman.routes.map((row) => (\r\n                <TableRow key={row}>\r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                    {row}\r\n                </TableCell>\r\n                <TableCell align=\"center\" >\r\n                    <RemoveButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        disableElevation\r\n                        type=\"submit\"\r\n                        onClick={()=>{deleteStreet(postman,row)}}        \r\n                        >\r\n                        REMOVE\r\n                    </RemoveButton>\r\n                </TableCell>\r\n                </TableRow>\r\n            ))}\r\n            \r\n            <TableRow key=\"add\">\r\n            \r\n                <TableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <TextField id=\"outlined-basic\" label=\"Street\" variant=\"outlined\" \r\n                        value={street}\r\n                        onChange={(event) => {setStreet(event.target.value)}}/>\r\n                    </form>\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" >\r\n                    <SubmitButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        disableElevation\r\n                        type=\"submit\"\r\n                        onClick={()=>{addStreet(postman,street)}}        \r\n                        >\r\n                        ADD STREET\r\n                    </SubmitButton>\r\n                </TableCell>\r\n                \r\n            </TableRow>\r\n            \r\n            </TableBody>\r\n        </Table>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        \r\n        <Divider />\r\n        \r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import React,{ useEffect }  from \"react\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { postmenRoutesDataRequest } from \"./postmenRoutesActions\";\r\nimport PostmanRoute from \"../../components/PostmanRoute/postmanRoute\";\r\nexport default function PostmenRoutes(){ \r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const dispatch = useDispatch();\r\n    const postmenRoutesReducer=useSelector((state) => state.postmenRoutesReducer); \r\n    useEffect(()=>{\r\n        dispatch(postmenRoutesDataRequest(postOffice))\r\n    },[dispatch,postOffice,postmenRoutesReducer.dataChanged]);\r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Postmen Routes\"/>\r\n                <Grid container direction=\"column\" style={{marginTop:\"50px\"}}>\r\n                    {(postmenRoutesReducer.dataRetrieved==true && postmenRoutesReducer.isRequested==false)?(\r\n                    postmenRoutesReducer.postmenRoutesData.map((postman)=>(\r\n                        <Grid item style={{maxWidth:\"1000px\",marginLeft:\"60px\",marginBottom:\"30px\"}}>\r\n                            <PostmanRoute postman={postman}></PostmanRoute>\r\n                        </Grid>\r\n                    ))):\r\n                    (\r\n                        <Grid\r\n                            container\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: \"15%\",marginLeft:\"45%\" }}\r\n                        >\r\n                            <Grid item>\r\n                            <CircularProgress size={60} color=\"secondary\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    )}                \r\n                </Grid>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","\r\nimport React,{useContext} from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Dashboard from \"./views/Home/Dashboard/dashboard\";\r\nimport RecepDashboard from \"./views/Home/ReceptionistDashboard/dashboard\";\r\nimport Login from \"./views/Login/login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AuthContext } from \"./auth/auth.js\";\r\nimport { useEffect } from \"react\";\r\nimport { authorizationRequest } from \"./views/Home/homeActions\";\r\nimport { useSelector } from 'react-redux';\r\nimport AuthError from \"./views/Error/authError\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport LiveDelivery from \"./views/LiveDelivery/liveDelivery\";\r\nimport Registration from \"./views/Registration/registration\";\r\nimport Statistics from \"./views/Statistics/statistics\";\r\nimport Complains from \"./views/Complains/complains\";\r\nimport NormalForm from \"./views/RecepFunc/normPform\";\r\nimport RegisteredForm from \"./views/RecepFunc/regPform\";\r\nimport LogiForm from \"./views/RecepFunc/logiPform\";\r\nimport MoneyOrderForm from \"./views/RecepFunc/moneyOform\";\r\nimport MoneyOrder from \"./views/RecepFunc/moneyO\";\r\nimport MailAssignments from \"./views/MailAssignments/mailAssignments\";\r\nimport MailTransfers from \"./views/MailTransfers/mailTransfers\";\r\nimport PostmenRoutes from \"./views/PostmenRoutes/postmenRoutes\";\r\n\r\nfunction Authorization() {\r\n    const dispatch = useDispatch();\r\n    const user = useContext(AuthContext);\r\n   //console.log(\"token -\",user.currentUser.getIdToken(true))\r\n    useEffect(()=>{\r\n        if (user==null){\r\n    \r\n        }\r\n        else{\r\n            // console.log(\"User - \",user.currentUser.uid,user.currentUser.email)\r\n            dispatch(authorizationRequest({uID:user.currentUser.uid,email:user.currentUser.email}))\r\n        }\r\n      },[dispatch,user]);\r\n      const userRole= useSelector((state)=>state.homeReducer.role);\r\n      const isAuthorized= useSelector((state)=>state.homeReducer.isAuthorized);  \r\n  return (\r\n      <div className=\"App\">\r\n      {isAuthorized===true?\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/dashboard\" children={\r\n                userRole? \r\n                (userRole===\"postmaster\"?(<Dashboard />):\r\n                (userRole===\"supervisor\"?(<Dashboard />):\r\n                (userRole===\"receptionist\"?(<RecepDashboard/>):<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>)))\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            } />\r\n            <Route exact path=\"/live-delivery\" children={\r\n                userRole? \r\n                (userRole===\"postmaster\"?(<LiveDelivery />):\r\n                <AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>)\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            }/>\r\n            <Route exact path=\"/registration\" children={\r\n                userRole? \r\n                (userRole===\"postmaster\"?(<Registration />):\r\n                (userRole===\"supervisor\"?(<Registration />):\r\n                <AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>))\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            } />\r\n            <Route exact path=\"/statistics\" children={\r\n                userRole? \r\n                (userRole===\"postmaster\"?(<Statistics />):\r\n                <AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>)\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            } />\r\n            <Route exact path=\"/complains\" children={\r\n                userRole? \r\n                (userRole===\"postmaster\"?(<Complains />):\r\n                <AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>)\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            } />\r\n            <Route exact path=\"/normPForm\" component={\r\n                userRole? \r\n                (userRole===\"receptionist\"?(NormalForm):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n            <Route exact path=\"/regPForm\" component={\r\n                userRole? \r\n                (userRole===\"receptionist\"?(RegisteredForm):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n            <Route exact path=\"/logiPForm\" component={\r\n                userRole? \r\n                (userRole===\"receptionist\"?(LogiForm):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n            <Route exact path=\"/moneyOForm\" component={\r\n                userRole? \r\n                (userRole===\"receptionist\"?(MoneyOrderForm):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n            <Route exact path=\"/moneyO\" component={\r\n                userRole? \r\n                (userRole===\"receptionist\"?(MoneyOrder):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n\r\n            <Route exact path=\"/mail-assignments\" children={\r\n                userRole? \r\n                (userRole===\"supervisor\"?(<MailAssignments />):\r\n                <AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>)\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            } />\r\n\r\n            <Route exact path=\"/mail-transfer\" children={\r\n                userRole? \r\n                (userRole===\"supervisor\"?(<MailTransfers/>):\r\n                <AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>)\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            } />\r\n\r\n            <Route exact path=\"/postmen-routes\" children={\r\n                userRole? \r\n                (userRole===\"supervisor\"?(<PostmenRoutes/>):\r\n                <AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>)\r\n                :<AuthError errorCode={\"403\"} errorMessage={\"Access Denied. Authorization Error Occured\"}/>\r\n            } />      \r\n\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/dashboard\" />\r\n            </Route>\r\n\r\n            <Route children={<AuthError errorCode={\"404\"} errorMessage={\"Page Not Found\"}/>} />\r\n          </Switch>\r\n        </Router>\r\n        :\r\n        <div style={{backgroundColor:\"#d4d4d4\",\r\n        minHeight:\"100vh\"}}>\r\n        <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        style={{ position: \"absolute\", top: \"35%\" }}\r\n      >\r\n        <Grid>\r\n          <img\r\n            src=\"/App_Icon.png\"\r\n            style={{ width: 200 * 1.5, height: 80 * 1.5,  }}\r\n            alt=\"Logo\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <CircularProgress size={80} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n        </Grid>\r\n      </Grid>\r\n      </div>}  \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Authorization;","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport Login from \"./views/Login/login\";\r\nimport { AuthProvider } from \"./auth/auth\";\r\nimport Authorization from './router';\r\nimport PrivateRoute from './auth/privateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"App\">\r\n        <Router>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <PrivateRoute path =\"/\" component={Authorization}></PrivateRoute>\r\n        </Router>\r\n      </div>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { put } from \"redux-saga/effects\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n} from \"./../views/Login/loginActionTypes.js\";\r\nimport {app} from \"../auth/base.js\";\r\n\r\nexport function* loginSaga(request) {\r\n  const email =request.data.emailVal;\r\n  const password =request.data.passwordVal;\r\n  let errorMessage = \"\";\r\n  try {\r\n    yield app.auth().signInWithEmailAndPassword(email, password);\r\n    yield put({ type: LOGIN_SUCCESS });\r\n  } catch (error) {\r\n    \r\n    switch (error.code) {\r\n      case \"auth/user-not-found\":\r\n        errorMessage = \"Invalid email or password\";\r\n        break;\r\n      case \"auth/wrong-password\":\r\n        errorMessage = \"Invalid email or password\";\r\n        break;\r\n      case \"auth/user-disabled\":\r\n        errorMessage = \"User with this email has been suspended\";\r\n        break;\r\n      default:\r\n        errorMessage = \"Something went wrong! Please try again\";\r\n        break;\r\n    }\r\n    yield put({ type: LOGIN_ERROR, error: errorMessage });\r\n  }\r\n}\r\n\r\nexport function logoutSaga() {\r\n  app.auth().signOut();\r\n}\r\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport \"firebase/compat/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\nexport {firebase};\r\n","import {AUTHORIZATION_REQUEST,AUTHORIZATION_SUCCESS,AUTHORIZATION_ERROR} from \"./../views/Home/homeActionTypes.js\";\r\nimport {app} from \"../auth/base.js\";\r\nimport {firestore} from \"../firebase/firestore\";\r\nimport { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport {authorizationSuccess} from \"../views/Home/homeActions\";\r\n\r\n\r\nasync function getUserDetails(uID,email){\r\n    return firestore\r\n        .collection(\"Users\")\r\n        .doc(uID)\r\n        .get()\r\n        .then((doc)=>{\r\n            var userData=doc.data();\r\n            console.log(\"post office \",userData.role)\r\n            if(userData.role==\"postman\" || userData.role==\"deliveryLogKeeper\"){\r\n                console.log(\"lofg - \",userData.role)\r\n                app.auth().signOut();\r\n            }\r\n            return userData;\r\n        })\r\n        .catch((e)=>{\r\n            console.log(\"Error occured\");\r\n            return null;\r\n        })\r\n}\r\nexport function* getUserDetailsSaga(data){\r\n    const currentUserID=data.data.uID;\r\n    const currentUserEmail=data.data.email;\r\n    try {\r\n        let data = yield call(getUserDetails,currentUserID,currentUserEmail);\r\n        yield put(authorizationSuccess(data,currentUserID,currentUserEmail));\r\n  } catch (e) {\r\n  }\r\n}","import { call,put } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_EMPLOYEE_REQUEST\r\n} from \"./../views/Registration/registrationActionTypes.js\";\r\n//import {app} from \"../auth/base.js\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport {auth} from \"../auth/base.js\";\r\nimport {\r\n  addEmployeeSuccess,\r\n  addEmployeeError\r\n} from \"./../views/Registration/registrationAction.js\";\r\nimport axios from \"axios\";\r\n\r\nexport async function addEmployee(request){\r\n    const email=request.data.email;\r\n    const password=request.data.password1;\r\n    const firstName=request.data.firstName;\r\n    const lastName=request.data.lastName;\r\n    const contactNumber=request.data.contactNumber;\r\n    const NIc=request.data.nic;\r\n    const postOffice=request.data.postOffice;\r\n    const role=request.data.role;\r\n    const userID=request.data.userID\r\n    const idToken=request.idToken;\r\n    const result =await axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:5001/post-office-mis-325210/us-central1/app/create-user\",\r\n      params: {idToken:idToken,email:email,firstName:firstName,password:password,lastname:lastName,contactNumber:contactNumber,NIC:NIc,postOffice:postOffice,role:role,userID:userID},\r\n      headers: {\"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then(function (response) {   \r\n        return response.status;\r\n      })\r\n      return result;\r\n}\r\n\r\nexport function* addEmployeeSaga(request){\r\n  try {\r\n        const data = yield (addEmployee(request));\r\n        if (data==201){ \r\n            yield put(addEmployeeSuccess());\r\n        }\r\n        else{\r\n          yield put(addEmployeeError(\"Unexpected Error\"));\r\n        }\r\n      \r\n        \r\n  } catch (e) {\r\n        yield put(addEmployeeError(e.toString()));\r\n  }\r\n}\r\n\r\n\r\n\r\n","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take, takeEvery } from \"redux-saga/effects\";\r\nimport {getLocationsSuccess,getLocationsError} from \"../views/LiveDelivery/liveDeliveryActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getLiveLocations(data) {\r\n  const date=new Date();\r\n  const formattedDate=dateFormat(date, \"yyyy/mm/dd\");\r\n  const role=\"postman\";\r\n  const ref = firestore.collectionGroup(\"locations\").where(\"date\", \"==\", formattedDate);\r\n  const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n  while(true){\r\n    try {\r\n        \r\n        const Data = yield take(channel);\r\n            return Data.docs.map((doc) => {\r\n                const data = doc.data();\r\n                const documentID = doc.ref.parent.parent?.id || \"\";\r\n                if (data.geoLocations.length > 0) {\r\n                const history = data.geoLocations.sort((a, b) => b.timestamp.seconds - a.timestamp.seconds);\r\n                const latestElement = history[0];\r\n                return {\r\n                    userDocumentID: documentID,\r\n                    timeStamp: latestElement.timestamp.seconds * 1000,\r\n                    location: {\r\n                    lng: latestElement.location?.longitude || 0,\r\n                    lat: latestElement.location?.latitude || 0\r\n                    }\r\n                };\r\n                }\r\n                return null;\r\n            });\r\n        } catch (error) {\r\n        console.log(\"Error when locations retireved'\")\r\n        return \"Error\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction* getPostmanDetails(postOffice) {\r\n  const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n  const role=\"postman\"\r\n  const ref = firestore.collection(\"Users\").where(\"role\",\"==\",role).where(\"postOffice\",\"==\",postOfficeRef);\r\n  const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n  console.log(\"getting postmen\")\r\n  try {  \r\n    const Data = yield take(channel);\r\n        return Data.docs.map((doc) => {\r\n            const data = doc.data();\r\n            const documentID = doc.id;\r\n            return {\r\n                userDocumentID: documentID,\r\n                firstName:data.firstName,\r\n                lastName:data.lastName,\r\n                contactNumber:data.contactNumber,\r\n                email:data.email,\r\n                postOffice:data.postOffice.id\r\n            };\r\n        });\r\n      } catch (error) {\r\n        console.log(\"Error when taking postman details\")\r\n        return \"Error\";\r\n  }\r\n}\r\n\r\nasync function getPostOffice(postOffice){\r\n    return firestore\r\n        .collection(\"PostOffice\")\r\n        .doc(postOffice)\r\n        .get()\r\n        .then((doc)=>{\r\n            var userData=doc.data();\r\n            return userData;\r\n        })\r\n        .catch((e)=>{\r\n            console.log(\"Error occured\");\r\n            return null;\r\n        })\r\n\r\n}\r\n\r\n\r\nfunction* getDataList(locations,postmen){\r\n    const data= postmen.map((postman)=>{\r\n        var location=locations.filter((e) => e.userDocumentID==postman.userDocumentID);\r\n            const loc=location[0];\r\n            return {\r\n                userDocumentID: postman.documentID,\r\n                firstName:postman.firstName,\r\n                lastName:postman.lastName,\r\n                contactNumber:postman.contactNumber,\r\n                email:postman.email,\r\n                postOffice:postman.postOffice,\r\n                timeStamp: loc?.timeStamp,\r\n                location: {\r\n                    lng: loc?.location.lng || 0,\r\n                    lat: loc?.location.lat || 0\r\n                }\r\n            }\r\n    })\r\n    return data;\r\n}\r\nexport function* getLiveLocationsSaga(data){\r\n    try {\r\n        const postOffice=data.postOffice\r\n        const locations=yield call(getLiveLocations);\r\n        const postmen=yield call(getPostmanDetails,postOffice);\r\n        const postOfficeData=yield call(getPostOffice,postOffice);\r\n        const locationData=yield call(getDataList,locations,postmen)\r\n        if(locations!=\"Error\"){\r\n            yield put(getLocationsSuccess(locationData,postOfficeData));\r\n        }\r\n        else{\r\n            yield put(getLocationsError(\"Unknown Error\"))\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(getLocationsError(error))\r\n    }\r\n  \r\n}\r\n","\r\nimport { call,put,take} from \"redux-saga/effects\";\r\nimport {firestore} from \"../firebase/firestore\";\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport { addPostSuccess, removeMoneyOrderSuccess } from \"../views/RecepFunc/recepActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport {getPostOfficeSuccess,getMoneyOrdersSuccess} from \"../views/RecepFunc/recepActions\";\r\n\r\n\r\n\r\n\r\n\r\nasync function addPostDetails(recipientName,recipientAddressNo,recipientStreet1,recipientStreet2,recipientCity,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice){\r\n     \r\n      \r\n    return firestore\r\n    .collection(\"PendingMails\")\r\n    .add({\r\n        \r\n        acceptedPostoffice:firestore.doc('PostOffice/'+acceptedPostoffice),\r\n        destinationPostoffice:firestore.doc('PostOffice/'+destinationPostoffice),\r\n        histories:[{\r\n            action:\"Accepted\",\r\n            employee:firestore.doc('Users/'+employee)\r\n        }],\r\n        locations:[{\r\n            location:new firebase.firestore.GeoPoint(loc_lat,loc_long),\r\n            timestamp:firebase.firestore.Timestamp.now()\r\n        }],\r\n\r\n        //pid:pid,\r\n        \r\n        recipientDetails:{\r\n            recipientName:recipientName,\r\n            recipientAddressNo:recipientAddressNo,\r\n            recipientStreet1:recipientStreet1,\r\n            recipientStreet2:recipientStreet2,\r\n            recipientCity:recipientCity\r\n        },\r\n        \r\n        cost:cost,\r\n        type: \"NormalPost\",\r\n        timestamp:firebase.firestore.Timestamp.now(),\r\n        state:\"Accepted\"\r\n    })\r\n    .catch((e)=>{\r\n        console.log(\"Error occured\");\r\n        return null;\r\n    })\r\n\r\n    \r\n}\r\n\r\nasync function addRegPostDetails(senderName,senderAddressNo,senderStreet1,senderStreet2,senderCity,senderEmail,recipientName,recipientAddressNo,recipientStreet1,recipientStreet2,recipientCity,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice){\r\n     \r\n      \r\n    return firestore\r\n    .collection(\"PendingMails\")\r\n    .add({\r\n        \r\n        acceptedPostoffice:firestore.doc('PostOffice/'+acceptedPostoffice),\r\n        destinationPostoffice:firestore.doc('PostOffice/'+destinationPostoffice),\r\n        histories:[{\r\n            action:\"Accepted\",\r\n            employee:firestore.doc('Users/'+employee)\r\n        }],\r\n        locations:[{\r\n            location:new firebase.firestore.GeoPoint(loc_lat,loc_long),\r\n            timestamp:firebase.firestore.Timestamp.now()\r\n        }],\r\n\r\n        //pid:pid,\r\n        \r\n        recipientDetails:{\r\n            recipientName:recipientName,\r\n            recipientAddressNo:recipientAddressNo,\r\n            recipientStreet1:recipientStreet1,\r\n            recipientStreet2:recipientStreet2,\r\n            recipientCity:recipientCity\r\n        },\r\n        senderDetails:{\r\n            senderName:senderName,\r\n            senderAddressNo:senderAddressNo,\r\n            senderStreet1:senderStreet1,\r\n            senderStreet2:senderStreet2,\r\n            senderCity:senderCity,\r\n            senderEmail:senderEmail\r\n        },\r\n        \r\n        cost:cost,\r\n        type: \"RegisteredPost\",\r\n        timestamp:firebase.firestore.Timestamp.now(),\r\n        state:\"Accepted\",\r\n        signature:\"\"\r\n    })\r\n    .catch((e)=>{\r\n        console.log(\"Error occured\");\r\n        return null;\r\n    })\r\n    \r\n}\r\n\r\nasync function addLogiPostDetails(senderName,senderAddressNo,senderStreet1,senderStreet2,senderCity,senderEmail,recipientName,recipientAddressNo,recipientStreet1,recipientStreet2,recipientCity,recipientEmail,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice,weight){\r\n     \r\n      \r\n    return firestore\r\n    .collection(\"PendingMails\")\r\n    .add({\r\n        \r\n        acceptedPostoffice:firestore.doc('PostOffice/'+acceptedPostoffice),\r\n        destinationPostoffice:firestore.doc('PostOffice/'+destinationPostoffice),\r\n        histories:[{\r\n            action:\"Accepted\",\r\n            employee:firestore.doc('Users/'+employee)\r\n        }],\r\n        locations:[{\r\n            location:new firebase.firestore.GeoPoint(loc_lat,loc_long),\r\n            timestamp:firebase.firestore.Timestamp.now()\r\n        }],\r\n\r\n        //pid:pid,\r\n        \r\n        recipientDetails:{\r\n            recipientName:recipientName,\r\n            recipientAddressNo:recipientAddressNo,\r\n            recipientStreet1:recipientStreet1,\r\n            recipientStreet2:recipientStreet2,\r\n            recipientCity:recipientCity,\r\n            recipientEmail:recipientEmail\r\n        },\r\n        senderDetails:{\r\n            senderName:senderName,\r\n            senderAddressNo:senderAddressNo,\r\n            senderStreet1:senderStreet1,\r\n            senderStreet2:senderStreet2,\r\n            senderCity:senderCity,\r\n            senderEmail:senderEmail\r\n        },\r\n        \r\n        cost:cost,\r\n        type: \"Package\",\r\n        timestamp:firebase.firestore.Timestamp.now(),\r\n        state:\"Accept\",\r\n        signature:\"\",\r\n        weight:weight\r\n    })\r\n    .catch((e)=>{\r\n        console.log(\"Error occured\");\r\n        return null;\r\n    })\r\n    \r\n}\r\n\r\nasync function addMoneyOrderDetails(recipientName,recipientID,senderName,senderID,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice,moneyAmount,securityCode){\r\n     \r\n      \r\n    return firestore\r\n    .collection(\"PendingMails\")\r\n    .add({\r\n        \r\n        acceptedPostoffice:firestore.doc('PostOffice/'+acceptedPostoffice),\r\n        destinationPostoffice:firestore.doc('PostOffice/'+destinationPostoffice),\r\n        histories:[{\r\n            action:\"Accepted\",\r\n            employee:firestore.doc('Users/'+employee)\r\n        }],\r\n        \r\n    //pid:pid,\r\n        \r\n        recipientDetails:{\r\n            recipientName:recipientName,\r\n            recipientID:recipientID,\r\n        },\r\n        senderDetails:{\r\n            senderName:senderName,\r\n            senderID:senderID,\r\n        },\r\n        \r\n        cost:cost,\r\n        type: \"MoneyOrder\",\r\n        timestamp:firebase.firestore.Timestamp.now(),\r\n        moneyAmount:moneyAmount,\r\n        securityCode:securityCode\r\n    })\r\n    .catch((e)=>{\r\n        console.log(\"Error occured\");\r\n        return null;\r\n    })\r\n    \r\n}\r\nasync function deliverMoneyOrder(data){\r\n     \r\n    //console.log(data.acceptedPostoffice,data.destinationPostoffice,data.recipientDetails.recipientName,data.recipientDetails.recipientID,data.senderDetails.senderName,data.senderDetails.senderID);  \r\n    return firestore\r\n    .collection(\"DeliveredMails\")\r\n    .add({\r\n        \r\n        pid:data.id,\r\n        acceptedPostoffice:data.acceptedPostoffice,\r\n        destinationPostoffice:data.destinationPostoffice,\r\n        recipientDetails:{\r\n            recipientName:data.recipientDetails.recipientName,\r\n            recipientID:data.recipientDetails.recipientID,\r\n        },\r\n        histories:data.histories,\r\n        senderDetails:{\r\n            senderName:data.senderDetails.senderName,\r\n            senderID:data.senderDetails.senderID,\r\n        },\r\n        type: \"MoneyOrder\",\r\n        timestamp:firebase.firestore.Timestamp.now(),\r\n        moneyAmount:data.moneyAmount,\r\n        securityCode:data.securityCode,\r\n    \r\n    })\r\n    .catch((e)=>{\r\n        console.log(\"Error occured\");\r\n        return null;\r\n    })\r\n    \r\n}\r\n\r\nfunction* getPostOffice(){\r\n    \r\n    const ref = firestore.collection(\"PostOffice\");\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n\r\n    const Data = yield take(channel);\r\n    //console.log(\"Charitha\");\r\n    return Data.docs.map((doc: any) => {\r\n        const data = doc.data();\r\n        const documentID = doc.id;\r\n        //console.log(data.city);\r\n        return {\r\n            \r\n            code: documentID,\r\n            city:data.city,\r\n            location:data.location,\r\n            \r\n        };\r\n        \r\n        \r\n    });\r\n      \r\n  \r\n}\r\n\r\nfunction* getMoneyOrders(postOfficeID){\r\n    console.log(postOfficeID);\r\n    const postOffice=firestore.collection(\"PostOffice\").doc(postOfficeID)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"destinationPostoffice\",'==',postOffice).orderBy(\"type\").startAt(\"MoneyOrder\").endAt(\"MoneyOrder\");\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n\r\n    const Data = yield take(channel);\r\n    //console.log(\"Charitha\");\r\n    return Data.docs.map((doc: any) => {\r\n        const data = doc.data();\r\n        const documentID = doc.id;\r\n        console.log(documentID);\r\n        \r\n        return {\r\n            moneyAmount:data.moneyAmount,\r\n            pid:documentID,\r\n            recipientID:data.recipientDetails.recipientID,\r\n            recipientName:data.recipientDetails.recipientName,\r\n            securityCode:data.securityCode,\r\n            senderID:data.senderDetails.senderID,\r\n            senderName:data.senderDetails.senderName,\r\n            timestamp:data.timestamp\r\n            \r\n        };\r\n        \r\n        \r\n    });\r\n      \r\n  \r\n}\r\nfunction* removeMoneyOrder(id){\r\n    console.log(id)\r\n    const ref = firestore.collection(\"PendingMails\").doc(id.id);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n\r\n    const doc = yield take(channel);\r\n    const data=doc.data()\r\n    //console.log(\"doc\",data.acceptedPostoffice);\r\n    doc.ref.delete();\r\n    data.histories.push({action:\"Delivered\",employee:firestore.doc('Users/'+id.userID)})\r\n    console.log(\"history\",data.histories)\r\n    return {\r\n        id:doc.id,\r\n        acceptedPostoffice:data.acceptedPostoffice,\r\n        destinationPostoffice:data.destinationPostoffice,\r\n        histories:data.histories,\r\n        recipientDetails:{\r\n            recipientName:data.recipientDetails.recipientName,\r\n            recipientID:data.recipientDetails.recipientID,\r\n        },\r\n        senderDetails:{\r\n            senderName:data.senderDetails.senderName,\r\n            senderID:data.senderDetails.senderID,\r\n        },\r\n        type: \"MoneyOrder\",\r\n        moneyAmount:data.moneyAmount,\r\n        securityCode:data.securityCode,\r\n        timestamp:firebase.firestore.Timestamp.now()\r\n    }\r\n\r\n    \r\n}\r\n    \r\nexport function* addPostDetailsSaga(data){\r\n\r\n    //console.log(\"addpostsaga\",data.data.values)   \r\n    const recipientName = data.data.values.recipientName\r\n    const recipientAddressNo= data.data.values.recipientAddressNo\r\n    const recipientStreet1=data.data.values.recipientStreet1\r\n    const recipientStreet2=data.data.values.recipientStreet2\r\n    const recipientCity =data.data.values.recipientCity\r\n    const cost=data.data.values.cost\r\n    //const pid=data.data.values.pid+data.num\r\n    const loc_long=data.data.values.acceptedPostOffice.location._long\r\n    const loc_lat=data.data.values.acceptedPostOffice.location._lat\r\n    const employee=data.data.values.employee\r\n    const acceptedPostoffice=data.data.values.acceptedPostOffice.code\r\n    const destinationPostoffice=data.data.values.destinationPostOffice\r\n    \r\n    //console.log(\"po details\",loc_long,loc_lat,acceptedPostoffice);\r\n    let result = yield call(addPostDetails,recipientName,recipientAddressNo,recipientStreet1,recipientStreet2,recipientCity,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice);\r\n    console.log(\"res add\",result.id)\r\n    \r\n    yield put(addPostSuccess(result.id));\r\n    \r\n}\r\n\r\nexport function* addRegPostDetailsSaga(data){\r\n\r\n    //console.log(\"addpostsaga\",data.data.values) \r\n    const senderName=data.data.values.senderName\r\n    const senderAddressNo=data.data.values.senderAddressNo\r\n    const senderStreet1=data.data.values.senderStreet1\r\n    const senderStreet2=data.data.values.senderStreet2\r\n    const senderCity=data.data.values.senderCity\r\n    const senderEmail=data.data.values.senderEmail  \r\n    const recipientName = data.data.values.recipientName\r\n    const recipientAddressNo= data.data.values.recipientAddressNo\r\n    const recipientStreet1=data.data.values.recipientStreet1\r\n    const recipientStreet2=data.data.values.recipientStreet2\r\n    const recipientCity =data.data.values.recipientCity\r\n    const cost=data.data.values.cost\r\n    //const pid=data.data.values.pid+data.num\r\n    const loc_long=data.data.values.long\r\n    const loc_lat=data.data.values.lat\r\n    const employee=data.data.values.employee\r\n    const acceptedPostoffice=data.data.values.acceptedPostOffice\r\n    const destinationPostoffice=data.data.values.destinationPostOffice\r\n    \r\n    //console.log(senderStreet1);\r\n    let result = yield call(addRegPostDetails,senderName,senderAddressNo,senderStreet1,senderStreet2,senderCity,senderEmail,recipientName,recipientAddressNo,recipientStreet1,recipientStreet2,recipientCity,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice);\r\n    //console.log(\"res add\",result.id)\r\n    \r\n    yield put(addPostSuccess(result.id));\r\n    \r\n}\r\n\r\nexport function* addLogiPostDetailsSaga(data){\r\n    //console.log(\"num\",data.num);\r\n    //console.log(\"addpostsaga\",data.data.values)  \r\n    const senderName=data.data.values.senderName\r\n    const senderAddressNo=data.data.values.senderAddressNo\r\n    const senderStreet1=data.data.values.senderStreet1\r\n    const senderStreet2=data.data.values.senderStreet2\r\n    const senderCity=data.data.values.senderCity\r\n    const senderEmail=data.data.values.senderEmail  \r\n    const recipientName = data.data.values.recipientName\r\n    const recipientAddressNo= data.data.values.recipientAddressNo\r\n    const recipientStreet1=data.data.values.recipientStreet1\r\n    const recipientStreet2=data.data.values.recipientStreet2\r\n    const recipientCity =data.data.values.recipientCity\r\n    const recipientEmail=data.data.values.recipientEmail \r\n    const cost=data.data.values.cost\r\n    //const pid=data.data.values.pid+data.num\r\n    const loc_long=data.data.values.long\r\n    const loc_lat=data.data.values.lat\r\n    const employee=data.data.values.employee\r\n    const acceptedPostoffice=data.data.values.acceptedPostOffice\r\n    const destinationPostoffice=data.data.values.destinationPostOffice\r\n    const weight=data.data.values.weight\r\n    \r\n    \r\n    let result = yield call(addLogiPostDetails,senderName,senderAddressNo,senderStreet1,senderStreet2,senderCity,senderEmail,recipientName,recipientAddressNo,recipientStreet1,recipientStreet2,recipientCity,recipientEmail,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice,weight);\r\n    //console.log(\"res add\",result)\r\n    \r\n    yield put(addPostSuccess(result.id));\r\n    \r\n}\r\n\r\nexport function* addMoneyOrderDetailsSaga(data){\r\n\r\n    //console.log(\"addpostsaga\",data.data.values)   \r\n    const recipientName = data.data.values.recipientName\r\n    const recipientID= data.data.values.recipientID\r\n    const senderName=data.data.values.senderName\r\n    const senderID=data.data.values.senderID\r\n    const cost=data.data.values.cost\r\n    //const pid=data.data.values.pid+data.num\r\n    const loc_long=data.data.values.long\r\n    const loc_lat=data.data.values.lat\r\n    const employee=data.data.values.employee\r\n    const acceptedPostoffice=data.data.values.acceptedPostOffice\r\n    const destinationPostoffice=data.data.values.destinationPostOffice\r\n    const moneyAmount=data.data.values.moneyAmount\r\n    const securityCode=data.data.values.securityCode\r\n    \r\n    //console.log(employee);\r\n    let result = yield call(addMoneyOrderDetails,recipientName,recipientID,senderName,senderID,cost,loc_lat,loc_long,employee,acceptedPostoffice,destinationPostoffice,moneyAmount,securityCode);\r\n    //console.log(\"res add\",result)\r\n    \r\n    yield put(addPostSuccess(result.id));\r\n    \r\n}\r\nexport function* getPostOfficeSaga(){ \r\n    \r\n    let postOffice = yield call(getPostOffice);\r\n    \r\n    //console.log(\"res \",postOffice);\r\n    yield put(getPostOfficeSuccess(postOffice));\r\n    \r\n}\r\n\r\nexport function* getMoneyOrdersSaga(postOfficeID){ \r\n    //console.log(\"postOfficeID\",postOfficeID);\r\n    \r\n    let moneyOrders = yield call(getMoneyOrders,postOfficeID.postOfficeID);\r\n    \r\n    //console.log(\"res \",moneyOrders);\r\n    yield put(getMoneyOrdersSuccess(moneyOrders));\r\n    \r\n}\r\nexport function* removeMoneyOrderSaga(id){\r\n    //console.log(\"saga\");\r\n    let removedMoneyOrder=yield call(removeMoneyOrder,id);\r\n    //console.log(\"removedMO\",removedMoneyOrder);\r\n    let addMoneyOrder=yield call(deliverMoneyOrder,removedMoneyOrder);\r\n    //console.log(\"deliverMO\",addMoneyOrder);\r\n    yield put(removeMoneyOrderSuccess(addMoneyOrder));\r\n}\r\n\r\n\r\n","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport {performanceDataSuccess,performanceDataError} from \"../views/Home/Dashboard/dashboardActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getPerformanceDataFromPending(data){\r\n    //console.log(\"data - \",data.startDate,data.endDate,data.postOffice)\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        //console.log(data)\r\n        return data;\r\n    });\r\n}\r\n\r\nfunction* getPerformanceDataFromDelievered(data){\r\n    //console.log(\"data - \",data.startDate,data.endDate,data.postOffice)\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"DeliveredMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        //console.log(data)\r\n        return data;\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction* getRevenueList(data,performanceData){\r\n    var dayList=[]\r\n    for (var d = data.startDate; d <= data.endDate; d.setDate(d.getDate() + 1)) {\r\n        var currDate=dateFormat(new Date(d), \"yyyy/mm/dd\")\r\n        const reducer = ((previousValue, currentValue) => previousValue + parseFloat(currentValue.cost));\r\n        var normalMailsOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"NormalPost\"));\r\n        var registeredMailsOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"RegisteredPost\"));\r\n        var packageOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"Package\"));\r\n        var moneyOrderOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"MoneyOrder\"));\r\n        var normalMailTotal=normalMailsOnCurr.reduce(reducer,0);\r\n        var registeredMailTotal=registeredMailsOnCurr.reduce(reducer,0);\r\n        var moneyOrderTotal=moneyOrderOnCurr.reduce(reducer,0);\r\n        var packageTotal=packageOnCurr.reduce(reducer,0);\r\n        dayList.push({\r\n            date:currDate,\r\n            \"Normal Mail\": normalMailTotal,\r\n            \"Registered Mail\":registeredMailTotal,\r\n            \"Package Delievery\":packageTotal,\r\n            \"Money Order\":moneyOrderTotal\r\n        });\r\n    }\r\n    return dayList;\r\n}\r\n\r\n\r\n\r\nexport function* getPerformanceDataSaga(data){\r\n    try {\r\n        const performanceDataPending=yield call(getPerformanceDataFromPending,data);\r\n        const performanceDataDelivered=yield call(getPerformanceDataFromDelievered,data);\r\n        var performanceData=[...performanceDataPending,...performanceDataDelivered]\r\n        const revenueList=yield call(getRevenueList,data,performanceData)\r\n        yield put(performanceDataSuccess(revenueList));\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(performanceDataError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport { countDataSuccess, countDataError } from \"../views/Statistics/statisticsActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getCountDataFromPending(data){\r\n    //console.log(\"data - \",data.startDate,data.endDate,data.postOffice)\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        //console.log(data)\r\n        return data;\r\n    });\r\n}\r\n\r\n\r\nfunction* getCountDataFromDelievered(data){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"DeliveredMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction* getCountList(data,countData){\r\n    var dayList=[]\r\n    for (var d = data.startDate; d <= data.endDate; d.setDate(d.getDate() + 1)) {\r\n        var currDate=dateFormat(new Date(d), \"yyyy/mm/dd\")\r\n        var normalMailsOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"NormalPost\"));\r\n        var registeredMailsOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"RegisteredPost\"));\r\n        var packageOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"Package\"));\r\n        var moneyOrderOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"MoneyOrder\"));\r\n        var normalMailTotal=normalMailsOnCurr.length;\r\n        var registeredMailTotal=registeredMailsOnCurr.length;\r\n        var moneyOrderTotal=moneyOrderOnCurr.length;\r\n        var packageTotal=packageOnCurr.length;\r\n        dayList.push({\r\n            Date:currDate,\r\n            \"Normal Mail\": normalMailTotal,\r\n            \"Registered Mail\":registeredMailTotal,\r\n            \"Package Delievery\":packageTotal,\r\n            \"Money Order\":moneyOrderTotal\r\n        });\r\n    }\r\n    return dayList;\r\n}\r\n\r\nfunction* getRevenuePieData(countData){\r\n    var normalMailsList=countData.filter((e) => e.type==\"NormalPost\");\r\n    var registeredMailsList=countData.filter((e) => e.type==\"RegisteredPost\");\r\n    var packageList=countData.filter((e) =>( e.type==\"Package\"));\r\n    var moneyOrderList=countData.filter((e) =>( e.type==\"MoneyOrder\"));\r\n    const reducer = ((previousValue, currentValue) => previousValue + parseFloat(currentValue.cost));\r\n    var normalMailTotal=normalMailsList.reduce(reducer,0);\r\n    var registeredMailTotal=registeredMailsList.reduce(reducer,0);\r\n    var moneyOrderTotal=moneyOrderList.reduce(reducer,0);\r\n    var packageTotal=packageList.reduce(reducer,0);\r\n    return[\r\n        { name: 'Normal Mail',value: normalMailTotal },\r\n        { name: \"Registered Mail\",value: registeredMailTotal },\r\n        { name: \"Package Delievery\",value: packageTotal },\r\n        { name: \"Money Order\",value: moneyOrderTotal },\r\n    ];\r\n}\r\n\r\nfunction* getCountPieData(countData){\r\n    var normalMailsList=countData.filter((e) => e.type==\"NormalPost\");\r\n    var registeredMailsList=countData.filter((e) => e.type==\"RegisteredPost\");\r\n    var packageList=countData.filter((e) =>( e.type==\"Package\"));\r\n    var moneyOrderList=countData.filter((e) =>( e.type==\"MoneyOrder\"));\r\n    var normalMailTotal=normalMailsList.length;\r\n    var registeredMailTotal=registeredMailsList.length;\r\n    var moneyOrderTotal=moneyOrderList.length;\r\n    var packageTotal=packageList.length;\r\n    return[\r\n        { name: 'Normal Mail',value: normalMailTotal },\r\n        { name: \"Registered Mail\",value: registeredMailTotal },\r\n        { name: \"Package Delievery\",value: packageTotal },\r\n        { name: \"Money Order\",value: moneyOrderTotal },\r\n    ];\r\n}\r\n\r\nexport function* getCountDataSaga(data){\r\n    try {\r\n        const countDataPending=yield call(getCountDataFromPending,data);\r\n        const countDataDelivered=yield call(getCountDataFromDelievered,data);\r\n        var countData=[...countDataPending,...countDataDelivered]\r\n        //console.log(\"Count Date - \",countData)\r\n        const countList=yield call(getCountList,data,countData)\r\n        const revenuePieData=yield call(getRevenuePieData,countData)\r\n        const countPieData=yield call(getCountPieData,countData)\r\n        yield put(countDataSuccess(countList,revenuePieData,countPieData));\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(countDataError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport { complainsDataSuccess,complainsDataError, markSolvedSuccess,markSolvedError } from \"../views/Complains/complainsActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getComplainsData(data){\r\n    const postOffice=data;\r\n    const state= \"unSolved\";\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"Complains\").where(\"state\",\"==\",state).where(\"postoffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            complainID:doc.id,\r\n            name:data.name,\r\n            email:data.email,\r\n            pid:data.pid,\r\n            contactNumber:data.contactNumber,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\"),\r\n            message:data.message\r\n        }\r\n    });\r\n}\r\n\r\nexport function* getComplainDataSaga(data){\r\n    try {\r\n        const complainsData=yield call(getComplainsData,data.postOffice);\r\n       yield put(complainsDataSuccess(complainsData));\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(complainsDataError(error));\r\n        \r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\nfunction* markComplainSolved(complainID){\r\n    return firestore\r\n        .collection(\"Complains\")\r\n        .doc(complainID)\r\n        .update({state:\"Solved\"})\r\n}\r\n\r\nexport function* setComplainSolvedSaga(data){\r\n    try {\r\n        const complainID=data.data;\r\n        const complainsSolved=yield call(markComplainSolved,complainID);\r\n        yield put(markSolvedSuccess())\r\n    } catch (error) {\r\n       console.log(\"Errorr -\",error);\r\n        yield put(markSolvedError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport { getMailsSuccess,getMailsError } from \"../views/MailAssignments/mailAssignmentsActions\";\r\nimport { submitMailAssignmentsSuccess, submitMailAssignmentsError } from \"../views/MailAssignments/mailAssignmentsActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\nimport { arrayUnion } from \"firebase/firestore\";\r\n\r\nfunction* getMails(postOffice){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"state\",\"==\",\"destinationArrived\").where(\"destinationPostoffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return {\r\n            pid:doc.id,\r\n            addressNumber:data.recipientDetails.recipientAddressNo,\r\n            city:data.recipientDetails.recipientCity,\r\n            recepientName:data.recipientDetails.recipientName,\r\n            street1:data.recipientDetails?.recipientStreet1,\r\n            street2:data.recipientDetails?.recipientStreet2\r\n        };\r\n    });\r\n}\r\n\r\nfunction* getPostmenRoutes(postOffice){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"Users\").where(\"role\",\"==\",\"postman\").where(\"postOffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return {\r\n            id:doc.id,\r\n            email:data.email,\r\n            lastName:data.lastName,\r\n            firstName:data.firstName,\r\n            routes:data.route,\r\n        };\r\n    });\r\n}\r\n\r\n\r\nfunction* assignPostmen(mailsData,postmenRoutes){\r\n    return mailsData.map((mail)=>{\r\n        const availablePostmen = postmenRoutes.filter((postman)=>(postman.routes?.includes(mail.street1) || (postman.routes?.includes(mail.street2))))\r\n        //console.log(\"asign - \",mail,availablePostmen)\r\n        const availablePostman=availablePostmen[0];\r\n        return {\r\n            pid:mail.pid,\r\n            addressNumber:mail.addressNumber,\r\n            city:mail.city,\r\n            street1:mail?.street1,\r\n            street2:mail.street2?mail.street2:\"-\",\r\n            postmanID:availablePostman?availablePostman.id:\"-\",\r\n            postmanEmail: availablePostman?availablePostman.email:\"-\",\r\n            postmanFirstName:availablePostman?availablePostman.firstName:\"-\",\r\n            postmanLastName:availablePostman?availablePostman.lastName:\"-\"\r\n        }\r\n    })\r\n}\r\n\r\nexport function* getMailsSaga(data){\r\n    try {\r\n        const mailsData=yield call(getMails,data.postOffice);\r\n        const postmenRoutes=yield call(getPostmenRoutes,data.postOffice);\r\n        const assignments=yield call(assignPostmen,mailsData,postmenRoutes)\r\n        //console.log(\"Assignments - \",assignments)\r\n        yield put(getMailsSuccess(assignments,postmenRoutes));\r\n    } catch (error) {\r\n        console.log(\"Erorr -\",error);\r\n        yield put(getMailsError(error));\r\n        \r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nfunction* submitAssignments(assignments){\r\n    // console.log(\"Assignments - \",assignments);\r\n    return assignments.forEach((assignment)=>{\r\n        if(assignment.postmanID!=\"-\"){\r\n            var Mailref = firestore.collection('PendingMails').doc(assignment.pid);\r\n            Mailref.update({\r\n                \"pid\":assignment.pid,\r\n                \"state\": \"Assigned\",\r\n                \"histories\": arrayUnion({action:\"Assigned\",employee:firestore.doc('Users/' +assignment.postmanID)})\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\n\r\n\r\nexport function* submitAssignmentsSaga(data){\r\n    try {\r\n        const submitAssign=yield call(submitAssignments,data.assignments);\r\n        yield put(submitMailAssignmentsSuccess());\r\n    } catch (error) {\r\n        console.log(\"Erorr -\",error);\r\n        yield put(submitMailAssignmentsError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take,all} from \"redux-saga/effects\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport { confirmTransferError, confirmTransferSuccess, getTransfersError, getTransfersSuccess } from \"../views/MailTransfers/mailTransfersActions\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getPostOffices(){\r\n    const ref = firestore.collection(\"PostOffice\"); \r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return {\r\n            code:data.code,\r\n            PostOffice:data.city\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction* getTransfers(postOffice,postOffices){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"state\",\"==\",\"Accepted\").where(\"acceptedPostoffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        var office=(postOffices.filter((e) =>( e.code == data.destinationPostoffice.id)))[0];\r\n        return {\r\n            pid:doc.id,\r\n            addressNumber:data.recipientDetails.recipientAddressNo,\r\n            city:data.recipientDetails.recipientCity,\r\n            street1:data.recipientDetails?.recipientStreet1,\r\n            street2:data.recipientDetails?.recipientStreet2,\r\n            destinationPostOffice:office.PostOffice,\r\n            destinationPostOfficeCode:office.code,\r\n            type:data.type\r\n        };\r\n    });\r\n}\r\n\r\nfunction* groupTransfers(transferData,postOffices){\r\n    var transfers=[]\r\n    postOffices.forEach((office)=>{\r\n        var mails=(transferData.filter((e) =>( e.destinationPostOfficeCode == office.code)));\r\n        if(mails.length>0){\r\n            transfers.push({\r\n                postOfficeCode:office.code,\r\n                postOffice:office.PostOffice,\r\n                itemCount:mails.length,\r\n                mails:mails\r\n            })\r\n        }   \r\n    })\r\n    return transfers; \r\n}\r\n\r\n\r\nasync function markTransfer(date,transfer,acceptedPostoffice) {\r\n    var docID;\r\n    const destinationPostoffice=transfer.postOfficeCode;\r\n    const mails=transfer.mails\r\n    const mailList = mails.map((mail)=>{\r\n        return (\r\n            firestore.collection(\"PendingMails\").doc(mail.pid)\r\n        )\r\n    })\r\n    const relevantDocumentRef = await firestore\r\n      .collection(\"Transfers\")\r\n      .where(\"date\", \"==\", date)\r\n      .where(\"destinationPostoffice\",\"==\",destinationPostoffice)\r\n      .get();\r\n\r\n    if (relevantDocumentRef.empty) {\r\n        var doc =firestore\r\n        .collection(\"Transfers\")\r\n        .doc();\r\n       await (\r\n        doc.set({\r\n          mails: mailList,\r\n          date,\r\n          destinationPostoffice,\r\n          acceptedPostoffice,\r\n          state:\"Created\"\r\n        })\r\n        .then(() => {\r\n          docID= doc.id;\r\n        })\r\n        .catch((e) => {\r\n          throw e;\r\n        }));\r\n    }\r\n    else{\r\n       await (firestore\r\n        .collection(\"Transfers\")\r\n        .doc(relevantDocumentRef.docs[0].id)\r\n        .update({\r\n          \r\n          mails:mailList\r\n        })\r\n        .then(() => {\r\n          docID= relevantDocumentRef.docs[0].id;\r\n        })\r\n        .catch((e) => {\r\n          throw e;\r\n        }));\r\n    }\r\n        return {\r\n          id:docID,\r\n          postOfficeCode:transfer.postOfficeCode,\r\n          postOffice:transfer.postOffice,\r\n          itemCount:transfer.itemCount,\r\n          mails:mails\r\n    }\r\n}\r\n\r\nfunction* markTransfers(transferAssignments,postOffice){\r\n    const date=new Date();\r\n    const formattedDate=dateFormat(date, \"yyyy/mm/dd\");\r\n    const transferList= yield all(transferAssignments.map((transfer)=> \r\n         call (markTransfer,formattedDate,transfer,postOffice)\r\n    ))\r\n    return transferList;\r\n}\r\n  \r\nexport function* getTransfersSaga(data){\r\n    try {\r\n        const postOffice=(data.postOffice).toString();\r\n        const postOffices=yield call(getPostOffices);\r\n        const transferData=yield call(getTransfers,postOffice,postOffices);\r\n        const transferAssignments=yield call(groupTransfers,transferData,postOffices)\r\n        let transferMarking=yield call(markTransfers,transferAssignments,postOffice);\r\n        yield put(getTransfersSuccess(transferMarking));\r\n    } catch (error) {\r\n        console.log(\"Error -\",error);\r\n        yield put(getTransfersError(error)); \r\n    }\r\n}\r\n\r\nfunction* confirmTransfers(transfers){\r\n  return transfers.forEach((transfer)=>{\r\n          var transferRef = firestore.collection('Transfers').doc(transfer.id);\r\n          transferRef.update({\r\n              \"state\": \"Confirmed\"\r\n          })\r\n  })  \r\n}\r\n\r\nfunction* confirmMails(transfers){\r\n  return transfers.forEach((transfer)=>{\r\n    return transfer.mails.forEach((mail)=>{\r\n      var mailRef = firestore.collection('PendingMails').doc(mail.pid);\r\n      console.log(\"Mail update\",mail)\r\n      mailRef.update({\r\n          \"state\": \"Transfered\"\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport function* confirmTransfersSaga(data){\r\n  try {\r\n      const transfers=data.transfers;\r\n      const transferConfirm=yield call(confirmTransfers,transfers);\r\n      const mailsConfirm=yield call(confirmMails,transfers);     \r\n      yield put(confirmTransferSuccess());\r\n  } catch (error) {\r\n      console.log(\"Error -\",error);\r\n      yield put(confirmTransferError(error));   \r\n  }\r\n}","import {firestore,firebase} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport {postmenRoutesDataSuccess,postmenRoutesDataError,saveStreetSuccess,saveStreetError,removeStreetSuccess,removeStreetError} from \"../views/PostmenRoutes/postmenRoutesActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getPostmenRoutesData(data){\r\n    const postOffice=data;\r\n    const state= \"postman\";\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"Users\").where(\"role\",\"==\",state).where(\"postOffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            userID:doc.id,\r\n            firstName:data.firstName,\r\n            lastName:data.lastName,\r\n            email:data.email,\r\n            NIC:data.NIC,\r\n            contactNumber:data.contactNumber,\r\n            routes:data.route?? []\r\n        }\r\n    });\r\n}\r\n\r\nexport function* getPostmenRoutesDataSaga(data){\r\n    try {\r\n        const postmenRoutesData=yield call(getPostmenRoutesData,data.postOffice);\r\n       yield put(postmenRoutesDataSuccess(postmenRoutesData));\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(postmenRoutesDataError(error));\r\n        \r\n    }\r\n  \r\n}\r\n\r\nasync function addStreet(data){\r\n    const userID=data.userID;\r\n    const street = data.street;\r\n    const ref = firestore.collection(\"Users\").doc(userID);\r\n    return await ref.update({\r\n        route: firebase.firestore.FieldValue.arrayUnion(street)\r\n    });\r\n    \r\n}\r\n\r\nexport function* addStreetSaga(data){\r\n    try {\r\n        const saveStreet=yield call(addStreet,data);\r\n        yield put(saveStreetSuccess());\r\n    } catch (error) {\r\n        console.log(\"Erorr -\",error);\r\n        yield put(saveStreetError(error));\r\n        \r\n    }\r\n  \r\n}\r\n\r\nasync function deleteStreet(data){\r\n    const userID=data.userID;\r\n    const street = data.street;\r\n    const ref = firestore.collection(\"Users\").doc(userID);\r\n    return await ref.update({\r\n        route: firebase.firestore.FieldValue.arrayRemove(street)\r\n    });\r\n    \r\n}\r\n\r\n\r\nexport function* removeStreetSaga(data){\r\n    try {\r\n        const removeStreet=yield call(deleteStreet,data);\r\n        yield put(removeStreetSuccess());\r\n    } catch (error) {\r\n        console.log(\"Erorr -\",error);\r\n        yield put(removeStreetError(error));\r\n        \r\n    }\r\n  \r\n}","import { all, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport * as loginActionTypes from \"./../views/Login/loginActionTypes.js\";\r\nimport * as homeActionTypes from \"./../views/Home/homeActionTypes.js\";\r\nimport * as addEmployeeActionTypes from \"./../views/Registration/registrationActionTypes\";\r\nimport * as liveDeliveryActionTypes from \"./../views/LiveDelivery/liveDeliveryActionTypes\";\r\nimport * as recepActionTypes from \"./../views/RecepFunc/recepActionTypes\";\r\nimport * as dashboardActionTypes from \"../views/Home/Dashboard/dashboardActionTypes\";\r\nimport * as statisticsActionTypes from \"./../views/Statistics/statisticActionTypes\";\r\nimport * as complainsActionTypes from \"./../views/Complains/complainsActionTypes\";\r\nimport * as mailAssignmentsActionTypes from \"./../views/MailAssignments/mailAssignmentsActionTypes\";\r\nimport * as mailTransfersActionTypes from \"./../views/MailTransfers/mailTransfersActionTypes\";\r\nimport * as postmenRoutesActionTypes from \"./../views/PostmenRoutes/postmenRoutesActionTypes\";\r\nimport { loginSaga,logoutSaga } from \"./loginSaga.js\";\r\nimport { getUserDetailsSaga } from \"./homeSaga.js\";\r\nimport { addEmployeeSaga } from \"./employeeRegistrationSaga.js\";\r\nimport { getLiveLocationsSaga } from \"./liveDeliverySaga.js\";\r\nimport {addPostDetailsSaga,addRegPostDetailsSaga,addLogiPostDetailsSaga,addMoneyOrderDetailsSaga, getMoneyOrdersSaga,removeMoneyOrderSaga} from \"./recepSaga.js\";\r\nimport {getPostOfficeSaga} from \"./recepSaga.js\";\r\nimport { getPerformanceDataSaga } from \"./dashboardSaga.js\";\r\nimport { getCountDataSaga } from \"./statisticsSaga.js\";\r\nimport { getComplainDataSaga,setComplainSolvedSaga } from \"./complainsSaga.js\";\r\nimport { getMailsSaga,submitAssignmentsSaga } from \"./mailAssignmentsSaga.js\";\r\nimport { confirmTransfersSaga, getTransfersSaga } from \"./mailTransfersSaga.js\";\r\nimport { getPostmenRoutesDataSaga, addStreetSaga,removeStreetSaga} from \"./postmenRoutesSaga.js\";\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(loginActionTypes.LOGIN_REQUEST, loginSaga),\r\n    takeEvery(loginActionTypes.LOGOUT_REQUEST, logoutSaga),\r\n    takeEvery(homeActionTypes.AUTHORIZATION_REQUEST,getUserDetailsSaga),\r\n    takeEvery(addEmployeeActionTypes.ADD_EMPLOYEE_REQUEST,addEmployeeSaga),\r\n    takeEvery(liveDeliveryActionTypes.GET_LOCATIONS_REQUEST,getLiveLocationsSaga),\r\n    takeEvery(recepActionTypes.ADD_POST_START,addPostDetailsSaga),\r\n    takeLatest(recepActionTypes.GET_POSTOFFICE_START,getPostOfficeSaga),\r\n    takeEvery(dashboardActionTypes.PERFORMANCE_DATA_REQUEST,getPerformanceDataSaga),\r\n    takeEvery(statisticsActionTypes.COUNT_DATA_REQUEST,getCountDataSaga),\r\n    takeEvery(complainsActionTypes.COMPLAINS_DATA_REQUEST,getComplainDataSaga),\r\n    takeEvery(complainsActionTypes.MARK_SOLVED_REQUEST,setComplainSolvedSaga),\r\n    takeEvery(recepActionTypes.ADD_REG_POST_START,addRegPostDetailsSaga),\r\n    takeEvery(recepActionTypes.ADD_LOGI_POST_START,addLogiPostDetailsSaga),\r\n    takeEvery(recepActionTypes.ADD_MONEYORDER_START,addMoneyOrderDetailsSaga),\r\n    takeLatest(recepActionTypes.GET_MONEYORDERS_START,getMoneyOrdersSaga),\r\n    takeEvery(mailAssignmentsActionTypes.GET_MAILS_REQUEST,getMailsSaga),\r\n    takeEvery(mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_REQUEST,submitAssignmentsSaga),\r\n    takeEvery(mailTransfersActionTypes.GET_TRANSFERS_REQUEST,getTransfersSaga),\r\n    takeEvery(mailTransfersActionTypes.CONFIRM_TRANSFER_REQUEST,confirmTransfersSaga),\r\n    takeEvery(recepActionTypes.REMOVE_MONEY_ORDER_START,removeMoneyOrderSaga),\r\n    takeEvery(postmenRoutesActionTypes.POSTMEN_ROUTES_DATA_REQUEST,getPostmenRoutesDataSaga ),\r\n    takeEvery(postmenRoutesActionTypes.POSTMAN_ROUTE_SAVE_REQUEST,addStreetSaga ),\r\n    takeEvery(postmenRoutesActionTypes.POSTMAN_ROUTE_REMOVE_REQUEST,removeStreetSaga ),\r\n  ]);\r\n}","import * as actionTypes from \"./loginActionTypes.js\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  loggedIn: false,\r\n  requireLogin: false,\r\n  idToken: null,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_REQUEST:\r\n      return { ...state, error: \"\", loggedIn: false, requireLogin: false };\r\n    case actionTypes.LOGIN_ERROR:\r\n      return { ...state, error: action.error, requireLogin: true };\r\n    case actionTypes.LOGIN_SUCCESS:   \r\n      return { ...state, error: \"\", loggedIn: true, requireLogin: false };\r\n    case actionTypes.SAVE_ID_TOKEN:\r\n      return { ...state, idToken: action.token };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"./homeActionTypes.js\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  firstName:\"\",\r\n  lastName:\"\",\r\n  contactNumber:\"\",\r\n  NIC:\"\",\r\n  role:\"\",\r\n  idToken: null,\r\n  postOffice:\"\",\r\n  isAuthorized:false,\r\n  currentUserID:\"\",\r\n  currentUserEmail:\"\"\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.AUTHORIZATION_REQUEST:\r\n      return { ...state, error: \"\", isAuthorized: false };\r\n    case actionTypes.AUTHORIZATION_ERROR:\r\n      return { ...state, error: action.error, isAuthorized: false };\r\n    case actionTypes.AUTHORIZATION_SUCCESS:\r\n      return { ...state, error: \"\", isAuthorized: true, firstName:action.data.firstName,lastName:action.data.lastName,contactNumber:action.data.contactNumber,NIC:action.data.NIC,role:action.data.role,postOffice:action.data.postOffice.id,currentUserID:action.currentUserID,currentUserEmail:action.currentUserEmail};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import * as liveLocationActionTypes from \"./liveDeliveryActionTypes.js\";\r\nimport produce from \"immer\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  locationData: [],\r\n  locationsRetrieved:false,\r\n  postOffice:{},\r\n  isLoading:false\r\n};\r\n\r\nfunction LiveDeliveryReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case liveLocationActionTypes.GET_LOCATIONS_REQUEST:\r\n      return { ...state, error: \"\", locationsRetrieved:false,isLoading:true};\r\n    case liveLocationActionTypes.GET_LOCATIONS_ERROR:\r\n      return { ...state, error: action.error, locationsRetrieved:false,isLoading:false };\r\n    case liveLocationActionTypes.GET_LOCATIONS_SUCCESS:\r\n      return {...state,locationData:[...action.locationData],postOffice:{...action.postOfficeData.location}, locationsRetrieved:true, error: \"\",isLoading:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default LiveDeliveryReducer;\r\n","import * as types from \"./recepActionTypes\";\r\n\r\nconst initialState = {\r\n    error:null,   \r\n    postOffice:[],\r\n    post: {},\r\n    dataRetrieved:false,\r\n    isLoading:false,\r\n    moneyOrders:[],\r\n    postOfficeID:'',\r\n    \r\n    \r\n} \r\n\r\nfunction postOfficeReducer (state=initialState,action){\r\n    //console.log(\"postOfficeReducer\");\r\n    switch(action.type){\r\n        \r\n        case types.GET_POSTOFFICE_START:\r\n            return{\r\n                ...state,\r\n                dataRetrieved:false,\r\n                isLoading:true\r\n            };\r\n        case types.GET_MONEYORDERS_START:\r\n            //console.log(\"GET_START\");\r\n            return{\r\n                ...state,\r\n                dataRetrieved:false,\r\n                isLoading:true\r\n            };\r\n        \r\n            \r\n        \r\n        case types.GET_POSTOFFICE_SUCCESS:\r\n            //console.log(\"types.GET_POSTOFFICE_SUCCESS\")\r\n            return{\r\n                \r\n                ...state,\r\n                postOffice:[...action.postOffice],\r\n                dataRetrieved:true,\r\n                isLoading:false\r\n            };\r\n        \r\n            case types.GET_MONEYORDERS_SUCCESS:\r\n                //console.log(\"types.GET_MONEYORDERS_SUCCESS\")\r\n                return{\r\n                    \r\n                    ...state,\r\n                    moneyOrders:[...action.moneyOrders],\r\n                    dataRetrieved:true,\r\n                    isLoading:false\r\n                };\r\n        \r\n        case types.GET_POSTOFFICE_FAIL:\r\n        case types.GET_MONEYORDERS_FAIL:\r\n            return{\r\n                ...state,\r\n                error:action.error,\r\n                dataRetrieved:false,\r\n                isLoading:false\r\n            };\r\n        case types.ADD_POST_START:\r\n        case types.ADD_REG_POST_START:\r\n        case types.ADD_LOGI_POST_START:\r\n        case types.ADD_MONEYORDER_START:\r\n            \r\n            return{\r\n                ...state,\r\n                //num:action.num\r\n                \r\n            };\r\n        \r\n            \r\n        case types.ADD_POST_SUCCESS:\r\n        case types.ADD_REG_POST_SUCCESS:\r\n        case types.ADD_LOGI_POST_SUCCESS:\r\n        case types.ADD_MONEYORDER_SUCCESS:\r\n            return{\r\n                ...state,\r\n                pid:action.pid\r\n            };\r\n        \r\n        case types.ADD_POST_FAIL:\r\n        case types.ADD_REG_POST_FAIL:\r\n        case types.ADD_LOGI_POST_FAIL:\r\n        case types.ADD_MONEYORDER_FAIL:\r\n        \r\n            return{\r\n                ...state,\r\n                error:action.error,\r\n\r\n            };\r\n        case types.REMOVE_MONEY_ORDER_START:\r\n            //console.log(\"remove start\");\r\n            return{\r\n                ...state,\r\n                id:action.id\r\n    \r\n            }\r\n        case types.REMOVE_MONEY_ORDER_SUCCESS:\r\n            return{\r\n                ...state\r\n            }\r\n        case types.REMOVE_MONEY_ORDER_FAIL:\r\n            return{\r\n                ...state,\r\n                error:action.error\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default postOfficeReducer;","import * as actionTypes from \"./registrationActionTypes.js\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  isRequested: false,\r\n  requestSuccessful: false,\r\n  requestUnSuccessful: false,\r\n};\r\n\r\nfunction registrationReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_EMPLOYEE_REQUEST:\r\n      return { ...state, error: \"\", isRequested: true, requestSuccessful: false,error:\"\",requestUnSuccessful: false};\r\n    case actionTypes.ADD_EMPLOYEE_SUCCESS:\r\n      return { ...state, isRequested: false, requestSuccessful: true,error:\"\",requestUnSuccessful: false };\r\n    case actionTypes.ADD_EMPLOYEE_ERROR:  \r\n      return { ...state, isRequested: false, requestSuccessful: false ,error:action.data,requestUnSuccessful: true};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default registrationReducer;\r\n","import * as actionTypes from \"./dashboardActionTypes.js\";\r\n\r\nconst initialState = {\r\n  isRequested:false,\r\n  revenueData:[],\r\n  error:\"\",\r\n  dataRetreived:false\r\n};\r\n\r\nfunction dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.PERFORMANCE_DATA_REQUEST:\r\n      return { ...state, error: \"\",  revenueData:[],isRequested: true, dataRetreived:false};\r\n    case actionTypes.PERFORMANCE_DATA_ERROR:\r\n      return { ...state, error: action.error, revenueData:[],isRequested:false, dataRetreived:false };\r\n    case actionTypes.PERFORMANCE_DATA_SUCCESS:\r\n      return { ...state, revenueData:[...action.data],isRequested: false, error:\"\", dataRetreived:true};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default dashboardReducer;\r\n","import * as actionTypes from \"./statisticActionTypes.js\";\r\n\r\nconst initialState = {\r\n  isRequested:false,\r\n  countData:[],\r\n  error:\"\",\r\n  revenuePieData:[],\r\n  countPieData:[]\r\n};\r\n\r\nfunction statisticsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.COUNT_DATA_REQUEST:\r\n      return { ...state, error: \"\",  countData:[],isRequested: true};\r\n    case actionTypes.COUNT_DATA_ERROR:\r\n      return { ...state, error: action.error, countData:[],isRequested:false };\r\n    case actionTypes.COUNT_DATA_SUCCESS:\r\n      return { ...state, countData:[...action.countList],revenuePieData:[...action.revenuePieData],countPieData:[...action.countPieData],isRequested: false, error:\"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default statisticsReducer;\r\n","import * as actionTypes from \"./complainsActionTypes.js\";\r\n\r\nconst initialState = {\r\n  isRequested:false,\r\n  complainData:[],\r\n  error:\"\",\r\n  dataRetrieved:false,\r\n  ismarkRequested:false,\r\n  ismarkSuccess:false,\r\n  markError:\"\"\r\n};\r\n\r\nfunction complainsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.COMPLAINS_DATA_REQUEST:\r\n      return { ...state, error: \"\", complainData:[],isRequested: true,dataRetrieved:false};\r\n    case actionTypes.COMPLAINS_DATA_ERROR:\r\n      return { ...state, error: action.error, complainData:[],isRequested:false,dataRetrieved:false};\r\n    case actionTypes.COMPLAINS_DATA_SUCCESS:\r\n      return { ...state,complainData:[...action.data],isRequested: false, error:\"\",dataRetrieved:true };\r\n    case actionTypes.MARK_SOLVED_REQUEST:\r\n      return { ...state,ismarkRequested: true,ismarkSuccess:false,markError:\"\"};\r\n    case actionTypes.MARK_SOLVED_ERROR:\r\n      return { ...state,ismarkRequested: false,ismarkSuccess:false,markError:action.data};\r\n    case actionTypes.MARK_SOLVED_SUCCESS:\r\n      return { ...state,ismarkRequested: false,ismarkSuccess:true,markError:\"\"};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default complainsReducer;","import * as mailAssignmentsActionTypes from \"./mailAssignmentsActionTypes\";\r\nimport produce from \"immer\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  assignments: [],\r\n  postmenData:[],\r\n  isLoading:false,\r\n  dataRetreived:false,\r\n  changedCount:0,\r\n  submitRequested:false,\r\n  submitSuccess:false,\r\n  submitFailure:false\r\n};\r\n\r\nfunction MailAssignmentsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case mailAssignmentsActionTypes.GET_MAILS_REQUEST:\r\n      return { ...state, error: \"\", dataRetreived:false,isLoading:true,changedCount:0};\r\n    case mailAssignmentsActionTypes. GET_MAILS_ERROR:\r\n      return { ...state, error: action.error, dataRetreived:false,isLoading:false };\r\n    case mailAssignmentsActionTypes. GET_MAILS_SUCCESS:\r\n      return {...state,assignments:[...action.assignments],postmenData:[...action.postmenRoutes], dataRetreived:true, error: \"\",isLoading:false};\r\n    case mailAssignmentsActionTypes.CHANGE_POSTMAN:\r\n        const objIndex = state.assignments.findIndex((obj => obj.pid == action.pid));\r\n        state.assignments[objIndex].postmanID = action.id;\r\n        return { ...state,changedCount:state.changedCount+1};\r\n    case mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_REQUEST:\r\n        return { ...state, submitRequested:true, submitSuccess:false,submitFailure:false};\r\n    case mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_ERROR:\r\n        return { ...state,  submitRequested:false, submitSuccess:false,submitFailure:true};\r\n    case mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_SUCCESS:\r\n        return {...state, submitRequested:false, submitSuccess:true,submitFailure:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default MailAssignmentsReducer;","import * as mailTransfersActionTypes from \"./mailTransfersActionTypes\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  transfers: [],\r\n  isLoading:false,\r\n  dataRetreived:false,\r\n  submitRequested:false,\r\n  submitSuccess:false,\r\n  submitFailure:false,\r\n  confirmationRequested:false,\r\n  confirmationSuccessfull:false,\r\n  confirmationUnsuccessfull:false,\r\n};\r\n\r\nfunction MailTransfersReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case  mailTransfersActionTypes.GET_TRANSFERS_REQUEST:\r\n      return { ...state, error: \"\", dataRetreived:false,isLoading:true};\r\n    case  mailTransfersActionTypes.GET_TRANSFERS_ERROR:\r\n      return { ...state, error: action.error, dataRetreived:false,isLoading:false };\r\n    case  mailTransfersActionTypes. GET_TRANSFERS_SUCCESS:\r\n      return {...state,transfers:[...action.transfers], dataRetreived:true, error: \"\",isLoading:false};\r\n    case  mailTransfersActionTypes.CONFIRM_TRANSFER_REQUEST:\r\n      return { ...state, error: \"\", confirmationRequested:true, confirmationSuccessfull:false, confirmationUnsuccessfull:false};\r\n    case  mailTransfersActionTypes.CONFIRM_TRANSFER_ERROR:\r\n      return { ...state, error: action.error, confirmationSuccessfull:false,confirmationRequested:false, confirmationUnsuccessfull:true};\r\n    case  mailTransfersActionTypes.CONFIRM_TRANSFER_SUCCESS:\r\n      return {...state, confirmationSuccessfull:true, error: \"\",confirmationRequested:false,confirmationUnsuccessfull:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default MailTransfersReducer;","import * as actionTypes from \"./postmenRoutesActionTypes.js\";\r\n\r\nconst initialState = {\r\n  isRequested:false,\r\n  postmenRoutesData:[],\r\n  error:\"\",\r\n  dataRetrieved:false,\r\n  isSaveRequested:false,\r\n  isSaveSuccess:false,\r\n  saveError:\"\",\r\n  isRemoveRequested:false,\r\n  isRemoveSuccess:false,\r\n  removeError:\"\",\r\n  dataChanged:false\r\n};\r\n\r\nfunction postmenRoutesReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.POSTMEN_ROUTES_DATA_REQUEST:\r\n      return { ...state, error: \"\", postmenRoutesData:[],isRequested: true,dataRetrieved:false};\r\n    case actionTypes.POSTMEN_ROUTES_DATA_ERROR:\r\n      return { ...state, error: action.error,postmenRoutesData:[],isRequested:false,dataRetrieved:false};\r\n    case actionTypes.POSTMEN_ROUTES_DATA_SUCCESS:\r\n      return { ...state,postmenRoutesData:[...action.data],isRequested: false, error:\"\",dataRetrieved:true };\r\n    case actionTypes.POSTMAN_ROUTE_SAVE_REQUEST:\r\n      return { ...state,isSaveRequested: true,isSaveSuccess:false,saveError:\"\"};\r\n    case actionTypes.POSTMAN_ROUTE_SAVE_ERROR:\r\n      return { ...state,isSaveRequested: false,isSaveSuccess:false,saveError:action.data};\r\n    case actionTypes.POSTMAN_ROUTE_SAVE_SUCCESS:\r\n      return { ...state,isSaveRequested: false,isSaveSuccess:true,saveError:\"\",dataChanged:!state.dataChanged};\r\n    case actionTypes.POSTMAN_ROUTE_REMOVE_REQUEST:\r\n      return { ...state,isRemoveRequested: true,isRemoveSuccess:false,removeError:\"\"};\r\n    case actionTypes.POSTMAN_ROUTE_REMOVE_ERROR:\r\n      return { ...state,isRemoveRequested: false,isRemoveSuccess:false,removeError:action.data};\r\n    case actionTypes.POSTMAN_ROUTE_REMOVE_SUCCESS:\r\n      return { ...state,isRemoveRequested: false,isRemoveSuccess:true,removeError:\"\",dataChanged:!state.dataChanged};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default postmenRoutesReducer;","import { combineReducers } from \"redux\";\r\nimport loginReducer from \"./views/Login/loginReducer.js\";\r\nimport homeReducer from \"./views/Home/homeReducer.js\";\r\nimport LiveDeliveryReducer from \"./views/LiveDelivery/liveDeliveryReducer\";\r\nimport postOfficeReducer from \"./views/RecepFunc/postOfficeReducer\";\r\nimport registrationReducer from \"./views/Registration/registrationReducer\";\r\nimport dashboardReducer from \"./views/Home/Dashboard/dashboardReducer\";\r\nimport statisticsReducer from \"./views/Statistics/statisticsReducer.js\";\r\nimport complainsReducer from \"./views/Complains/complainsReducer.js\";\r\nimport MailAssignmentsReducer from \"./views/MailAssignments/mailAssignmentsReducer.js\";\r\nimport MailTransfersReducer from \"./views/MailTransfers/mailTransfersReducer.js\";\r\nimport postmenRoutesReducer from \"./views/PostmenRoutes/postmenRoutesReducer.js\";\r\n\r\nexport default combineReducers({\r\n  loginReducer,\r\n  homeReducer,\r\n  LiveDeliveryReducer,\r\n  postOfficeReducer,\r\n  registrationReducer,\r\n  dashboardReducer,\r\n  statisticsReducer,\r\n  complainsReducer,\r\n  MailAssignmentsReducer,\r\n  MailTransfersReducer,\r\n  postmenRoutesReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\nimport combinedReducers from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {registerObserver} from 'react-perf-devtool';\r\nregisterObserver()\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  combinedReducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}