{"version":3,"sources":["views/Login/loginStyles.js","views/Login/loginActionTypes.js","auth/base.js","auth/auth.js","views/Login/loginActions.js","views/Login/login.jsx","components/SidePanel/sidePanelStyles.js","components/SidePanel/sidePanel.jsx","components/Charts/PerformanceChart/performanceChart.js","components/TopBar/topBarStyles.js","components/TopBar/topBar.jsx","components/Reports/reportStyles.js","components/Reports/revenueReport.js","views/Home/Dashboard/dashboardActionTypes.js","views/Home/Dashboard/dashboardActions.js","components/DatePicker/dateRangePicker.js","views/Home/Dashboard/dashboard.jsx","views/Home/homeActionTypes.js","views/Home/homeActions.js","views/Error/errorStyles.js","views/Error/authError.jsx","components/GoogleMap/googleMap.jsx","views/LiveDelivery/liveDeliveryStyles.js","views/LiveDelivery/liveDeliveryActionTypes.js","views/LiveDelivery/liveDeliveryActions.js","views/LiveDelivery/liveDelivery.jsx","components/Registration/registrationStyles.jsx","views/Registration/registrationActionTypes.js","views/Registration/registrationAction.js","components/Registration/registration.jsx","views/Registration/registration.jsx","components/Charts/PieCharts/revenueChart.js","components/Charts/AcceptedServiceTypeLineChart/acceptedServiceTypesLineChart.js","views/Statistics/statisticsStyles.js","components/DatePicker/dateFramePicker.js","views/Statistics/statisticActionTypes.js","views/Statistics/statisticsActions.js","components/Charts/PieCharts/countChart.js","components/Reports/statisticsReport.js","views/Statistics/statistics.jsx","components/Complain/complainStyles.js","views/Complains/complainsActionTypes.js","views/Complains/complainsActions.js","components/Complain/complainComponent.jsx","views/Complains/complains.jsx","views/MailAssignments/mailAssignmentsActionTypes.js","views/MailAssignments/mailAssignmentsActions.js","components/MailAssignment/mailAssignment.js","views/MailAssignments/mailAssignmentsStyles.js","views/MailAssignments/mailAssignments.jsx","components/MailTransfer/mailTransferStyles.js","components/BarcodePrinter/barcodePrinter.js","components/MailTransfer/mailTransfer.js","views/MailTransfers/mailTransfersActionTypes.js","views/MailTransfers/mailTransfersActions.js","views/MailTransfers/mailTransfersStyles.js","views/MailTransfers/mailTransfers.jsx","router.js","auth/privateRoute.js","App.js","reportWebVitals.js","sagas/loginSaga.js","firebase/firestore.js","sagas/homeSaga.js","sagas/employeeRegistrationSaga.js","sagas/liveDeliverySaga.js","sagas/dashboardSaga.js","sagas/statisticsSaga.js","sagas/complainsSaga.js","sagas/mailAssignmentsSaga.js","sagas/mailTransfersSaga.js","sagas/index.js","views/Login/loginReducer.js","views/Home/homeReducer.js","views/LiveDelivery/liveDeliveryReducer.js","views/Registration/registrationReducer.js","views/Home/Dashboard/dashboardReducer.js","views/Statistics/statisticsReducer.js","views/Complains/complainsReducer.js","views/MailAssignments/mailAssignmentsReducer.js","views/MailTransfers/mailTransfersReducer.js","rootReducer.js","index.js"],"names":["useStyles","makeStyles","errorText","fontSize","color","marginTop","float","marginLeft","fontFamily","fontStyle","fontWeight","styles","LoginPage","backgroundColor","minHeight","underline","borderBottom","labelRoot","opacity","root","marginBottom","borderStyle","borderWidth","borderColor","borderRadius","password","boxMain","background","padding","maxWidth","maxHeight","textAlign","boxMainXs","border","marginRight","title","link","LoginButton","withStyles","textDecoration","minWidth","Button","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_REQUEST","SAVE_ID_TOKEN","app","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","pending","setPending","dispatch","useDispatch","useEffect","onAuthStateChanged","user","getIdToken","then","idToken","type","actionTypes","token","localStorage","setItem","refreshToken","style","Grid","container","direction","justify","alignItems","spacing","position","top","src","width","height","alt","item","CircularProgress","size","Provider","value","withWidth","props","useContext","newClasses","data","useSelector","state","loginReducer","showPassword","setShowPassword","classes","error","formik","useFormik","initialValues","emailVal","passwordVal","validate","values","errors","test","email","length","onSubmit","touched","loginRequest","to","className","logocontainer","handleSubmit","autoComplete","TextField","id","fullWidth","label","variant","name","InputProps","InputLabelProps","onChange","handleChange","onBlur","handleBlur","undefined","endAdornment","InputAdornment","IconButton","onClick","onMouseDown","requireLogin","loginButton","drawerWidthTab","drawerWidthLap","theme","display","drawer","breakpoints","up","flexShrink","transitions","create","easing","sharp","duration","leavingScreen","appBar","boxShadow","menuButton","Divider","HoverEffect","DrawerButtons","boxSizing","DrawerLables","down","toolbar","mixins","drawerPaper","paddingLeft","paddingTop","content","flexGrow","contentXs","listItem","avatar","notifiIcon","NavButton","userRole","homeReducer","role","List","activeStyle","ListItem","button","ListItemIcon","bottom","Drawer","paper","open","PerformanceChart","dashboardReducer","revenueData","AreaChart","margin","right","left","x1","y1","x2","y2","offset","stopColor","stopOpacity","XAxis","dataKey","Label","YAxis","angle","textAnchor","CartesianGrid","strokeDasharray","Tooltip","Area","stroke","fillOpacity","fill","grow","inputRoot","inputInput","transition","userName","TopBar","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","userFirstName","firstName","userLastName","lastName","isMenuOpen","Boolean","handleMenuClose","menuId","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","onClose","MenuItem","e","preventDefault","AppBar","paddingBottom","Toolbar","Typography","noWrap","page","edge","event","currentTarget","ExportButton","RevenueReport","csvReport","filename","headers","key","dataRetreived","disableElevation","PERFORMANCE_DATA_REQUEST","PERFORMANCE_DATA_SUCCESS","PERFORMANCE_DATA_ERROR","performanceDataSuccess","DateRangePick","afterToday","DateRangePicker","dateRange","setDateRange","console","log","disabledDate","block","placeholder","Dashboard","today","Date","day20","postOffice","startDate","endDate","performanceDataRequest","justifyContent","AUTHORIZATION_REQUEST","AUTHORIZATION_SUCCESS","AUTHORIZATION_ERROR","authorizationSuccess","currentUserID","currentUserEmail","errorCode","errorMessage","AuthError","Container","GoogleMapLive","require","MarkerWithLabel","withScriptjs","withGoogleMap","liveLocations","defaultZoom","defaultCenter","postOfficeLocation","lengthOfLiveLocationList","Array","isInfoWindowShowing","setInfoWindowShowing","postmanIcon","url","scaledSize","window","google","maps","Size","labelOrigin","Point","postOfficeIcon","options","fullscreenControl","lat","_lat","lng","_long","icon","map","postman","index","location","JSON","parse","stringify","boxStyle","onCloseClick","contactNumber","dateFormat","timeStamp","Map","GET_LOCATIONS_REQUEST","GET_LOCATIONS_SUCCESS","GET_LOCATIONS_ERROR","getLocationsSuccess","locationData","postOfficeData","getLocationsError","LiveDelivery","LiveDeliveryReducer","getLocationsRequest","locationsRetrieved","googleMapURL","loadingElement","containerElement","mapElement","defaultOptions","showLabels","isLoading","InputLine","InputLabel","Input","Form","ErrorText","successText","loadingText","errorTextMsg","ADD_EMPLOYEE_REQUEST","ADD_EMPLOYEE_SUCCESS","ADD_EMPLOYEE_ERROR","addEmployeeError","RegistrationForm","userID","registrationReducer","showPassword1","setShowPassword1","showPassword2","setShowPassword2","password1","nic","password2","addEmployee","select","employeeTypes","option","marginBelow","isRequested","requestSuccessful","requestUnSuccessful","Registration","userType","RevenueChart","statisticsReducer","revenuePieData","COLORS","PieChart","Pie","nameKey","cx","cy","outerRadius","entry","Cell","AcceptedServiceTypesLineChart","countData","LineChart","Legend","Line","PieBox","PieGrid","PieTitle","DateFramePicker","COUNT_DATA_REQUEST","COUNT_DATA_SUCCESS","COUNT_DATA_ERROR","countDataSuccess","countList","countPieData","CountChart","StatisticsReport","Statistics","countDataRequest","form","alignContent","fieldLabel","fieldValue","letterSpacing","SubmitButton","COMPLAINS_DATA_REQUEST","COMPLAINS_DATA_SUCCESS","COMPLAINS_DATA_ERROR","MARK_SOLVED_REQUEST","MARK_SOLVED_SUCCESS","MARK_SOLVED_ERROR","complainsDataRequest","complainsDataSuccess","markSolvedRequest","ComplainComponent","complainData","complain","a","complainID","pid","date","message","markAsSolved","Complains","complainsReducer","dataRetrieved","GET_MAILS_REQUEST","GET_MAILS_SUCCESS","GET_MAILS_ERROR","CHANGE_POSTMAN","SUBMIT_ASSIGNMENTS_REQUEST","SUBMIT_ASSIGNMENTS_SUCCESS","SUBMIT_ASSIGNMENTS_ERROR","getMailsSuccess","assignments","postmenRoutes","getMailsError","submitMailAssignmentsError","StyledTableCell","head","body","TableCell","StyledTableRow","palette","action","hover","TableRow","table","MailAssignment","mailAssignments","postmen","postmenData","changeRow","changePostman","TableContainer","component","Paper","Table","TableHead","align","TableBody","mail","scope","addressNumber","street1","street2","city","Select","defaultValue","postmanID","el","target","MailAssignments","mailAssignmentsReducer","MailAssignmentsReducer","submitted","setSubmitted","confirmAssignments","getMails","submitRequested","submitSuccess","submitFailure","heading","typography","pxToRem","secondaryHeading","verticalAlign","accorditionHeading","details","accordionActions","column","flexBasis","helper","borderLeft","divider","primary","main","BarcodePrinter","code","MailTransfer","wrapperRef","useRef","useHistory","formattedDate","transfer","Accordion","AccordionSummary","expandIcon","itemCount","AccordionDetails","mails","row","ref","elem","current","html2canvas","scale","canvas","iframe","document","createElement","appendChild","imgUrl","toDataURL","format","quality","newWin","frames","write","close","printBarcode","GET_TRANSFERS_REQUEST","GET_TRANSFERS_SUCCESS","GET_TRANSFERS_ERROR","CONFIRM_TRANSFER_REQUEST","CONFIRM_TRANSFER_SUCCESS","CONFIRM_TRANSFER_ERROR","getTransfersError","confirmTransferSuccess","transfers","confirmTransferError","MailTransfers","transferReducer","MailTransfersReducer","confirmTransfers","confirmTransfer","getTransfers","confirmationRequested","confirmationSuccessfull","Authorization","uID","uid","isAuthorized","exact","path","Login","PrivateRoute","RouteComponent","rest","render","routeProps","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","loginSaga","request","signInWithEmailAndPassword","put","logoutSaga","signOut","firestore","getUserDetailsSaga","getUserDetails","collection","doc","get","catch","call","addEmployeeSaga","NIc","axios","method","params","lastname","NIC","response","status","result","toString","getLiveLocations","getPostmanDetails","getDataList","getLiveLocationsSaga","collectionGroup","where","channel","eventChannel","emit","onSnapshot","take","Data","docs","documentID","parent","geoLocations","latestElement","sort","b","timestamp","seconds","userDocumentID","longitude","latitude","postOfficeRef","getPostOffice","locations","loc","filter","getPerformanceDataFromPending","getPerformanceDataFromDelievered","getRevenueList","getPerformanceDataSaga","cost","toDate","performanceData","dayList","d","setDate","getDate","currDate","reducer","previousValue","currentValue","parseFloat","normalMailsOnCurr","registeredMailsOnCurr","packageOnCurr","moneyOrderOnCurr","normalMailTotal","reduce","registeredMailTotal","moneyOrderTotal","packageTotal","push","performanceDataPending","performanceDataDelivered","revenueList","getCountDataFromPending","getCountDataFromDelievered","getCountList","getRevenuePieData","getCountPieData","getCountDataSaga","normalMailsList","registeredMailsList","packageList","moneyOrderList","countDataPending","countDataDelivered","getComplainsData","getComplainDataSaga","markComplainSolved","setComplainSolvedSaga","complainsData","update","getPostmenRoutes","assignPostmen","getMailsSaga","submitAssignments","submitAssignmentsSaga","recipientDetails","recipientAddressNo","recipientCity","recepientName","recipientName","recipientStreet1","recipientStreet2","routes","route","mailsData","availablePostman","includes","postmanEmail","postmanFirstName","postmanLastName","forEach","assignment","arrayUnion","employee","getPostOffices","groupTransfers","markTransfers","getTransfersSaga","confirmMails","confirmTransfersSaga","PostOffice","postOffices","office","destinationPostoffice","destinationPostOffice","destinationPostOfficeCode","transferData","postOfficeCode","markTransfer","acceptedPostoffice","mailList","relevantDocumentRef","empty","set","docID","transferAssignments","all","transferList","transferMarking","mailRef","takeEvery","loginActionTypes","homeActionTypes","addEmployeeActionTypes","liveDeliveryActionTypes","dashboardActionTypes","statisticsActionTypes","complainsActionTypes","mailAssignmentsActionTypes","mailTransfersActionTypes","initialState","loggedIn","liveLocationActionTypes","ismarkRequested","ismarkSuccess","markError","changedCount","objIndex","findIndex","obj","confirmationUnsuccessfull","combineReducers","registerObserver","sagaMiddleware","createSagaMiddleware","store","createStore","combinedReducers","composeWithDevTools","applyMiddleware","run","rootSaga","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af37da79.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n  errorText: {\r\n    fontSize: \"14px\",\r\n    color: \"#F7685B\",\r\n    marginTop: -14,\r\n    float: \"left\",\r\n    marginLeft: \"13px\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 600,\r\n  },\r\n}));\r\n\r\nexport const styles = {\r\n  LoginPage:{\r\n    backgroundColor:\"#d4d4d4\",\r\n    minHeight:\"100vh\"\r\n  },\r\n\r\n  underline: {\r\n    \"&&&:before\": {\r\n      borderBottom: \"none\",\r\n    },\r\n    \"&&:after\": {\r\n      borderBottom: \"none\",\r\n    },\r\n  },\r\n  labelRoot: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0) !important\",\r\n    opacity: 0.7,\r\n    color: \"#6A707E\",\r\n    fontFamily: \"Poppins\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 400,\r\n    fontSize: \"16px\",\r\n  },\r\n  root: {\r\n    marginBottom: \"16px\",\r\n    backgroundColor: \"#FDFDFD !important\",\r\n    fontFamily: \"Poppins\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"#D9EAFD\",\r\n    borderRadius: 8,\r\n  },\r\n  \r\n  password: {\r\n    marginBottom: \"16px\",\r\n    backgroundColor: \"#FDFDFD !important\",\r\n    fontFamily: \"Poppins\",\r\n    borderStyle: \"solid\",\r\n    borderWidth: 1,\r\n    borderColor: \"#D9EAFD\",\r\n    borderRadius: 8,\r\n  },\r\n  boxMain: {\r\n    background: \"#121226\",\r\n    borderRadius: \"16px\",\r\n    padding: \"53px\",\r\n    maxWidth: \"436px\",\r\n    maxHeight: \"473px\",\r\n    marginTop: \"6%\",\r\n    textAlign: \"center\",\r\n  },\r\n  boxMainXs: {\r\n    background: \"#121226\",\r\n    padding: \"25px\",\r\n    maxWidth: \"488px\",\r\n    maxHeight: \"473px\",\r\n    border: \"2px solid #F4F4F4\",\r\n    marginLeft: \"20px\",\r\n    marginRight: \"20px\",\r\n    background: \"#980404\",\r\n  },\r\n  title: {\r\n    fontFamily: \"Poppins\",\r\n    fontWeight: \"800\",\r\n    fontStyle: \"normal\",\r\n    marginTop: 0,\r\n    marginBottom: \"60px\",\r\n    color: \"white\",\r\n    fontSize: \"24px\",\r\n  },\r\n  link: {\r\n    marginTop: \"15px\",\r\n    fontSize: \"14px\",\r\n    fontWeight: 500,\r\n  },\r\n};\r\n\r\nexport const LoginButton = withStyles(() => ({\r\n  root: {\r\n    borderRadius: 8,\r\n    textDecoration:\"none\",\r\n    color:\"white\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#01011a\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"#000000\",\r\n        fontSize:\"15px\"\r\n    },\r\n    minWidth:\"100px\"\r\n    },\r\n}))(Button);\r\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\";\r\nexport const SAVE_ID_TOKEN = \"SAVE_ID_TOKEN\";","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport \"firebase/compat/storage\";\r\nimport \"firebase/compat/firestore\";\r\n//import * as admin from 'firebase-admin';\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\nexport const app = firebase.initializeApp(firebaseConfig);\r\n\r\n// export const firestore = app.firestore();\r\nexport const auth = app.auth();","import React, { useEffect, useState } from \"react\";\r\nimport {app} from \"./base.js\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveIdToken } from \"../views/Login/loginActions.js\";\r\nexport const AuthContext = React.createContext();\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [pending, setPending] = useState(true);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    app.auth().onAuthStateChanged((user) => {\r\n      setCurrentUser(user);\r\n      setPending(false);\r\n      /*console.log(\"User \",user.getIdTokenResult().claims);\r\n      user.getIdTokenResult()\r\n      .then((idTokenResult) => {\r\n        console.log(\"User \",idTokenResult.claims);\r\n      })*/\r\n      if (user) {\r\n          user.getIdToken(true).then((idToken) => {\r\n            dispatch(saveIdToken(idToken));\r\n          });\r\n          localStorage.setItem(\"refreshToken\", user.refreshToken);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  if (pending) {\r\n    return (\r\n      <div style={{backgroundColor:\"#d4d4d4\",\r\n      minHeight:\"100vh\"}}>\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        style={{ position: \"absolute\", top: \"35%\" }}\r\n      >\r\n        <Grid>\r\n          <img\r\n            src=\"/App_Icon.png\"\r\n            style={{ width: 200 * 1.5, height: 80 * 1.5,  }}\r\n            alt=\"APP Logo\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <CircularProgress size={80} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n        </Grid>\r\n      </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        currentUser,\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import * as actionTypes from \"./loginActionTypes.js\";\r\n\r\nexport function loginRequest(data) {\r\n  return { type: actionTypes.LOGIN_REQUEST, data };\r\n}\r\n\r\nexport function loginSuccess() {\r\n  return { type: actionTypes.LOGIN_SUCCESS };\r\n}\r\n\r\nexport function loginError(error) {\r\n  return{ type:  actionTypes.LOGIN_ERROR, error: error};\r\n}\r\n\r\nexport function logoutRequest() {\r\n  return { type: actionTypes.LOGOUT_REQUEST };\r\n}\r\n\r\nexport function saveIdToken(token) {\r\n  return { type: actionTypes.SAVE_ID_TOKEN, token };\r\n}\r\n","import React, {useContext, useEffect, useState } from \"react\";\r\nimport {\r\n  IconButton,\r\n  InputAdornment,\r\n  TextField,\r\n  withStyles,\r\n  withWidth,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { LoginButton, styles, useStyles } from \"./loginStyles.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\nimport { loginRequest } from \"./loginActions.js\";\r\nimport { AuthContext } from \"../../auth/auth.js\";\r\nimport { Redirect } from \"react-router\";\r\n\r\nfunction Login(props) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const newClasses = useStyles();\r\n  const data = useSelector((state) => state.loginReducer); \r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const { classes } = props;\r\n  const handleClickShowPassword = () => setShowPassword(!showPassword);\r\n  const handleMouseDownPassword = () => setShowPassword(!showPassword);\r\n  const { error } = [];\r\n  const dispatch = useDispatch();\r\n  // console.log(\"state = \", data);\r\n  \r\n  const validate = (values) => {\r\n    const errors = {};\r\n    if (!values.emailVal) {\r\n      errors.email = \"Email field is required\";\r\n    } else if (\r\n      !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailVal)\r\n    ) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n    if (!values.passwordVal) {\r\n      errors.password = \"Password field is required\";\r\n    } else if (values.passwordVal.length < 6) {\r\n      errors.password = \"Password should contain atleast 6 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n\r\n\r\n  const formik = useFormik({\r\n    \r\n    initialValues: {\r\n      emailVal: \"\",\r\n      passwordVal: \"\",\r\n    },\r\n    validate,\r\n    onSubmit: (values) => {\r\n      formik.touched.emailVal = false;\r\n      formik.touched.passwordVal = false;\r\n      dispatch(loginRequest(values));\r\n    },\r\n  });\r\n  if (currentUser) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className={classes.LoginPage}>\r\n    <Grid container alignItems={\"center\"} justify={\"center\"}>\r\n      <Grid\r\n        item\r\n        className={props.width !== \"xs\" ? classes.boxMain : classes.boxMainXs}\r\n      > \r\n      <div className={classes.logocontainer}> \r\n        <img \r\n          src=\"/App_Icon.png\"\r\n          style={{ width: 220, height: 80,color:\"white\" }}\r\n          alt=\"Logo\"\r\n        />\r\n    </div>\r\n        <h2 className={classes.title}>Management System Login</h2>\r\n        <form onSubmit={formik.handleSubmit} autoComplete=\"none\">\r\n          <TextField\r\n            id=\"filled-basic\"\r\n            fullWidth\r\n            label=\"Enter Email....\"\r\n            variant=\"filled\"\r\n            type=\"email\"\r\n            name=\"emailVal\"\r\n            autoComplete=\"off\"\r\n            InputProps={{\r\n              // disableUnderline,\r\n              classes: {\r\n                underline: classes.underline,\r\n                root: classes.root,\r\n              },\r\n            }}\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.labelRoot,\r\n              },\r\n            }}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.emailVal}\r\n          />\r\n          {formik.touched.emailVal && formik.errors.email !== undefined ? (\r\n            <p className={newClasses.errorText}>{formik.errors.email}</p>\r\n          ) : null}\r\n          {formik.errors.email === undefined && !formik.touched.emailVal ? (\r\n            <p className={newClasses.errorText}>{error}</p>\r\n          ) : null}\r\n\r\n          <TextField\r\n            variant=\"filled\"\r\n            fullWidth\r\n            label=\"Enter Password....\"\r\n            name=\"passwordVal\"\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            value={formik.values.passwordVal}\r\n            InputLabelProps={{\r\n              classes: {\r\n                root: classes.labelRoot,\r\n              },\r\n            }}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {formik.values.password !== \"\" ? (\r\n                    <IconButton\r\n                      style={{ color: \"#1b1b2b\" }}\r\n                      id=\"iconButton\"\r\n                      aria-label=\"toggle password visibility\"\r\n                      onClick={handleClickShowPassword}\r\n                      onMouseDown={handleMouseDownPassword}\r\n                    >\r\n                      {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                    </IconButton>\r\n                  ) : (\r\n                    <p />\r\n                  )}\r\n                </InputAdornment>\r\n              ),\r\n              classes: {\r\n                underline: classes.underline,\r\n                root: classes.password,\r\n              },\r\n            }}\r\n          />\r\n          <Grid container direction=\"column\">\r\n          <Grid item>\r\n          {formik.touched.passwordVal && formik.errors.password !== undefined ? (\r\n            <span><p className={newClasses.errorText}>{formik.errors.password}</p></span>\r\n          ) : null}\r\n          </Grid>\r\n          <Grid item>\r\n            {data.error.length>0 && data.requireLogin==true ? (\r\n              <span><p className={newClasses.errorText}>{data.error}</p></span>\r\n            ) : null}\r\n          </Grid>\r\n          <Grid item>\r\n          <LoginButton\r\n            variant=\"contained\"\r\n            className={classes.loginButton}\r\n            \r\n            type=\"submit\"\r\n            \r\n          >\r\n            LOGIN\r\n          </LoginButton>\r\n          </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Grid>\r\n    </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withWidth()(withStyles(styles)(Login));\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nconst drawerWidthTab = 100;\r\nconst drawerWidthLap = 250;\r\nconst drawerWidthMobile = 56;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    fontFamily: \"Poppins\",\r\n    minWidth: \"400px\",\r\n  },\r\n  drawer: {\r\n    [theme.breakpoints.up(\"xs\")]: {\r\n      width: drawerWidthMobile,\r\n      flexShrink: 0,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidthTab,\r\n      flexShrink: 0,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidthLap,\r\n      flexShrink: 0,\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBar: {\r\n    position: \"fixed\",\r\n    backgroundColor: \"white\",\r\n    boxShadow: \"none\",\r\n    color: \"white\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: `calc(100% - ${drawerWidthTab}px)`,\r\n      marginLeft: drawerWidthTab,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: `calc(100% - ${drawerWidthLap}px)`,\r\n      marginLeft: drawerWidthLap,\r\n    },\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n  },\r\n  Divider: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  // drawer\r\n  HoverEffect: {\r\n    marginTop: 0,\r\n    \"& :hover\": {\r\n      color: \"white\",\r\n      fontWeight: \"800\",\r\n      fontSize:\"16px\",\r\n      \r\n    },\r\n    \"&.active\": {\r\n      color: \"#63231c\",\r\n      backgroundColor: \"#4B76D1\",\r\n      fontWeight: \"bold\",\r\n    },\r\n  },\r\n  DrawerButtons: {\r\n    color: \"#63231c\",\r\n    boxSizing: \"border-box\",\r\n    \"&.active\": {\r\n      color: \"#F3F7FB\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      fontSize: 28,\r\n      marginLeft: \"21px\",\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      fontSize: 25,\r\n    },\r\n  },\r\n  DrawerLables: {\r\n    fontFamily: \"Rubik, sans-serif\",\r\n    display: \"flex\",\r\n    [theme.breakpoints.up(\"sm\") && theme.breakpoints.down(\"sm\")]: {\r\n      display: \"none\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n    },\r\n  },\r\n  // necessary for content to be below app bar #980404 #290202\r\n  toolbar: theme.mixins.toolbar,\r\n  drawerPaper: {\r\n    backgroundColor: \"#070712\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      width: drawerWidthMobile,\r\n    },\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: drawerWidthTab,\r\n    },\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      width: drawerWidthLap,\r\n    },\r\n  },\r\n  logocontainer: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      height: \"150px\",\r\n      paddingLeft: \"5px\",\r\n      paddingTop: \"10px\",\r\n    },\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"none\",\r\n      paddingTop: \"5px\",\r\n    },\r\n    [theme.breakpoints.up(\"sm\") && theme.breakpoints.down(\"sm\")]: {\r\n      textAlign: \"center\",\r\n      paddingTop: \"10px\",\r\n      height: \"150px\",\r\n    },\r\n  },\r\n  content: {\r\n    backgroundColor:\"white\",\r\n    flexGrow: 1,\r\n    \r\n    \r\n  },\r\n  contentXs: {\r\n    backgroundColor: \"blue\",\r\n    flexGrow: 1,\r\n    \r\n    \r\n  },\r\n  listItem: {\r\n    height: \"41px\",\r\n    marginBottom: \"8px\",\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      paddingLeft: \"32px\",\r\n    },\r\n    backgroundColor: \"inherit\",\r\n    \r\n  },\r\n  avatar: {\r\n    height: \"48px\",\r\n    width: \"48px\",\r\n    color:\"white\"\r\n  },\r\n  notifiIcon: {\r\n    height: \"30px\",\r\n    width: \"30px\",\r\n    color:\"white\"\r\n  },\r\n  NavButton:{\r\n    \"& :hover\": {\r\n      color: \"white\",\r\n      fontWeight: \"800\",\r\n    \r\n      backgroundColor:\"#9c9dad\"\r\n    },\r\n  }\r\n}));\r\n\r\nexport default useStyles;\r\n","import React,{useContext} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { Hidden, withWidth, Badge } from \"@material-ui/core\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport useStyles from \"./sidePanelStyles.js\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport DirectionsBikeIcon from '@material-ui/icons/DirectionsBike';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport FeedbackIcon from '@material-ui/icons/Feedback';\r\nimport { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport LocalShippingIcon from '@material-ui/icons/LocalShipping';\r\nimport AssignmentIcon from '@material-ui/icons/Assignment';\r\n\r\nfunction MainDrawer(props) {\r\n  const classes = useStyles();\r\n  const { width } = props;\r\n  const userRole= useSelector((state)=>state.homeReducer.role);\r\n  const drawer = (\r\n    <div style={{ height: \"100%\", fontFamily: \"Poppins !important\" }}>\r\n      <div className={classes.logocontainer}> \r\n          <img \r\n            src=\"/App_Icon.png\"\r\n            style={{ width: 220, height: 80,color:\"white\" }}\r\n            alt=\"Logo\"\r\n          />\r\n      </div>\r\n\r\n      <List\r\n        style={{ fontFamily: \"Rubik, sans-serif\" }}\r\n        className={classes.HoverEffect}\r\n      >\r\n        {userRole==\"postmaster\"?(\r\n          <div>\r\n        <NavLink\r\n          to=\"/dashboard\"\r\n\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Rubik, sans-serif\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n           \r\n          >\r\n            <ListItemIcon>\r\n             \r\n               <DashboardIcon color='primary' style={{ color:\"#727287\"}}/>\r\n          \r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Rubik, sans-serif\"}}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Dashboard\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n        <NavLink\r\n          to=\"/live-delivery\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Rubik, sans-serif\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}      \r\n          >\r\n            <ListItemIcon>\r\n              <DirectionsBikeIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Rubik, sans-serif\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Live Delivery\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/statistics\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Mulish\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n            \r\n          >\r\n            <ListItemIcon style={{ position: \"relative\" }}>\r\n              <EqualizerIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Poppins !important\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Statistics\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/registration\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Mulish\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n            \r\n          >\r\n            <ListItemIcon style={{ position: \"relative\" }}>\r\n              <PersonAddIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Poppins !important\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Registration\r\n            </label>\r\n          </ListItem>\r\n        </NavLink>\r\n\r\n        \r\n\r\n\r\n        <NavLink\r\n          to=\"/complains\"\r\n          style={{\r\n            color: \"#f7f3f2\",\r\n            textDecoration: \"none\",\r\n            fontFamily: \"Mulish\",\r\n            fontWeight: \"bold\",\r\n            fontSize: \"16px\",\r\n            fontStyle: \"normal\",\r\n          }}\r\n          activeStyle={{\r\n            color: \"#030114\",\r\n            backgroundColor: \"#e6e3fa\",\r\n            fontWeight: \"bold\",\r\n            \r\n          }}\r\n          className={classes.NavButton}\r\n        >\r\n          <ListItem\r\n            button\r\n            className={classes.listItem}\r\n          \r\n          >\r\n            <ListItemIcon style={{ position: \"relative\" }}>\r\n              <FeedbackIcon color='primary' style={{ color:\"#727287\"}}/>\r\n            </ListItemIcon>\r\n            <label\r\n              style={{ fontFamily: \"Poppins !important\" }}\r\n              className={classes.DrawerLables}\r\n            >\r\n              Complains\r\n            </label>\r\n          </ListItem>\r\n        </NavLink></div>):(\r\n          userRole==\"supervisor\"?\r\n            (<div>\r\n              <NavLink\r\n                to=\"/dashboard\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                 \r\n                >\r\n                  <ListItemIcon>      \r\n                    <DashboardIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Dashboard\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/registration\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                  \r\n                >\r\n                  <ListItemIcon style={{ position: \"relative\" }}>\r\n                    <PersonAddIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Registration\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/mail-assignments\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                  \r\n                >\r\n                  <ListItemIcon style={{ position: \"relative\" }}>\r\n                    <AssignmentIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Mail Assignment\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n\r\n              <NavLink\r\n                to=\"/mail-transfer\"\r\n                style={{\r\n                  color: \"#f7f3f2\",\r\n                  textDecoration: \"none\",\r\n                  fontFamily: \"Mulish\",\r\n                  fontWeight: \"bold\",\r\n                  fontSize: \"16px\",\r\n                  fontStyle: \"normal\",\r\n                }}\r\n                activeStyle={{\r\n                  color: \"#030114\",\r\n                  backgroundColor: \"#e6e3fa\",\r\n                  fontWeight: \"bold\",\r\n                  \r\n                }}\r\n                className={classes.NavButton}\r\n              >\r\n                <ListItem\r\n                  button\r\n                  className={classes.listItem}\r\n                  \r\n                >\r\n                  <ListItemIcon style={{ position: \"relative\",color:\"white\"}}>\r\n                    <LocalShippingIcon color='primary' style={{ color:\"#727287\"}}/>\r\n                  </ListItemIcon>\r\n                  <label\r\n                    style={{ fontFamily: \"Poppins !important\" }}\r\n                    className={classes.DrawerLables}\r\n                  >\r\n                    Mail transfers\r\n                  </label>\r\n                </ListItem>\r\n              </NavLink>\r\n            </div>):null\r\n        )}\r\n\r\n      </List>\r\n\r\n      <div\r\n        style={{\r\n          position: \"absolute\",\r\n          bottom: \"10px\",\r\n          width: \"100%\",\r\n          fontFamily: \"Poppins !important\",\r\n        }}\r\n      >\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <nav className={classes.drawer} aria-label=\"mailbox folders\">\r\n        <Drawer\r\n          classes={{\r\n            paper: classes.drawerPaper,\r\n          }}\r\n          variant=\"permanent\"\r\n          open\r\n        >\r\n          {drawer}\r\n        </Drawer>\r\n        {/* </Hidden>*/}\r\n      </nav>\r\n      <main className={width !== \"xs\" ? classes.content : classes.contentXs}>\r\n        <div> {props.children}</div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nMainDrawer.propTypes = {\r\n  window: PropTypes.func,\r\n};\r\n\r\nexport default withWidth()(MainDrawer);\r\n","import React from \"react\";\r\nimport { AreaChart, linearGradient,XAxis, YAxis,CartesianGrid,Tooltip,Area,Label  } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction PerformanceChart(){\r\n  const data = useSelector((state) => state.dashboardReducer.revenueData); \r\n    return(\r\n        <AreaChart width={1100} height={450} data={data}\r\n            margin={{ top: 10, right: 30, left: 10, bottom: 10}}>\r\n            <defs>\r\n                <linearGradient id=\"colorNormalMail\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#8884d8\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#8884d8\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorRegisterMail\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#e1e81e\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#e1e81e\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorMoneyOrder\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#daa1e3\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#daa1e3\" stopOpacity={0}/>\r\n                </linearGradient>\r\n                <linearGradient id=\"colorPackage\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\r\n                <stop offset=\"5%\" stopColor=\"#2ec720\" stopOpacity={0.8}/>\r\n                <stop offset=\"95%\" stopColor=\"#2ec720\" stopOpacity={0}/>\r\n                </linearGradient>\r\n            </defs>\r\n            <XAxis dataKey=\"date\">\r\n                <Label value=\"Date\" offset={-5} position=\"insideBottom\" />\r\n            </XAxis>\r\n            <YAxis label={{ value: 'Revenue', angle: -90, position: 'insideLeft', textAnchor: 'middle' }} />\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <Tooltip />\r\n            <Area type=\"monotone\" dataKey=\"Normal Mail\" stroke=\"#8884d8\" fillOpacity={1} fill=\"url(#colorNormalMail)\" />\r\n            <Area type=\"monotone\" dataKey=\"Registered Mail\" stroke=\"#e1e81e\" fillOpacity={1} fill=\"url(#colorRegisterMail)\" />\r\n            <Area type=\"monotone\" dataKey=\"Money Order\" stroke=\"#daa1e3\" fillOpacity={1} fill=\"url(#colorMoneyOrder)\" />\r\n            <Area type=\"monotone\" dataKey=\"Package Delievery\" stroke=\"#2ec720\" fillOpacity={1} fill=\"url(#colorPackage)\" />\r\n            </AreaChart>\r\n    )\r\n}\r\nexport default PerformanceChart;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    grow: {\r\n      flexGrow: 1,\r\n     \r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        color:\"white\",\r\n        fontFamily:\"Rubik, sans-serif\",\r\n        fontWeight:\"bold\",\r\n        fontSize:\"20px\",\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    \r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    userName:{\r\n        color:\"white\",\r\n        fontSize:\"15px\",\r\n        paddingLeft:\"10px\",\r\n        fontFamily:\"Rubik, sans-serif\",\r\n        fontWeight:\"normal\"\r\n    }\r\n    \r\n  }));\r\n\r\nexport default useStyles;\r\n","import React from 'react';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport useStyles from './topBarStyles';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutRequest } from \"../../views/Login/loginActions.js\";\r\n\r\nexport default function TopBar(props) {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\r\n  const userFirstName= useSelector((state)=>state.homeReducer.firstName);\r\n  const userLastName=useSelector((state)=>state.homeReducer.lastName);\r\n  const isMenuOpen = Boolean(anchorEl);\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n  const dispatch = useDispatch();\r\n // console.log(\"page-\",page)\r\n  const handleProfileMenuOpen = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMenuClose = () => {\r\n    setAnchorEl(null);\r\n    handleMobileMenuClose();\r\n  };\r\n  const logout = (e) => {\r\n    e.preventDefault();\r\n    dispatch(logoutRequest());\r\n  };\r\n  const menuId = 'primary-search-account-menu';\r\n  const renderMenu = (\r\n    <Menu\r\n      anchorEl={anchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={menuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMenuOpen}\r\n      onClose={handleMenuClose}\r\n    >\r\n      <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\r\n      <MenuItem onClick={logout}>Logout</MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\" style={{ background: '#070712',paddingBottom:\"10px\" }}>\r\n        <Toolbar>\r\n          \r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            {props.page}\r\n          </Typography>\r\n          \r\n          <div className={classes.grow} />\r\n          <div>\r\n            <IconButton\r\n              edge=\"end\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls={menuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleProfileMenuOpen}\r\n              color=\"error\"\r\n            >\r\n              <AccountCircle  color=\"primary\" style={{ fontSize: 40 }}/>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.userName}>{userFirstName} {userLastName}</div>\r\n          \r\n        </Toolbar>\r\n      </AppBar>\r\n      \r\n      {renderMenu}\r\n    </div>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport const ExportButton = withStyles(() => ({\r\n    root: {\r\n        textDecoration:\"none\",\r\n        color:\"white\",\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"#01011a\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#000000\",\r\n            fontSize:\"14px\"\r\n        },\r\n        minWidth:\"100px\"\r\n        },\r\n  }))(Button);","import React from \"react\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ExportButton} from \"./reportStyles\";\r\n\r\n\r\nfunction RevenueReport(){\r\n    const dashboardReducer = useSelector((state) => state.dashboardReducer); \r\n    const header=[\r\n        {label:\"Date\", key:\"date\"},\r\n        {label:\"Normal Mail\", key:\"Normal Mail\"},\r\n        {label:\"Registered Mail\", key:\"Registered Mail\"},\r\n        {label:\"Money Order\", key:\"Money Order\"},\r\n        {label:\"Package Delievery\", key:\"Package Delievery\"},\r\n    ]\r\n    const csvReport={\r\n        filename:\"Revenue-Report.csv\",\r\n        headers:header,\r\n        data:dashboardReducer.revenueData\r\n    }\r\n    const gotData=dashboardReducer.dataRetreived;\r\n    return(   \r\n            <div>\r\n                <CSVLink {...csvReport} style={{textDecoration:\"none\"}}>\r\n                    <ExportButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        disableElevation\r\n                        type=\"submit\"  \r\n                        >\r\n                            EXPORT REVENUE REPORT\r\n                    </ExportButton>\r\n                </CSVLink>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default RevenueReport;","export const PERFORMANCE_DATA_REQUEST = \"PERFORMANCE_DATA_REQUEST\";\r\nexport const PERFORMANCE_DATA_SUCCESS = \"PERFORMANCE_DATA_SUCCESS\";\r\nexport const PERFORMANCE_DATA_ERROR = \"PERFORMANCE_DATA_ERROR\";","import * as actionTypes from \"./dashboardActionTypes\";\r\n\r\nexport function performanceDataRequest(startDate,endDate,postOffice) {\r\n  return { type: actionTypes.PERFORMANCE_DATA_REQUEST,startDate,endDate,postOffice};\r\n}\r\n\r\nexport function performanceDataSuccess(data) {\r\n  return { type: actionTypes.PERFORMANCE_DATA_SUCCESS,data};\r\n}\r\n\r\nexport function performanceDataError() {\r\n  return { type: actionTypes.PERFORMANCE_DATA_ERROR };\r\n}\r\n","import React,{useState} from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport DateRangePicker from 'rsuite/DateRangePicker';\r\nimport 'rsuite/styles/index.less'; // less\r\nimport 'rsuite/dist/rsuite.min.css'; // or css\r\nimport 'rsuite/dist/rsuite-rtl.min.css';\r\n// import './dateRangePickerStyles.css'\r\n\r\nexport function DateRangePick(props){\r\n    const {afterToday} =DateRangePicker;\r\n    const dateRange = props.dateRange;\r\n    const setDateRange= props.setDateRange;\r\n    console.log(\"Date range - \",dateRange)\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item style={{marginTop:\"25px\"}}>\r\n                   <DateRangePicker disabledDate={afterToday()} block value={dateRange} onChange={setDateRange} placeholder=\"Select Date Range\" style={{ width: 230 }}/>\r\n                </Grid>\r\n               \r\n            </Grid>\r\n        </div>\r\n    )\r\n}","import React, { useEffect } from \"react\";\r\nimport Nav from \"../../../components/SidePanel/sidePanel\";\r\nimport PerformanceChart from \"../../../components/Charts/PerformanceChart/performanceChart\";\r\nimport TopBar from \"../../../components/TopBar/topBar\";\r\nimport RevenueReport from \"../../../components/Reports/revenueReport\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { performanceDataRequest} from \"./dashboardActions\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { DateRangePick} from \"../../../components/DatePicker/dateRangePicker\";\r\n\r\nexport default function Dashboard(){\r\n    const today=new Date();\r\n    const day20 = new Date(today - 1000 * 60 * 60 * 24 * 20);\r\n    const [dateRange, setDateRange] = React.useState([day20, today]);\r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(performanceDataRequest(dateRange[0],dateRange[1],postOffice))\r\n    },[dispatch,dateRange,postOffice]);\r\n    \r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Dashboard\"/>\r\n                <div>\r\n                    <Grid container direction=\"row\" justifyContent=\"center\" spacing={5}>\r\n                        <Grid item>\r\n                            <DateRangePick\r\n                                dateRange={dateRange}\r\n                                setDateRange={setDateRange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={{marginTop:\"5px\"}}>\r\n                            <RevenueReport/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div style={{marginTop:\"20px\", paddingBottom:\"15px\"}}>\r\n                    <PerformanceChart/>\r\n                </div>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","export const AUTHORIZATION_REQUEST = \"AUTHORIZATION_REQUEST\";\r\nexport const AUTHORIZATION_SUCCESS = \"AUTHORIZATION_SUCCESS\";\r\nexport const AUTHORIZATION_ERROR = \"AUTHORIZATION_ERROR\";\r\n","import * as actionTypes from \"./homeActionTypes\";\r\n\r\nexport function authorizationRequest(data) {\r\n  return { type: actionTypes.AUTHORIZATION_REQUEST,data};\r\n}\r\n\r\nexport function authorizationSuccess(data,currentUserID,currentUserEmail) {\r\n  return { type: actionTypes.AUTHORIZATION_SUCCESS,data,currentUserID,currentUserEmail};\r\n}\r\n\r\nexport function authorizationError() {\r\n  return { type: actionTypes.AUTHORIZATION_ERROR };\r\n}\r\n\r\n\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    logocontainer:{\r\n        marginTop:\"100px\"\r\n    },\r\n    errorCode:{\r\n        marginTop:\"60px\",\r\n        fontSize:\"30px\",\r\n        fontWeight:900,\r\n        color:\"red\"\r\n    },\r\n    errorMessage:{\r\n        fontSize:\"25px\"\r\n    }\r\n      \r\n}));","import { Container, Grid } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { useStyles } from \"./errorStyles\";\r\n\r\n\r\n\r\nexport default function AuthError(data){\r\n    \r\n    const classes=useStyles()\r\n    \r\n    return(\r\n        <Container>\r\n            <Grid container direction=\"column\" justifyContent=\"center\">\r\n                <Grid item className={classes.logocontainer}>\r\n                    <div > \r\n                        <img \r\n                        src=\"/App_Icon.png\"\r\n                        style={{ width: 220, height: 80,color:\"white\" }}\r\n                        alt=\"Logo\"\r\n                        />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item>\r\n                    <div className={classes.errorCode}>Error: 401</div>\r\n                </Grid>\r\n                    \r\n                <Grid item>\r\n                    <div className={classes.errorMessage}>UnAuthorized Access.....</div>\r\n                </Grid>\r\n\r\n                \r\n            </Grid>\r\n        </Container>\r\n    )\r\n}","import { GoogleMap, InfoWindow, Marker, withGoogleMap, withScriptjs } from \"react-google-maps\";\r\nimport * as React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nconst { MarkerWithLabel } = require(\"react-google-maps/lib/components/addons/MarkerWithLabel\");\r\n\r\nconst GoogleMapLive = withScriptjs(\r\n  withGoogleMap(\r\n    ({\r\n      liveLocations,\r\n      defaultZoom,\r\n      defaultCenter,\r\n      postOfficeLocation\r\n      \r\n    }) => {\r\n      const lengthOfLiveLocationList = liveLocations.length;\r\n      const [isInfoWindowShowing, setInfoWindowShowing] = React.useState(\r\n        new Array(lengthOfLiveLocationList).fill(false)\r\n      );\r\n      \r\n      React.useEffect(() => {\r\n        setInfoWindowShowing(new Array(lengthOfLiveLocationList).fill(false));\r\n      }, []);\r\n\r\n      const postmanIcon={\r\n          url: `http://maps.google.com/mapfiles/ms/micons/police.png`,\r\n          scaledSize: new window.google.maps.Size(28, 28),\r\n          labelOrigin: new window.google.maps.Point(19, 12)\r\n        };\r\n      const postOfficeIcon={\r\n          url: `http://maps.google.com/mapfiles/ms/micons/rangerstation.png`,\r\n          scaledSize: new window.google.maps.Size(42, 42),\r\n          labelOrigin: new window.google.maps.Point(19, 12)\r\n      }\r\n      \r\n      return (\r\n        <div >\r\n          <GoogleMap options={{ fullscreenControl: false }} defaultCenter={defaultCenter} defaultZoom={defaultZoom}>\r\n            <Marker\r\n              position={{ lat: postOfficeLocation._lat, lng:  postOfficeLocation._long}}\r\n              icon={postOfficeIcon}\r\n            />\r\n\r\n          {liveLocations.map((postman,index)=>{\r\n              return(\r\n    \r\n                <Marker\r\n                  key={index}\r\n                  position={{ lat: postman.location.lat, lng:  postman.location.lng}}\r\n                  icon={postmanIcon}\r\n                  onClick={() => {\r\n                    isInfoWindowShowing[index] = !isInfoWindowShowing[index];\r\n                    setInfoWindowShowing(JSON.parse(JSON.stringify(isInfoWindowShowing)));\r\n                  }}\r\n                >\r\n                  {isInfoWindowShowing[index] && (\r\n                    <InfoWindow\r\n                    options={{\r\n                          backgroundColor:\"red\",\r\n                          boxStyle: {\r\n                              boxShadow: `3px 3px 10px rgba(0,0,0,0.6)`\r\n                          },\r\n                          \r\n                      }}\r\n                      onCloseClick={() => {\r\n                        isInfoWindowShowing[index] = false;\r\n                        setInfoWindowShowing(JSON.parse(JSON.stringify(isInfoWindowShowing)));\r\n                      }}\r\n                    >\r\n                      <div >\r\n                        <p style={{fontWeight:\"bold\"}}>Name: {postman.firstName+\" \"+postman.lastName}</p>\r\n                        <p >Email: {postman.email}</p>\r\n                        <p >Contact Number: {postman.contactNumber}</p>\r\n                        <p >Last seen: {dateFormat(new Date(postman.timeStamp), \"dd/mm/yyyy hh:MM TT\")}</p>\r\n                        \r\n                      </div>\r\n                    </InfoWindow>\r\n                  )}\r\n                </Marker>  \r\n                  )\r\n          })}\r\n         \r\n          </GoogleMap>\r\n        </div>\r\n      );\r\n    }\r\n  )\r\n);\r\n\r\nexport default GoogleMapLive;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    Map:{\r\n        \r\n       \r\n    }\r\n}));","export const GET_LOCATIONS_REQUEST = \"GET_LOCATIONS_REQUEST\";\r\nexport const GET_LOCATIONS_SUCCESS = \"GET_LOCATIONS_SUCCESS\";\r\nexport const GET_LOCATIONS_ERROR = \"GET_LOCATIONS_ERROR\";","import * as actionTypes from \"./liveDeliveryActionTypes.js\";\r\n\r\nexport function getLocationsRequest(postOffice) {\r\n  return { type: actionTypes.GET_LOCATIONS_REQUEST, postOffice };\r\n}\r\n\r\nexport function getLocationsSuccess(locationData,postOfficeData) {\r\n    //console.log(\"loc success here\",data)\r\n    return { type: actionTypes.GET_LOCATIONS_SUCCESS, locationData:locationData,postOfficeData:postOfficeData};\r\n  }\r\n\r\nexport function getLocationsError(error) {\r\n  return { type: actionTypes.GET_LOCATIONS_ERROR, error };\r\n}","import React, { useEffect } from \"react\";\r\nimport Nav from \"./../../components/SidePanel/sidePanel\";\r\nimport {\r\n    withScriptjs,\r\n    withGoogleMap,\r\n    GoogleMap,\r\n    Marker,\r\n  } from \"react-google-maps\";\r\nimport GoogleMapLive from \"./../../components/GoogleMap/googleMap\";\r\nimport TopBar from \"./../../components/TopBar/topBar\";\r\nimport {useStyles} from \"./liveDeliveryStyles\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLocationsRequest } from \"./liveDeliveryActions\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\nexport default function LiveDelivery(){\r\n    const classes=useStyles();\r\n    const liveLocations = useSelector((state) => state.LiveDeliveryReducer); \r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n      dispatch(getLocationsRequest(postOffice))\r\n    },[dispatch])\r\n    const defaultMapOptions = {fullscreenControl: true};\r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Live Delivery\"/>\r\n                {(liveLocations.locationsRetrieved)?\r\n                <div className={classes.Map}>\r\n                    <GoogleMapLive\r\n                        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=AIzaSyC2lWdYmx2Q8xZEENBM7FYfa5XJCVSIRIg&v=3.exp&libraries=geometry,drawing,places`}\r\n                        loadingElement={<div style={{ height: \"100%\" }} />}\r\n                        containerElement={<div style={{ height: \"90vh\", width: \"100%\",backgroundColor:\"#fcdcdc\" }} />}\r\n                        mapElement={<div style={{ height: \"100%\" }} />}\r\n                        liveLocations={liveLocations.locationData}\r\n                        postOfficeLocation={liveLocations.postOffice}\r\n                        defaultOptions={defaultMapOptions}\r\n                        showLabels={[]}\r\n                        defaultZoom={14.0} \r\n                        defaultCenter={{lat: liveLocations.postOffice._lat, lng:liveLocations.postOffice._long}}\r\n                    />\r\n                </div>\r\n                :((liveLocations.isLoading)?\r\n                (<Grid\r\n                    container\r\n                    alignItems=\"center\"\r\n                    style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                >\r\n                    <Grid item>\r\n                    <CircularProgress size={60} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n                    </Grid>\r\n                </Grid>):(\r\n                <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>))}\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    InputLine:{\r\n        marginBottom:\"6px\",\r\n        marginLeft:\"80px\",\r\n    },\r\n    InputLabel:{\r\n        textAlign:\"left\",\r\n        minWidth:\"238px\",\r\n        fontSize:\"18px\",\r\n        marginTop:\"14px\",\r\n        \r\n    },\r\n    Input:{\r\n        marginLeft:\"70px\",\r\n        minWidth:\"350px\",\r\n        \r\n    },\r\n      Form:{\r\n        backgroundColor: \"#dddce6\",\r\n        marginTop:\"30px\",\r\n        paddingTop:\"50px\",\r\n        marginLeft:\"30px\",\r\n        marginRight:\"30px\",\r\n        marginBottom:\"50px\",\r\n        paddingBottom:\"60px\",\r\n        borderRadius:10\r\n      },\r\n      password: {\r\n        marginBottom: \"16px\",\r\n        height: \"48px\",\r\n        backgroundColor: \"#FDFDFD !important\",\r\n        fontFamily: \"Poppins\",\r\n        borderStyle: \"solid\",\r\n        borderWidth: 1,\r\n        borderColor: \"#D9EAFD\",\r\n        borderRadius: 8,\r\n      },\r\n      ErrorText:{\r\n          marginTop:\"14px\",\r\n          color: \"#6e0603\",\r\n      },\r\n      errorText: {\r\n        fontSize: \"14px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"4px\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      successText: {\r\n        fontSize: \"16px\",\r\n        color: \"green\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      loadingText: {\r\n        fontSize: \"16px\",\r\n        color: \"orange\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      errorTextMsg: {\r\n        fontSize: \"16px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"35%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n\r\n}))\r\n\r\nexport const LoginButton = withStyles(() => ({\r\n  root: {\r\n    textDecoration:\"none\",\r\n    color:\"white\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#01011a\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"#000000\",\r\n        fontSize:\"14px\"\r\n    },\r\n    minWidth:\"100px\"\r\n    },\r\n  }))(Button);\r\n\r\n  export const styles = makeStyles(() => ({\r\n    errorText: {\r\n      fontSize: \"12px\",\r\n      color: \"#F7685B\",\r\n      \r\n      float: \"left\",\r\n      marginLeft: \"13px\",\r\n      fontFamily: \"Poppins\",\r\n      fontStyle: \"normal\",\r\n      fontWeight: 600,\r\n    },\r\n  }));","export const ADD_EMPLOYEE_REQUEST=\"ADD_EMPLOYEE_REQUEST\";\r\nexport const ADD_EMPLOYEE_SUCCESS=\"ADD_EMPLOYEE_SUCCESS\";\r\nexport const ADD_EMPLOYEE_ERROR=\"ADD_EMPLOYEE_ERROR\"","import * as actionTypes from \"./registrationActionTypes\"\r\n\r\nexport function addEmployee(data,idToken){\r\n    return {type:actionTypes.ADD_EMPLOYEE_REQUEST,data,idToken}\r\n}\r\n\r\nexport function addEmployeeSuccess(){\r\n    return {type:actionTypes.ADD_EMPLOYEE_SUCCESS}\r\n}\r\n\r\nexport function addEmployeeError(data){\r\n    return {type:actionTypes.ADD_EMPLOYEE_ERROR,data}\r\n}","import React, {useContext, useEffect, useState } from \"react\";\r\nimport {\r\n    IconButton,\r\n    InputAdornment,\r\n    TextField,\r\n    withStyles,\r\n    withWidth,\r\n    Grid,\r\n  } from \"@material-ui/core\";\r\n  import Visibility from \"@material-ui/icons/Visibility\";\r\n  import VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n  import { useDispatch, useSelector } from \"react-redux\";\r\n  import { useFormik } from \"formik\";\r\n  import {useStyles,styles,LoginButton} from \"./registrationStyles\";\r\n  import {addEmployee} from \"../../views/Registration/registrationAction\";\r\n  import { MenuItem } from '@material-ui/core';\r\n\r\n\r\nfunction RegistrationForm(data){\r\n    const classes=useStyles()\r\n    const newClasses=styles()\r\n    const { error } = [];\r\n    const dispatch = useDispatch();\r\n    const userID = useSelector((state) => state.homeReducer.currentUserID);\r\n    const registrationReducer = useSelector((state) => state.registrationReducer);     \r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const idToken=useSelector((state) => state.loginReducer.idToken);\r\n    const [showPassword1, setShowPassword1] = useState(false);\r\n    const handleClickShowPassword1 = () => setShowPassword1(!showPassword1);\r\n    const handleMouseDownPassword1 = () => setShowPassword1(!showPassword1);\r\n    const [showPassword2, setShowPassword2] = useState(false);\r\n    const handleClickShowPassword2 = () => setShowPassword2(!showPassword2);\r\n    const handleMouseDownPassword2 = () => setShowPassword2(!showPassword2);\r\n    const validate = (values) => {\r\n        const errors = {};\r\n        if (!values.email) {\r\n          errors.email = \"Email field is required\";\r\n        } \r\n        else if (\r\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)\r\n          ) {\r\n            errors.email = \"Invalid email address\";\r\n          }\r\n        if(!values.firstName){\r\n            errors.firstName = \"First name is required\";\r\n        }if(!values.lastName){\r\n            errors.lastName = \"Last name is required\";\r\n        }\r\n        if(!values.contactNumber){\r\n            errors.contactNumber = \"Contact Number is required\";\r\n        }\r\n        if(!values.nic){\r\n            errors.nic = \"NIC is required\";\r\n        }\r\n        if(!values.password2){\r\n            errors.password2 = \"Password confirmation is required\";\r\n        }\r\n        if(values.password2!=values.password1){\r\n            errors.password2 = \"Password confirmation is incorrect\";\r\n        }\r\n        if(!values.role){\r\n            errors.role = \"Employee role is required\";\r\n        }\r\n        \r\n        if (!values.password1) {\r\n          errors.password1 = \"Password field is required\";\r\n        } else if (values.password1.length < 6) {\r\n          errors.password1 = \"Password should contain atleast 6 characters\";\r\n        }\r\n        return errors;\r\n      };\r\n    \r\n    \r\n    \r\n      const formik = useFormik({\r\n        initialValues: {\r\n          email: \"\",\r\n          password1: \"111111\",\r\n          firstName:\"\",\r\n          lastName:\"\",\r\n          contactNumber:\"\",\r\n          nic:\"\",\r\n          password2:\"111111\",\r\n          postOffice:postOffice,\r\n          role:\"\",\r\n          userID:userID\r\n        },\r\n        validate,\r\n        onSubmit: (values) => {\r\n          formik.touched.email = false;\r\n          formik.touched.password1 = false;\r\n          formik.touched.firstName=false;\r\n          formik.touched.lastName=false;\r\n          formik.touched.contactNumber=false;\r\n          formik.touched.nic=false;\r\n          formik.touched.password2=false;\r\n          formik.touched.role=false;\r\n          dispatch(addEmployee(values,idToken));\r\n        },\r\n      });\r\n\r\n    return(\r\n        <div className={classes.Form}>\r\n            <Grid container alignItems={\"center\"} >\r\n                <Grid item > \r\n                    <form onSubmit={formik.handleSubmit} autoComplete=\"off\">\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Firstname</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"firstName\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.firstName}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.firstName && formik.errors.firstName !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.firstName}</p>\r\n                                ) : null}\r\n                                {formik.errors.firstName === undefined && !formik.touched.firstName ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Lastname</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"lastName\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.lastName}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.lastName && formik.errors.lastName !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.lastName}</p>\r\n                                ) : null}\r\n                                {formik.errors.lastName === undefined && !formik.touched.lastName ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Type</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"                    \r\n                                    name=\"role\"                                 \r\n                                    onChange={formik.handleChange}\r\n                                    select \r\n                                    label=\"Employee Type\" \r\n                                >\r\n                                    {data.employeeTypes.map((option) => (\r\n                                        <MenuItem key={option.value} value={option.value}>\r\n                                            {option.label}\r\n                                        </MenuItem>\r\n                                    ))}\r\n                                </TextField>\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.role && formik.errors.role !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.role}</p>\r\n                                ) : null}\r\n                                {formik.errors.role === undefined && !formik.touched.role ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Contact Number</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"contactNumber\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.contactNumber}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.contactNumber && formik.errors.contactNumber !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.contactNumber}</p>\r\n                                ) : null}\r\n                                {formik.errors.contactNumber=== undefined && !formik.touched.contactNumber ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        \r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee NIC Number</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"text\"\r\n                                    name=\"nic\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.nic}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.nic && formik.errors.nic !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.nic}</p>\r\n                                ) : null}\r\n                                {formik.errors.nic === undefined && !formik.touched.nic ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                        <Grid container direction =\"row\" spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Employee Email</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input} >\r\n                                <TextField\r\n                                    fullWidth \r\n                                    id=\"outlined-basic\"\r\n                                    variant=\"outlined\"\r\n                                    type=\"email\"\r\n                                    name=\"email\"                                 \r\n                                    onChange={formik.handleChange} \r\n                                    value={formik.values.email}\r\n                                    onBlur={formik.handleBlur}\r\n           \r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item className={classes.ErrorText}>\r\n                                <span>\r\n                                {formik.touched.email && formik.errors.email !== undefined ? (\r\n                                    <p className={classes.errorText}>{formik.errors.email}</p>\r\n                                ) : null}\r\n                                {formik.errors.email === undefined && !formik.touched.email ? (\r\n                                    <p className={classes.errorText}>{error}</p>\r\n                                ) : null}\r\n                                </span>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                            \r\n                        <Grid container spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div>Password</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input}>\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        id=\"outlined-basic\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"password1\"\r\n                                        type={showPassword1 ? \"text\" : \"password\"}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.password1}\r\n                                        InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                            {formik.values.password1 !== \"\" ? (\r\n                                                <IconButton\r\n                                                style={{ color: \"#090726\" }}\r\n                                                id=\"iconButton\"\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword1}\r\n                                                onMouseDown={handleMouseDownPassword1}\r\n                                                >\r\n                                                {showPassword1 ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            ) : (\r\n                                                <p />\r\n                                            )}\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                        \r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item className={classes.ErrorText}>\r\n                                    <span>\r\n                                        {formik.touched.password1 && formik.errors.password1 !== undefined ? (\r\n                                            <span><p className={classes.errorText}>{formik.errors.password1}</p></span>\r\n                                        ) : null}\r\n                                    </span>\r\n                                </Grid>\r\n                            </Grid>  \r\n\r\n\r\n\r\n                            <Grid container spacing={5} className={classes.InputLine}>\r\n                            <Grid item className={classes.InputLabel}>\r\n                                    <div> Confirm Password</div>\r\n                            </Grid>\r\n                            <Grid item className={classes.Input}>\r\n                                    <TextField\r\n                                        fullWidth \r\n                                        id=\"outlined-basic\"\r\n                                        variant=\"outlined\"\r\n                                        name=\"password2\"\r\n                                        type={showPassword2 ? \"text\" : \"password\"}\r\n                                        onChange={formik.handleChange}\r\n                                        onBlur={formik.handleBlur}\r\n                                        value={formik.values.password2}\r\n                                        InputProps={{\r\n                                        endAdornment: (\r\n                                            <InputAdornment position=\"end\">\r\n                                            {formik.values.password2 !== \"\" ? (\r\n                                                <IconButton\r\n                                                style={{ color: \"#090726\" }}\r\n                                                id=\"iconButton\"\r\n                                                aria-label=\"toggle password visibility\"\r\n                                                onClick={handleClickShowPassword2}\r\n                                                onMouseDown={handleMouseDownPassword2}\r\n                                                >\r\n                                                {showPassword2 ? <Visibility /> : <VisibilityOff />}\r\n                                                </IconButton>\r\n                                            ) : (\r\n                                                <p />\r\n                                            )}\r\n                                            </InputAdornment>\r\n                                        ),\r\n                                        \r\n                                        }}\r\n                                    />\r\n                                </Grid>\r\n                                <Grid item className={classes.ErrorText}>\r\n                                    <span>\r\n                                        {formik.touched.password2 && formik.errors.password2 !== undefined ? (\r\n                                            <span><p className={classes.errorText}>{formik.errors.password2}</p></span>\r\n                                        ) : null}\r\n                                    </span>\r\n                                </Grid>\r\n                            </Grid> \r\n\r\n\r\n                            <Grid container direction=\"column\" style={{marginBelow:\"50px\"}}>\r\n                                <Grid item>\r\n                                     <span>\r\n                                    {(registrationReducer.isRequested==false && registrationReducer.requestSuccessful==false && registrationReducer.requestUnSuccessful==true) ? (\r\n                                        <p className={classes.errorTextMsg}>Registration Unsuccessfull Try Again</p>\r\n                                    ) : null}\r\n                                    {(registrationReducer.isRequested==false && registrationReducer.requestSuccessful==true && registrationReducer.requestUnSuccessful==false) ? (\r\n                                        <p className={classes.successText}>Registration Successfull</p>\r\n                                    ) : null}\r\n                                    {(registrationReducer.isRequested==true && registrationReducer.requestSuccessful==false && registrationReducer.requestUnSuccessful==false) ? (\r\n                                        <p className={classes.loadingText}>Registering..........</p>\r\n                                    ) : null}\r\n                                    </span>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <LoginButton\r\n                                        variant=\"contained\"\r\n                                        color=\"#63231c\"\r\n                                        className={classes.loginButton}\r\n                                        disableElevation\r\n                                        type=\"submit\"\r\n                                        \r\n                                    >\r\n                                        REGISTER EMPLOYEE\r\n                                    </LoginButton>\r\n                                </Grid>\r\n                            </Grid>\r\n                    </form>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;","import React from \"react\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport RegistrationForm from \"../../components/Registration/registration\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Registration(){\r\n    const userType = useSelector((state) => state.homeReducer.role); \r\n    const employeeTypesPostmaster = [\r\n            {\r\n                label: \"Postmaster\",\r\n                value: \"postmaster\"\r\n            },\r\n            {\r\n                label: \"Supervisor\",\r\n                value: \"supervisor\"\r\n            },\r\n            {\r\n                label: \"Receptionist\",\r\n                value: \"receptionist\"\r\n            },\r\n            {\r\n                label: \"Postman\",\r\n                value: \"postman\"\r\n            },\r\n            {\r\n                label: \"Delivery Log Keeper\",\r\n                value: \"deliveryLogKeeper\"\r\n            }\r\n            ]\r\n\r\n    const employeeTypesSupervisor = [\r\n                {\r\n                    label: \"Receptionist\",\r\n                    value: \"receptionist\"\r\n                },\r\n                {\r\n                    label: \"Postman\",\r\n                    value: \"postman\"\r\n                },\r\n                {\r\n                    label: \"Delivery Log Keeper\",\r\n                    value: \"deliveryLogKeeper\"\r\n                }\r\n                ]\r\n    \r\n   \r\n    return(\r\n        <div style={{backgroundColor: \"#fab8b6\"}}>\r\n            <Nav>\r\n                <TopBar page=\"Registration\"/>\r\n                {userType==\"postmaster\"?\r\n                    <RegistrationForm employeeTypes={employeeTypesPostmaster}/>\r\n                    :\r\n                    <RegistrationForm employeeTypes={employeeTypesSupervisor}/>\r\n                }\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","import React from \"react\"\r\nimport { PieChart,Pie ,Cell } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction RevenueChart(){\r\n \r\n  const data = useSelector((state) => state.statisticsReducer.revenuePieData); \r\n      let renderLabel = function(entry) {\r\n        return entry.name;\r\n    } \r\n      const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n    return(\r\n        <PieChart width={500} height={350}>\r\n            <Pie data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={130} fill=\"#8884d8\" label={renderLabel} >\r\n            {data?.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n            </Pie>\r\n\r\n            \r\n        </PieChart>\r\n    )\r\n}\r\n\r\nexport default RevenueChart;\r\n\r\n","import {React} from \"react\";\r\nimport { LineChart, CartesianGrid,XAxis,YAxis,Tooltip,Legend,Line  } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction AcceptedServiceTypesLineChart(){\r\n  const data = useSelector((state) => state.statisticsReducer.countData);\r\n    return (\r\n        <LineChart width={1050} height={400} data={data}\r\n            margin={{ top: 5, right: 5, left: 10, bottom: 5 }}>\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            <XAxis dataKey=\"Date\" />\r\n            <YAxis label={{ value: 'Number of Items', angle: -90, position: 'insideLeft', textAnchor: 'middle' }} />\r\n            <Tooltip />\r\n            <Legend  />\r\n            <Line type=\"monotone\" dataKey=\"Registered Mail\" stroke=\"#8884d8\" />\r\n            <Line type=\"monotone\" dataKey=\"Normal Mail\" stroke=\"#82ca9d\" />\r\n            <Line type=\"monotone\" dataKey=\"Money Order\" stroke=\"#daa1e3\" />\r\n            <Line type=\"monotone\" dataKey=\"Package Delievery\" stroke=\"#dbd939\" />\r\n        </LineChart>\r\n    )\r\n}\r\n\r\nexport default AcceptedServiceTypesLineChart;","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    PieBox:{\r\n        textAlign: \"center\",\r\n      \r\n    },\r\n    PieGrid:{\r\n        marginTop:\"30px\"\r\n    },\r\n    PieTitle:{\r\n        fontFamily: \"Rubik, sans-serif\",\r\n        fontSize: \"16px\",\r\n    }\r\n}));","import React,{useEffect} from \"react\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\r\nimport Grid from '@material-ui/core/Grid';\r\n//import {performanceDataRequest} from \"../../views/Home/Dashboard/dashboardActions\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\n\r\nfunction DateFramePicker(props){\r\n    const { startDate, setStartDate, startLabel, endDate, setEndDate, endLabel } = props;\r\n    console.log(\"prps \",props)\r\n    //const postOffice = useSelector((state) => state.homeReducer.postOffice);\r\n    const [startDateError, setStartDateError] = React.useState(\"\");\r\n    const [endDateError, setEndDateError] = React.useState(\"\");\r\n    console.log(\"out - \",startDate)\r\n   /* console.log(\"fram - \",startDate,endDate);\r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(performanceDataRequest(startDate,endDate,postOffice))\r\n    },[dispatch,startDate,endDate,postOffice]);\r\n    const handleStartDateChange = (date) => {\r\n        console.log(\"handle start\",date,startDate,endDate)\r\n        if(date<endDate){\r\n            setStartDate(date);\r\n        }\r\n        else{\r\n            setStartDateError(\"Invalid Date\")\r\n        }\r\n      };\r\n\r\n    const handleEndDateChange = (date) => {\r\n        console.log(\"handle end\",date,startDate,endDate)\r\n        setEndDate(date);\r\n      };*/\r\n    return (\r\n        <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n        <Grid container direction=\"row\" justifyContent=\"space-evenly\"  spacing={3}>\r\n            <Grid item>\r\n            <Grid container direction=\"column\">\r\n                <Grid item>\r\n                <KeyboardDatePicker\r\n                    disableFuture\r\n                    disableToolbar\r\n                    inputVariant=\"filled\"\r\n                    variant=\"inline\"\r\n                    format=\"dd/MM/yyyy\"\r\n                    margin=\"normal\"\r\n                    id=\"date1-picker-inline\"\r\n                    label={startLabel}\r\n                    value={startDate}\r\n                    error={false}\r\n                    helperText={null}\r\n                    onError={setStartDateError}\r\n                    onChange = {(event, newValue, previousValue, name) => {\r\n                        if(event==\"Invalid Date\"){ \r\n                            setStartDateError(\"Invalid Date\")  \r\n                        }else{\r\n                        if(event!==null){\r\n                            setStartDateError(\"\")\r\n                            setStartDate(event)\r\n                        }\r\n                        else{\r\n                            setStartDateError(\"Invalid Date\");\r\n                        }\r\n                        } \r\n                        }}\r\n                    KeyboardButtonProps={{\r\n                        \"aria-label\": \"change date\"\r\n                    }}\r\n                    InputProps={{\r\n                        disableUnderline: true\r\n                    }}\r\n                    />\r\n                </Grid>\r\n                <Grid item >\r\n                    <span style={{ color:\"red\",textAlign:\"left\"}}>{startDateError.length>0?\"Invalid Start date\":null}</span>\r\n                </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        \r\n        <Grid item>\r\n        <Grid container direction=\"column\">\r\n            <Grid item>\r\n            <KeyboardDatePicker\r\n                disableFuture\r\n                disableToolbar\r\n                inputVariant=\"filled\"\r\n                variant=\"inline\"\r\n                format=\"dd/MM/yyyy\"\r\n                margin=\"normal\"\r\n                id=\"date2-picker-inline\"\r\n                label={endLabel}\r\n                value={endDate}\r\n                error={false}\r\n                helperText={null}\r\n                onError={setEndDateError}\r\n                onChange = {(event, newValue, previousValue, name) => {\r\n                    if(event==\"Invalid Date\"){ \r\n                        setEndDateError(\"Invalid Date\")  \r\n                    }else{\r\n                    if(event!==null){\r\n                        setEndDateError(\"\")\r\n                        setEndDate(event)\r\n                    }\r\n                    else{\r\n                        setEndDateError(\"Invalid Date\");\r\n                    }\r\n                    } \r\n                    }}\r\n                KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\"\r\n                }}\r\n                InputProps={{\r\n                    disableUnderline: true\r\n                }}\r\n                />\r\n            </Grid>\r\n            <Grid item >\r\n                <span style={{ color:\"red\",textAlign:\"left\"}}>{endDateError.length>0?\"Invalid End date\":null}</span>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n            </Grid>\r\n        </MuiPickersUtilsProvider>\r\n    );\r\n}\r\nexport default DateFramePicker;","export const COUNT_DATA_REQUEST = \"COUNT_DATA_REQUEST\";\r\nexport const COUNT_DATA_SUCCESS = \"COUNT_DATA_SUCCESS\";\r\nexport const COUNT_DATA_ERROR = \"COUNT_DATA_ERROR\";","import * as actionTypes from \"./statisticActionTypes\";\r\n\r\nexport function countDataRequest(startDate,endDate,postOffice) {\r\n  return { type: actionTypes.COUNT_DATA_REQUEST,startDate,endDate,postOffice};\r\n}\r\n\r\nexport function countDataSuccess(countList,revenuePieData,countPieData) {\r\n  return { type: actionTypes.COUNT_DATA_SUCCESS,countList,revenuePieData,countPieData};\r\n}\r\n\r\nexport function countDataError() {\r\n  return { type: actionTypes.COUNT_DATA_ERROR };\r\n}\r\n","import React from \"react\"\r\nimport { PieChart,Pie ,Cell } from 'recharts';\r\nimport { useSelector} from \"react-redux\";\r\n\r\nfunction CountChart(){\r\n \r\n  const data = useSelector((state) => state.statisticsReducer.countPieData); \r\n      let renderLabel = function(entry) {\r\n        return entry.name;\r\n    } \r\n      const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\r\n    return(\r\n        <PieChart width={500} height={350}>\r\n            <Pie data={data} dataKey=\"value\" nameKey=\"name\" cx=\"50%\" cy=\"50%\" outerRadius={130} fill=\"#8884d8\" label={renderLabel} >\r\n            {data?.map((entry, index) => (\r\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\r\n            ))}\r\n            </Pie>\r\n        </PieChart>\r\n    )\r\n}\r\n\r\nexport default CountChart;\r\n\r\n","import React from \"react\";\r\nimport {CSVLink} from \"react-csv\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {ExportButton} from \"./reportStyles\";\r\n\r\n\r\nfunction StatisticsReport(){\r\n    const statisticsReducer = useSelector((state) => state.statisticsReducer); \r\n    const header=[\r\n        {label:\"Date\", key:\"Date\"},\r\n        {label:\"Normal Mail\", key:\"Normal Mail\"},\r\n        {label:\"Registered Mail\", key:\"Registered Mail\"},\r\n        {label:\"Money Order\", key:\"Money Order\"},\r\n        {label:\"Package Delievery\", key:\"Package Delievery\"},\r\n    ]\r\n    const csvReport={\r\n        filename:\"Statistics-Report.csv\",\r\n        headers:header,\r\n        data:statisticsReducer.countData\r\n    }\r\n    return(   \r\n            <div>\r\n                <CSVLink {...csvReport} style={{textDecoration:\"none\"}}>\r\n                    <ExportButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        \r\n                        type=\"submit\"  \r\n                        >\r\n                            EXPORT STATISTICS REPORT\r\n                    </ExportButton>\r\n                </CSVLink>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default StatisticsReport;","import React,{useEffect} from \"react\";\r\nimport Nav from \"./../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"./../../components/TopBar/topBar\";\r\nimport RevenueChart from \"../../components/Charts/PieCharts/revenueChart\";\r\nimport AcceptedServiceTypesLineChart from \"../../components/Charts/AcceptedServiceTypeLineChart/acceptedServiceTypesLineChart\";\r\nimport { useStyles } from \"./statisticsStyles\";\r\nimport {Grid} from \"@material-ui/core\";\r\nimport DateFramePicker from \"../../components/DatePicker/dateFramePicker\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { countDataRequest } from \"./statisticsActions\";\r\nimport CountChart from \"../../components/Charts/PieCharts/countChart\";\r\nimport StatisticsReport from \"../../components/Reports/statisticsReport\";\r\nimport { DateRangePick} from \"../../components/DatePicker/dateRangePicker\";\r\n\r\nexport default function Statistics(){\r\n   const classes=useStyles();\r\n   const today=new Date();\r\n   const day20 = new Date(today - 1000 * 60 * 60 * 24 * 20);\r\n   const [dateRange, setDateRange] = React.useState([day20, today]);\r\n   const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const dispatch = useDispatch();\r\n    useEffect(()=>{\r\n        dispatch(countDataRequest(dateRange[0],dateRange[1],postOffice))\r\n    },[dispatch,dateRange,postOffice])\r\n   \r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Statistics\"/>\r\n                <div>\r\n                    <Grid container direction=\"row\" justifyContent=\"center\" spacing={5}>\r\n                        <Grid item>\r\n                            <DateRangePick\r\n                                dateRange={dateRange}\r\n                                setDateRange={setDateRange}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item style={{marginTop:\"5px\"}}>\r\n                            <StatisticsReport/>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n                <div style={{marginTop:\"80px\"}}>\r\n                    <AcceptedServiceTypesLineChart/>\r\n                </div>\r\n                <Grid container direction=\"row\" spacing={0} alignItems={\"center\"} justify={\"space-evenly\"} className={classes.PieGrid}>\r\n                    <Grid item className={classes.PieBox}>\r\n                        <div className={classes.PieTitle}>Mail Service Revenue</div>\r\n                        <RevenueChart/> \r\n                    </Grid>\r\n                    <Grid item className={classes.PieBox}>   \r\n                        <div className={classes.PieTitle}>Mail Service Count</div>        \r\n                        <CountChart/>              \r\n                    </Grid>\r\n                </Grid>\r\n                <div></div>\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    form:{\r\n        backgroundColor:\"#dddce6\",\r\n        justifyContent:\"center\",\r\n        maxWidth:\"850px\",\r\n        display:\"flex\",\r\n        marginLeft:\"10%\",\r\n        marginRight:\"10%\",\r\n        marginBottom:\"30px\",\r\n        border:\"8px black\",\r\n        borderRadius:10\r\n    },\r\n    button:{\r\n        alignContent:\"left\",\r\n        paddingBottom:\"15px\"\r\n  \r\n    },\r\n    fieldLabel: {\r\n        fontSize: \"18px\",\r\n        color: \"#2B292B\",\r\n        textAlign: \"left\",\r\n        fontWeight: \"normal\",\r\n      },\r\n      fieldValue: {\r\n        marginLeft:\"5px\",\r\n        fontWeight: \"bold\",\r\n        fontSize: \"18px\",\r\n        letterSpacing: \"0.25px\",\r\n        fontStyle: \"normal\",\r\n        color: \"#2B292B\",\r\n        textAlign: \"left\",\r\n       \r\n      },\r\n  }));\r\n\r\n\r\n  export const SubmitButton = withStyles(() => ({\r\n    root: {\r\n      textDecoration:\"none\",\r\n      color:\"white\",\r\n      marginTop: \"20px\",\r\n      backgroundColor: \"#1b1b2e\",\r\n      \"&:hover\": {\r\n          backgroundColor: \"#000000\",\r\n          fontSize:\"14px\"\r\n      },\r\n      minWidth:\"100px\"\r\n      }\r\n    \r\n  }))(Button);","export const COMPLAINS_DATA_REQUEST = \"COMPLAINS_DATA_REQUEST\";\r\nexport const COMPLAINS_DATA_SUCCESS = \"COMPLAINS_DATA_SUCCESS\";\r\nexport const COMPLAINS_DATA_ERROR = \"COMPLAINS_DATA_ERROR\";\r\n\r\nexport const MARK_SOLVED_REQUEST = \"MARK_SOLVED_REQUEST\";\r\nexport const MARK_SOLVED_SUCCESS = \"MARK_SOLVED_SUCCESS\";\r\nexport const MARK_SOLVED_ERROR = \"MARK_SOLVED_ERROR\";","import * as actionTypes from \"./complainsActionTypes\";\r\n\r\n// getting complins data actions\r\n\r\nexport function complainsDataRequest(postOffice) {\r\n  return { type: actionTypes.COMPLAINS_DATA_REQUEST,postOffice};\r\n}\r\n\r\nexport function complainsDataSuccess(data) {\r\n  return { type: actionTypes.COMPLAINS_DATA_SUCCESS,data};\r\n}\r\n\r\nexport function complainsDataError(error) {\r\n  return { type: actionTypes.COMPLAINS_DATA_ERROR,error};\r\n}\r\n\r\n\r\n\r\n//marking complain solved actions\r\n\r\nexport function markSolvedRequest(data) {\r\n  return { type: actionTypes. MARK_SOLVED_REQUEST,data};\r\n}\r\n\r\nexport function markSolvedSuccess() {\r\n  return { type: actionTypes.MARK_SOLVED_SUCCESS,};\r\n}\r\n\r\nexport function markSolvedError(error) {\r\n  return { type: actionTypes. MARK_SOLVED_ERROR,error};\r\n}\r\n","import React from \"react\";\r\nimport { useStyles,SubmitButton } from \"./complainStyles\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { markSolvedRequest,complainsDataRequest } from \"../../views/Complains/complainsActions\";\r\n    \r\n\r\nexport default function ComplainComponent(data){\r\n    const dispatch = useDispatch();\r\n    const classes=useStyles();\r\n    const complainData=data.complain;\r\n    const postOffice = data.postOffice; \r\n    async function markAsSolved(){\r\n        dispatch(markSolvedRequest(complainData.complainID));\r\n        dispatch(complainsDataRequest(postOffice))\r\n    }\r\n    return(\r\n        <div className={classes.form}>\r\n            <Grid container direction=\"column\" >\r\n                <Grid item style={{marginTop:\"10px\"}}>\r\n\r\n                    <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginLeft:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>Name: </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue} data-testid=\"name-id\">{complainData.name}</div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginRight:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>PID: </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue}>{complainData.pid} </div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n\r\n                <Grid item style={{marginTop:\"10px\"}}>\r\n                    <Grid container direction=\"row\" justifyContent=\"space-between\">\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\">\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldLabel} style={{marginLeft:\"10px\"}}>Email: </div>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldValue}>{complainData.email}</div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\">\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldLabel}>Contact Number: </div>\r\n                                    </Grid>\r\n\r\n                                    <Grid item>\r\n                                        <div className={classes.fieldValue}>{complainData.contactNumber} </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                        </Grid>\r\n\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginRight:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>Date: </div>\r\n                                </Grid>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue}>{complainData.date}</div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                <Grid item style={{ marginTop:\"10px\"}}>\r\n                    <Grid container direction=\"row\" >\r\n                        <Grid item>\r\n                            <Grid container direction=\"row\" style={{marginLeft:\"10px\"}}>\r\n                                <Grid item>\r\n                                    <div className={classes.fieldLabel}>Content: </div>\r\n                                </Grid>\r\n\r\n                                <Grid item>\r\n                                    <div className={classes.fieldValue}>{complainData.message}</div>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        \r\n                    </Grid>\r\n                    \r\n                </Grid>\r\n\r\n\r\n                <Grid item style={{marginTop:\"10px\"}}>\r\n                    <div className={classes.button}>\r\n                        <SubmitButton\r\n                            variant=\"contained\"\r\n                            color=\"#63231c\"\r\n                            className={classes.loginButton}\r\n                            disableElevation\r\n                            type=\"submit\"\r\n                            onClick={()=>markAsSolved()}        \r\n                            >\r\n                                MARK AS RESOLVED\r\n                        </SubmitButton>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n/*<Grid item>\r\n    <div data-testid=\"title-id\" className={classes.title}>Title:-</div>\r\n</Grid>*/\r\n\r\n","import React,{ useEffect }  from \"react\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport ComplainComponent from \"../../components/Complain/complainComponent\";\r\nimport { complainsDataRequest } from \"./complainsActions\";\r\nimport { useDispatch,useSelector} from \"react-redux\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\n\r\nexport default function Complains(){ \r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const dispatch = useDispatch();\r\n    const complainsReducer=useSelector((state) => state.complainsReducer); \r\n    useEffect(()=>{\r\n        dispatch(complainsDataRequest(postOffice))\r\n    },[dispatch])\r\n\r\n    return(\r\n        <div>\r\n            <Nav>\r\n                <TopBar page=\"Dashboard\"/>\r\n                    {(complainsReducer.isRequested===false && complainsReducer.dataRetrieved===true)?\r\n                    (   complainsReducer.complainData.map((complain)=>\r\n                            <div style={{marginTop:\"30px\"}}>\r\n                                <ComplainComponent complain={complain} postOffice={postOffice}/>\r\n                            </div>\r\n                        )\r\n                    ):\r\n                    ((complainsReducer.isRequested===true && complainsReducer.dataRetrieved===false)?\r\n                    (\r\n                        <Grid\r\n                            container\r\n                            alignItems=\"center\"\r\n                            style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n                        >\r\n                            <Grid item>\r\n                            <CircularProgress size={60} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n                            </Grid>\r\n                        </Grid>\r\n                    ):\r\n                    <h3>Error Occured</h3>\r\n                    )\r\n                    }\r\n            </Nav>\r\n        </div>\r\n    )\r\n}","export const GET_MAILS_REQUEST=\"GET_MAILS_REQUEST\";\r\nexport const GET_MAILS_SUCCESS=\"GET_MAILS_SUCCESS\";\r\nexport const GET_MAILS_ERROR=\"GET_MAILS_ERROR\";\r\nexport const CHANGE_POSTMAN=\"CHANGE_POSTMAN\";\r\nexport const SUBMIT_ASSIGNMENTS_REQUEST=\"SUBMIT_ASSIGNMENTS_REQUEST\";\r\nexport const SUBMIT_ASSIGNMENTS_SUCCESS=\"SUBMIT_ASSIGNMENTS_SUCCESS\";\r\nexport const SUBMIT_ASSIGNMENTS_ERROR=\"SUBMIT_ASSIGNMENTS_ERROR\";","import * as actionTypes from \"./mailAssignmentsActionTypes\"\r\n\r\nexport function getMails(postOffice){\r\n    return {type:actionTypes.GET_MAILS_REQUEST,postOffice}\r\n}\r\n\r\nexport function getMailsSuccess(assignments,postmenRoutes){\r\n    return {type:actionTypes.GET_MAILS_SUCCESS,assignments,postmenRoutes}\r\n}\r\n\r\nexport function getMailsError(data){\r\n    return {type:actionTypes.GET_MAILS_ERROR,data}\r\n}\r\n\r\nexport function changePostman(pid,id){\r\n    return {type:actionTypes.CHANGE_POSTMAN,pid,id}\r\n}\r\n\r\nexport function submitMailAssignments(assignments){\r\n    return {type:actionTypes.SUBMIT_ASSIGNMENTS_REQUEST,assignments}\r\n}\r\n\r\nexport function submitMailAssignmentsSuccess(){\r\n    return {type:actionTypes.SUBMIT_ASSIGNMENTS_SUCCESS}\r\n}\r\n\r\nexport function submitMailAssignmentsError(data){\r\n    return {type:actionTypes.SUBMIT_ASSIGNMENTS_ERROR,data}\r\n}\r\n","\r\nimport React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport {TextField,MenuItem, Select} from \"@material-ui/core\";\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { changePostman } from \"../../views/MailAssignments/mailAssignmentsActions\";\r\n\r\n\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"#bcbbc7\",\r\n    color: \"black\",\r\n    fontFamily:\"bold\",\r\n    fontWeight:800,\r\n    fontSize:\"18px\"\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\n\r\n\r\nexport default function MailAssignment(data){\r\n  const classes = useStyles();\r\n  const dispatch=useDispatch();\r\n  const mailAssignments=data.data.assignments;\r\n  const postmen=data.data.postmenData\r\n  function changeRow(pid,email){\r\n        dispatch(changePostman(pid,email));\r\n  }\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell >Post ID</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Address No</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Street 1</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Street 2</StyledTableCell>\r\n            <StyledTableCell align=\"center\">City</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Postman</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {mailAssignments.map((mail,index) => (\r\n            <StyledTableRow key={index}>\r\n              <StyledTableCell component=\"th\" scope=\"row\">\r\n              {mail.pid}\r\n              </StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.addressNumber}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.street1}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.street2}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">{mail.city}</StyledTableCell>\r\n              <StyledTableCell align=\"center\">\r\n            \r\n                <Select\r\n                    fullWidth \r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"                    \r\n                    name=\"postman\"                                 \r\n                    defaultValue={mail.postmanID}\r\n                    onChange={(el)=>(changeRow(mail.pid,el.target.value))}\r\n                    \r\n                    >\r\n                        {postmen.map((postman) => (\r\n                            <MenuItem key={postman.id} value={postman.id}>\r\n                                {postman.firstName} {postman.lastName}\r\n                            </MenuItem>\r\n                        ))}\r\n                </Select>\r\n                        \r\n              </StyledTableCell>\r\n            </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nexport const SubmitButton = withStyles(() => ({\r\n  root: {\r\n    textDecoration:\"none\",\r\n    color:\"white\",\r\n    marginTop: \"20px\",\r\n    backgroundColor: \"#01011a\",\r\n    \"&:hover\": {\r\n        backgroundColor: \"#000000\",\r\n        fontSize:\"14px\"\r\n    },\r\n    minWidth:\"100px\"\r\n    },\r\n  }))(Button);\r\n\r\nexport const useStyles = makeStyles(() => ({\r\n    \r\n      errorText: {\r\n        fontSize: \"14px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"4px\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      successText: {\r\n        fontSize: \"16px\",\r\n        color: \"green\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      loadingText: {\r\n        fontSize: \"16px\",\r\n        color: \"orange\",\r\n        float: \"left\",\r\n        marginLeft: \"40%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n      errorTextMsg: {\r\n        fontSize: \"16px\",\r\n        color: \"#6e0603\",\r\n        float: \"left\",\r\n        marginLeft: \"35%\",\r\n        fontFamily: \"Poppins\",\r\n        fontStyle: \"normal\",\r\n        fontWeight: 600,\r\n      },\r\n\r\n}))","import React,{useEffect,useState} from \"react\";\r\nimport MailAssignment from \"../../components/MailAssignment/mailAssignment\";\r\nimport Nav from \"./../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getMails,submitMailAssignments } from \"./mailAssignmentsActions\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { SubmitButton ,useStyles} from \"./mailAssignmentsStyles\";\r\n\r\nexport default function MailAssignments(){\r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const mailAssignmentsReducer = useSelector((state) => state.MailAssignmentsReducer);\r\n    const [submitted, setSubmitted] = useState(false); \r\n    const dispatch = useDispatch();\r\n    const classes=useStyles();\r\n    useEffect(()=>{\r\n      dispatch(getMails(postOffice))\r\n    },[dispatch,postOffice,submitted])\r\n\r\n    function confirmAssignments(){\r\n        dispatch(submitMailAssignments(mailAssignmentsReducer.assignments));\r\n        setSubmitted(!submitted)\r\n    }\r\n    return (\r\n        <Nav>\r\n            <TopBar page=\"Mail Assignments\"/>\r\n            {(mailAssignmentsReducer.isLoading==false && mailAssignmentsReducer.dataRetreived==true)?\r\n                <div style={{marginTop:\"20px\",marginLeft:\"20px\",marginRight:\"20px\"}}>\r\n                    <MailAssignment data={mailAssignmentsReducer} />\r\n                    <Grid container justifyContent=\"center\" style={{marginTop:\"20px\"}} direction=\"column\">\r\n                        <Grid item>\r\n                            <SubmitButton\r\n                                variant=\"contained\"\r\n                                color=\"#63231c\"\r\n                                disableElevation\r\n                                onClick={()=>(confirmAssignments())}                       \r\n                                >\r\n                                    CONFIRM MAIL ASSIGNMENTS\r\n                            </SubmitButton>\r\n                        </Grid>\r\n                        <Grid item>\r\n                                <span>\r\n                                    {(mailAssignmentsReducer.submitRequested==false && mailAssignmentsReducer.submitSuccess==false && mailAssignmentsReducer.submitFailure==true) ? (\r\n                                        <p className={classes.errorTextMsg}>Submission Unsuccessfull Try Again</p>\r\n                                    ) : null}\r\n                                    {(mailAssignmentsReducer.submitRequested==false && mailAssignmentsReducer.submitSuccess==true && mailAssignmentsReducer.submitFailure==false) ? (\r\n                                        <p className={classes.successText}>Submission Successfull</p>\r\n                                    ) : null}\r\n                                    {(mailAssignmentsReducer.submitRequested==true && mailAssignmentsReducer.submitSuccess==false && mailAssignmentsReducer.submitFailure==false) ? (\r\n                                        <p className={classes.loadingText}>Submission in progress..........</p>\r\n                                    ) : null}\r\n                                </span>\r\n                        </Grid>\r\n                    </Grid>\r\n                </div>\r\n            :((mailAssignmentsReducer.isLoading==true && mailAssignmentsReducer.dataRetreived==false)?\r\n            (<Grid\r\n                container\r\n                alignItems=\"center\"\r\n                style={{ marginTop: \"25%\",marginLeft:\"45%\" }}\r\n            >\r\n                <Grid item>\r\n                <CircularProgress size={60} color=\"secondary\" />\r\n                </Grid>\r\n            </Grid>):\r\n            ( <p style={{color:\"red\",textAlign:\"center\",marginTop: \"25%\",marginLeft:\"45%\"}}>Error Occured: Please try again later</p>)\r\n            )\r\n            }\r\n            \r\n        </Nav>\r\n    )\r\n}","import { makeStyles } from '@material-ui/core/styles';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n    },\r\n    secondaryHeading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      color: \"#dfdfe8\",\r\n    },\r\n    icon: {\r\n      verticalAlign: 'bottom',\r\n      height: 20,\r\n      width: 20,\r\n    },\r\n    accorditionHeading:{\r\n      backgroundColor:\"#0f0f2e\",\r\n      color:\"white\"\r\n    },\r\n    details: {\r\n      alignItems: 'center',\r\n      backgroundColor:\"#d7d7db\"\r\n    },\r\n    accordionActions:{\r\n      backgroundColor:\"#d7d7db\",\r\n      paddingBottom:\"10px\"\r\n    },\r\n    column: {\r\n      flexBasis: '33.33%',\r\n    },\r\n    helper: {\r\n      borderLeft: `2px solid ${theme.palette.divider}`,\r\n      padding: theme.spacing(1, 2),\r\n    },\r\n    link: {\r\n      color: theme.palette.primary.main,\r\n      textDecoration: 'none',\r\n      '&:hover': {\r\n        textDecoration: 'underline',\r\n      },\r\n    },\r\n  }));\r\n  \r\n\r\n  export const SubmitButton = withStyles(() => ({\r\n    root: {\r\n      textDecoration:\"none\",\r\n      color:\"white\",\r\n      marginTop: \"20px\",\r\n      backgroundColor: \"#1b1b2e\",\r\n      \"&:hover\": {\r\n          backgroundColor: \"#000000\",\r\n          fontSize:\"14px\"\r\n      },\r\n      minWidth:\"100px\"\r\n      },\r\n  }))(Button);","import React from 'react';\r\nimport BarCode from 'react-barcode';\r\nimport html2canvas from 'html2canvas';\r\n\r\n\r\nexport function BarcodePrinter(data){\r\n    //const wrapper_ref = React.useRef();\r\n    const code=data.code;\r\n    /*const onClick=(e)=>{\r\n       const opt = {\r\n          scale: 4\r\n      }\r\n      const elem = wrapper_ref.current;\r\n      html2canvas(elem, opt).then(canvas => {\r\n          const iframe = document.createElement('iframe')\r\n          iframe.name = 'printf'\r\n          iframe.id = 'printf'\r\n          iframe.height = 0;\r\n          iframe.width = 0;\r\n          document.body.appendChild(iframe)\r\n  \r\n          const imgUrl = canvas.toDataURL({\r\n              format: 'jpeg',\r\n              quality: '1.0'\r\n          })\r\n  \r\n          const style=`\r\n              height:30vh;\r\n              width:100vw;\r\n              position:absolute;\r\n              left:0:\r\n              top:0;\r\n          `;\r\n  \r\n          const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n          var newWin = window.frames[\"printf\"];\r\n          newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n          newWin.document.close();\r\n  \r\n      });\r\n    }*/\r\n  \r\n    return (\r\n        <div style={{marginTop:\"30px\"}}>\r\n          <div >\r\n              <BarCode\r\n                value={code}\r\n             />\r\n          </div>\r\n          \r\n        </div>\r\n      );\r\n  }\r\n  \r\n","import React from 'react';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport dateFormat from \"dateformat\";\r\nimport { useStyles,SubmitButton } from './mailTransferStyles';\r\nimport { Grid } from '@material-ui/core';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { BarcodePrinter } from '../BarcodePrinter/barcodePrinter.js';\r\nimport BarCode from 'react-barcode';\r\nimport html2canvas from 'html2canvas'\r\n\r\nexport default function MailTransfer(data) {\r\n  const classes = useStyles();\r\n  const wrapperRef = React.useRef();\r\n  const history = useHistory();\r\n  const date=new Date();\r\n  const formattedDate=dateFormat(date, \"yyyy/mm/dd\");\r\n  const transfer=data.transfer;\r\n  function toBarcode(){\r\n    let path = `/barcode-printer/`+\"5654646\"; \r\n    history.push(path);\r\n  }\r\n  function printBarcode(){\r\n    const opt = {\r\n        scale: 4\r\n     }\r\n    const elem = wrapperRef.current;\r\n    html2canvas(elem, opt).then(canvas => {\r\n        const iframe = document.createElement('iframe')\r\n        iframe.name = 'printf'\r\n        iframe.id = 'printf'\r\n        iframe.height = 0;\r\n        iframe.width = 0;\r\n        document.body.appendChild(iframe)\r\n\r\n        const imgUrl = canvas.toDataURL({\r\n            format: 'jpeg',\r\n            quality: '1.0'\r\n        })\r\n\r\n        const style=`\r\n            height:30vh;\r\n            width:100vw;\r\n            position:absolute;\r\n            left:0:\r\n            top:0;\r\n        `;\r\n\r\n        const url = `<img style=\"${style}\" src=\"${imgUrl}\"/>`;\r\n        var newWin = window.frames[\"printf\"];\r\n        newWin.document.write(`<body onload=\"window.print()\">${url}</body>`);\r\n        newWin.document.close();\r\n\r\n    });\r\n  }\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion >\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon style={{color:\"white\"}}/>}\r\n          aria-controls=\"panel1c-content\"\r\n          id=\"panel1c-header\"\r\n          className={classes.accorditionHeading}\r\n        >\r\n          <div className={classes.column}>\r\n            <Typography className={classes.heading} style={{textAlign:\"left\"}}>To: {transfer.postOffice}</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>Number of Items: {transfer.itemCount}</Typography>\r\n          </div>\r\n          <div className={classes.column}>\r\n            <Typography className={classes.secondaryHeading}>Date: {formattedDate}</Typography>\r\n          </div>\r\n        </AccordionSummary>\r\n        <AccordionDetails className={classes.details}>\r\n         \r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead>\r\n            <TableRow>\r\n                <TableCell style={{fontWeight:\"bold\"}}>PID</TableCell>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}>Post Type</TableCell>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}>Destination</TableCell>\r\n                <TableCell align=\"center\" style={{fontWeight:\"bold\"}}>Destination Address</TableCell>\r\n            </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n            {transfer.mails.map((row) => (\r\n                <TableRow key={row.name}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                    {row.pid}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{row.type}</TableCell>\r\n                <TableCell align=\"center\">{row.city}</TableCell>\r\n                <TableCell align=\"center\">{row.addressNumber+\", \"+row.street1+\", \"+row.street2+\", \"+row.city}</TableCell>\r\n                \r\n                </TableRow>\r\n            ))}\r\n            </TableBody>\r\n        </Table>\r\n        </AccordionDetails>\r\n        <Divider />\r\n        <div ref={wrapperRef}>\r\n            <BarcodePrinter code={transfer.id}/> \r\n        </div>\r\n        <Divider />\r\n        <Grid container className={classes.accordionActions} justifyContent=\"center\">\r\n            <Grid item>\r\n                <SubmitButton\r\n                    variant=\"contained\"\r\n                    color=\"#63231c\"\r\n                    disableElevation\r\n                    type=\"submit\"\r\n                    onClick={()=>{printBarcode()}}        \r\n                    >\r\n                    PRINT BARCODE\r\n                </SubmitButton>\r\n            </Grid>\r\n\r\n            \r\n\r\n        </Grid>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n","export const GET_TRANSFERS_REQUEST=\"GET_TRANSFERS_REQUEST\";\r\nexport const GET_TRANSFERS_SUCCESS=\"GET_TRANSFERS_SUCCESS\";\r\nexport const GET_TRANSFERS_ERROR=\"GET_TRANSFERS_ERROR\";\r\n\r\nexport const CONFIRM_TRANSFER_REQUEST=\"CONFIRM_TRANSFER_REQUEST\";\r\nexport const CONFIRM_TRANSFER_SUCCESS=\"CONFIRM_TRANSFER_SUCCESS\";\r\nexport const CONFIRM_TRANSFER_ERROR=\"CONFIRM_TRANSFER_ERROR\";","import * as actionTypes from \"./mailTransfersActionTypes\"\r\n\r\nexport function getTransfers(postOffice){\r\n    return {type:actionTypes.GET_TRANSFERS_REQUEST,postOffice}\r\n}\r\n\r\nexport function getTransfersSuccess(transfers){\r\n    return {type:actionTypes.GET_TRANSFERS_SUCCESS,transfers}\r\n}\r\n\r\nexport function getTransfersError(data){\r\n    return {type:actionTypes.GET_TRANSFERS_ERROR,data}\r\n}\r\n\r\nexport function confirmTransfer(transfers){\r\n    return {type:actionTypes.CONFIRM_TRANSFER_REQUEST,transfers}\r\n}\r\n\r\nexport function confirmTransferSuccess(transfers){\r\n    return {type:actionTypes.CONFIRM_TRANSFER_SUCCESS,transfers}\r\n}\r\n\r\nexport function confirmTransferError(data){\r\n    return {type:actionTypes.CONFIRM_TRANSFER_ERROR,data}\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { withStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nexport const SubmitButton = withStyles(() => ({\r\n    root: {\r\n        textDecoration:\"none\",\r\n        color:\"white\",\r\n        marginTop: \"20px\",\r\n        backgroundColor: \"#01011a\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"#000000\",\r\n            fontSize:\"14px\"\r\n        },\r\n        minWidth:\"100px\"\r\n        },\r\n  }))(Button);\r\n\r\n","import { Grid } from \"@material-ui/core\";\r\nimport React,{useEffect} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport MailTransfer from \"../../components/MailTransfer/mailTransfer\";\r\nimport Nav from \"../../components/SidePanel/sidePanel\";\r\nimport TopBar from \"../../components/TopBar/topBar\";\r\nimport { getTransfers,confirmTransfer } from \"./mailTransfersActions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { SubmitButton } from \"./mailTransfersStyles\";\r\nimport { CircularProgress} from \"@material-ui/core\";\r\n\r\n\r\nexport default function MailTransfers(){\r\n    const dispatch= useDispatch();\r\n    const postOffice = useSelector((state) => state.homeReducer.postOffice); \r\n    const transferReducer = useSelector((state) => state.MailTransfersReducer);\r\n    useEffect(()=>{\r\n        dispatch(getTransfers(1001))\r\n      },[dispatch,postOffice])\r\n    \r\n    function confirmTransfers(transfers){\r\n        dispatch(confirmTransfer(transfers))\r\n    }\r\n    return(\r\n        <Nav>\r\n            <TopBar page=\"Mail Transfers\"/>\r\n            \r\n            <Grid container direction=\"column\" style={{marginTop:\"50px\"}}>\r\n                {(transferReducer.dataRetreived==true && transferReducer.isLoading==false)?(\r\n                transferReducer.transfers.map((transfer)=>(\r\n                    <Grid item style={{maxWidth:\"1000px\",marginLeft:\"60px\",marginBottom:\"30px\"}}>\r\n                        <MailTransfer transfer={transfer}></MailTransfer>\r\n                    </Grid>\r\n                ))):\r\n                (\r\n                    <Grid\r\n                        container\r\n                        alignItems=\"center\"\r\n                        style={{ marginTop: \"15%\",marginLeft:\"45%\" }}\r\n                    >\r\n                        <Grid item>\r\n                        <CircularProgress size={60} color=\"secondary\" />\r\n                        </Grid>\r\n                    </Grid>\r\n                )}                \r\n            </Grid>\r\n            {(transferReducer.dataRetreived==true && transferReducer.isLoading==false && (transferReducer.transfers.length)>0)?(\r\n            <Grid container justifyContent=\"center\" direction=\"column\">\r\n                <Grid item>\r\n                    <SubmitButton\r\n                        variant=\"contained\"\r\n                        color=\"#63231c\"\r\n                        disableElevation\r\n                        type=\"submit\"\r\n                        onClick={()=>confirmTransfers(transferReducer.transfers)}        \r\n                        >\r\n                        CONFIRM TRANSFERS\r\n                    </SubmitButton>\r\n                </Grid>\r\n                {(transferReducer.confirmationRequested==true)?(\r\n                    <CircularProgress size={20} color=\"secondary\" />\r\n                \r\n                ):((transferReducer.confirmationSuccessfull==true)?(\r\n                    <span style={{color:\"green\"}}>Confirmation Successfull</span>\r\n                ):((transferReducer.confirmationSuccessfull==true)?(\r\n                     <span style={{color:\"red\"}}>Confirmation Unsuccessfull</span>\r\n                ):null)\r\n                )}\r\n\r\n            </Grid>):(transferReducer.dataRetreived==true && transferReducer.isLoading==false)?<span style={{color:\"red\"}}>No Transfer Data to display</span>:\r\n            null}\r\n        </Nav>\r\n    )\r\n}","\r\nimport React,{useContext} from \"react\";\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport Dashboard from \"./views/Home/Dashboard/dashboard\";\r\nimport Login from \"./views/Login/login\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AuthContext } from \"./auth/auth.js\";\r\nimport { useEffect } from \"react\";\r\nimport { authorizationRequest } from \"./views/Home/homeActions\";\r\nimport { useSelector } from 'react-redux';\r\nimport AuthError from \"./views/Error/authError\";\r\nimport { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport LiveDelivery from \"./views/LiveDelivery/liveDelivery\";\r\nimport Registration from \"./views/Registration/registration\";\r\nimport Statistics from \"./views/Statistics/statistics\";\r\nimport Complains from \"./views/Complains/complains\";\r\nimport MailAssignments from \"./views/MailAssignments/mailAssignments\";\r\nimport MailTransfers from \"./views/MailTransfers/mailTransfers\";\r\n\r\n\r\nfunction Authorization() {\r\n    const dispatch = useDispatch();\r\n    const user = useContext(AuthContext);\r\n   //console.log(\"token -\",user.currentUser.getIdToken(true))\r\n    useEffect(()=>{\r\n        if (user==null){\r\n    \r\n        }\r\n        else{\r\n            // console.log(\"User - \",user.currentUser.uid,user.currentUser.email)\r\n            dispatch(authorizationRequest({uID:user.currentUser.uid,email:user.currentUser.email}))\r\n        }\r\n      },[dispatch,user]);\r\n      const userRole= useSelector((state)=>state.homeReducer.role);\r\n      const isAuthorized= useSelector((state)=>state.homeReducer.isAuthorized);  \r\n  return (\r\n      <div className=\"App\">\r\n      {isAuthorized==true?\r\n        <Router>\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/dashboard\" component={\r\n                userRole? \r\n                (userRole==\"postmaster\"?(Dashboard):\r\n                (userRole==\"supervisor\"?(Dashboard):\r\n                (userRole==\"receptionist\"?AuthError:AuthError)))\r\n                :AuthError\r\n            } />\r\n            <Route exact path=\"/live-delivery\" component={\r\n                userRole? \r\n                (userRole==\"postmaster\"?(LiveDelivery):\r\n                AuthError)\r\n                :AuthError\r\n            }/>\r\n            <Route exact path=\"/registration\" component={\r\n                userRole? \r\n                (userRole==\"postmaster\"?(Registration):\r\n                (userRole==\"supervisor\"?(Registration):\r\n                AuthError))\r\n                :AuthError\r\n            } />\r\n            <Route exact path=\"/statistics\" component={\r\n                userRole? \r\n                (userRole==\"postmaster\"?(Statistics):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n            <Route exact path=\"/complains\" component={\r\n                userRole? \r\n                (userRole==\"postmaster\"?(Complains):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n\r\n            <Route exact path=\"/mail-assignments\" component={\r\n                userRole? \r\n                (userRole==\"supervisor\"?(MailAssignments):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n\r\n            <Route exact path=\"/mail-transfer\" component={\r\n                userRole? \r\n                (userRole==\"supervisor\"?(MailTransfers):\r\n                AuthError)\r\n                :AuthError\r\n            } />\r\n\r\n           \r\n\r\n            <Route exact path=\"/\">\r\n              <Redirect to=\"/dashboard\" />\r\n            </Route>\r\n\r\n      \r\n        </Router>\r\n        :\r\n        <div style={{backgroundColor:\"#d4d4d4\",\r\n        minHeight:\"100vh\"}}>\r\n        <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"flex-end\"\r\n        alignItems=\"center\"\r\n        spacing={3}\r\n        style={{ position: \"absolute\", top: \"35%\" }}\r\n      >\r\n        <Grid>\r\n          <img\r\n            src=\"/App_Icon.png\"\r\n            style={{ width: 200 * 1.5, height: 80 * 1.5,  }}\r\n            alt=\"Logo\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <CircularProgress size={80} color=\"secondary\" style={{color:\"#03031c\"}}/>\r\n        </Grid>\r\n      </Grid>\r\n      </div>}  \r\n      </div>\r\n  );\r\n}\r\n\r\nexport default Authorization;","import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./auth\";\r\n\r\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(routeProps) =>\r\n        !!currentUser ? (\r\n          <RouteComponent {...routeProps} />\r\n        ) : (\r\n          <Redirect to={\"/login\"} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","// import logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\r\nimport Login from \"./views/Login/login\";\r\nimport { AuthProvider } from \"./auth/auth\";\r\nimport Authorization from './router';\r\nimport PrivateRoute from './auth/privateRoute';\r\n\r\nfunction App() {\r\n  return (\r\n    <AuthProvider>\r\n      <div className=\"App\">\r\n        <Router>\r\n            <Route exact path=\"/login\" component={Login}/>\r\n            <PrivateRoute path =\"/\" component={Authorization}></PrivateRoute>\r\n        </Router>\r\n      </div>\r\n    </AuthProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { put } from \"redux-saga/effects\";\r\nimport {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_ERROR,\r\n} from \"./../views/Login/loginActionTypes.js\";\r\nimport {app} from \"../auth/base.js\";\r\n\r\nexport function* loginSaga(request) {\r\n  const email =request.data.emailVal;\r\n  const password =request.data.passwordVal;\r\n  let errorMessage = \"\";\r\n  try {\r\n    yield app.auth().signInWithEmailAndPassword(email, password);\r\n    yield put({ type: LOGIN_SUCCESS });\r\n  } catch (error) {\r\n    \r\n    switch (error.code) {\r\n      case \"auth/user-not-found\":\r\n        errorMessage = \"Invalid email or password\";\r\n        break;\r\n      case \"auth/wrong-password\":\r\n        errorMessage = \"Invalid email or password\";\r\n        break;\r\n      case \"auth/user-disabled\":\r\n        errorMessage = \"User with this email has been suspended\";\r\n        break;\r\n      default:\r\n        errorMessage = \"Something went wrong! Please try again\";\r\n        break;\r\n    }\r\n    yield put({ type: LOGIN_ERROR, error: errorMessage });\r\n  }\r\n}\r\n\r\nexport function logoutSaga() {\r\n  app.auth().signOut();\r\n}\r\n","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport \"firebase/compat/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n    projectId: process.env.REACT_APP_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_APP_ID,\r\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\r\n  };\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firestore = firebase.firestore();\r\n","import {AUTHORIZATION_REQUEST,AUTHORIZATION_SUCCESS,AUTHORIZATION_ERROR} from \"./../views/Home/homeActionTypes.js\";\r\nimport {app} from \"../auth/base.js\";\r\nimport {firestore} from \"../firebase/firestore\";\r\nimport { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\r\nimport {authorizationSuccess} from \"../views/Home/homeActions\";\r\n\r\n\r\nasync function getUserDetails(uID,email){\r\n    return firestore\r\n        .collection(\"Users\")\r\n        .doc(uID)\r\n        .get()\r\n        .then((doc)=>{\r\n            var userData=doc.data();\r\n            //console.log(\"post office \",userData.postOffice.id)\r\n            return userData;\r\n        })\r\n        .catch((e)=>{\r\n            console.log(\"Error occured\");\r\n            return null;\r\n        })\r\n}\r\nexport function* getUserDetailsSaga(data){\r\n    const currentUserID=data.data.uID;\r\n    const currentUserEmail=data.data.email;\r\n    try {\r\n        let data = yield call(getUserDetails,currentUserID,currentUserEmail);\r\n        yield put(authorizationSuccess(data,currentUserID,currentUserEmail));\r\n  } catch (e) {\r\n  }\r\n}","import { call,put } from \"redux-saga/effects\";\r\nimport {\r\n  ADD_EMPLOYEE_REQUEST\r\n} from \"./../views/Registration/registrationActionTypes.js\";\r\n//import {app} from \"../auth/base.js\";\r\nimport { getAuth, createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport {auth} from \"../auth/base.js\";\r\nimport {\r\n  addEmployeeSuccess,\r\n  addEmployeeError\r\n} from \"./../views/Registration/registrationAction.js\";\r\nimport axios from \"axios\";\r\n\r\nexport async function addEmployee(request){\r\n    const email=request.data.email;\r\n    const password=request.data.password1;\r\n    const firstName=request.data.firstName;\r\n    const lastName=request.data.lastName;\r\n    const contactNumber=request.data.contactNumber;\r\n    const NIc=request.data.nic;\r\n    const postOffice=request.data.postOffice;\r\n    const role=request.data.role;\r\n    const userID=request.data.userID\r\n    const idToken=request.idToken;\r\n    const result =await axios({\r\n      method: \"post\",\r\n      url: \"http://localhost:3050/create-user\",\r\n      params: {idToken:idToken,email:email,firstName:firstName,password:password,lastname:lastName,contactNumber:contactNumber,NIC:NIc,postOffice:postOffice,role:role,userID:userID},\r\n      headers: {\"Content-Type\": \"multipart/form-data\" },\r\n    })\r\n      .then(function (response) {   \r\n        return response.status;\r\n      })\r\n      return result;\r\n}\r\n\r\nexport function* addEmployeeSaga(request){\r\n  try {\r\n        const data = yield (addEmployee(request));\r\n        if (data==201){ \r\n            yield put(addEmployeeSuccess());\r\n        }\r\n        else{\r\n          yield put(addEmployeeError(\"Unexpected Error\"));\r\n        }\r\n      \r\n        \r\n  } catch (e) {\r\n        yield put(addEmployeeError(e.toString()));\r\n  }\r\n}\r\n\r\n\r\n\r\n","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take, takeEvery } from \"redux-saga/effects\";\r\nimport {getLocationsSuccess,getLocationsError} from \"../views/LiveDelivery/liveDeliveryActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getLiveLocations(data) {\r\n  const date=new Date();\r\n  const formattedDate=dateFormat(date, \"yyyy/mm/dd\");\r\n  const role=\"postman\";\r\n  const ref = firestore.collectionGroup(\"locations\").where(\"date\", \"==\", formattedDate);\r\n  const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n  try {\r\n    const Data = yield take(channel);\r\n        return Data.docs.map((doc) => {\r\n            const data = doc.data();\r\n            const documentID = doc.ref.parent.parent?.id || \"\";\r\n            if (data.geoLocations.length > 0) {\r\n            const history = data.geoLocations.sort((a, b) => b.timestamp.seconds - a.timestamp.seconds);\r\n            const latestElement = history[0];\r\n            return {\r\n                userDocumentID: documentID,\r\n                timeStamp: latestElement.timestamp.seconds * 1000,\r\n                location: {\r\n                lng: latestElement.location?.longitude || 0,\r\n                lat: latestElement.location?.latitude || 0\r\n                }\r\n            };\r\n            }\r\n            return null;\r\n        });\r\n      } catch (error) {\r\n      console.log(\"Error when locations retireved'\")\r\n      return \"Error\";\r\n  }\r\n}\r\n\r\nfunction* getPostmanDetails(postOffice) {\r\n  const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n  const role=\"postman\"\r\n  const ref = firestore.collection(\"Users\").where(\"role\",\"==\",role).where(\"postOffice\",\"==\",postOfficeRef);\r\n  const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n  console.log(\"getting postmen\")\r\n  try {  \r\n    const Data = yield take(channel);\r\n        return Data.docs.map((doc) => {\r\n            const data = doc.data();\r\n            const documentID = doc.id;\r\n            return {\r\n                userDocumentID: documentID,\r\n                firstName:data.firstName,\r\n                lastName:data.lastName,\r\n                contactNumber:data.contactNumber,\r\n                email:data.email,\r\n                postOffice:data.postOffice.id\r\n            };\r\n        });\r\n      } catch (error) {\r\n        console.log(\"Error when taking postman details\")\r\n        return \"Error\";\r\n  }\r\n}\r\n\r\nasync function getPostOffice(postOffice){\r\n    return firestore\r\n        .collection(\"PostOffice\")\r\n        .doc(postOffice)\r\n        .get()\r\n        .then((doc)=>{\r\n            var userData=doc.data();\r\n            return userData;\r\n        })\r\n        .catch((e)=>{\r\n            console.log(\"Error occured\");\r\n            return null;\r\n        })\r\n\r\n}\r\n\r\n\r\nfunction* getDataList(locations,postmen){\r\n    const data= postmen.map((postman)=>{\r\n        var location=locations.filter((e) => e.userDocumentID==postman.userDocumentID);\r\n            const loc=location[0];\r\n            return {\r\n                userDocumentID: postman.documentID,\r\n                firstName:postman.firstName,\r\n                lastName:postman.lastName,\r\n                contactNumber:postman.contactNumber,\r\n                email:postman.email,\r\n                postOffice:postman.postOffice,\r\n                timeStamp: loc?.timeStamp,\r\n                location: {\r\n                    lng: loc?.location.lng || 0,\r\n                    lat: loc?.location.lat || 0\r\n                }\r\n            }\r\n    })\r\n    return data;\r\n}\r\nexport function* getLiveLocationsSaga(data){\r\n    try {\r\n        const postOffice=data.postOffice\r\n        const locations=yield call(getLiveLocations);\r\n        const postmen=yield call(getPostmanDetails,postOffice);\r\n        const postOfficeData=yield call(getPostOffice,postOffice);\r\n        const locationData=yield call(getDataList,locations,postmen)\r\n        if(locations!=\"Error\"){\r\n            yield put(getLocationsSuccess(locationData,postOfficeData));\r\n        }\r\n        else{\r\n            yield put(getLocationsError(\"Unknown Error\"))\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(getLocationsError(error))\r\n    }\r\n  \r\n}\r\n","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport {performanceDataSuccess,performanceDataError} from \"../views/Home/Dashboard/dashboardActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getPerformanceDataFromPending(data){\r\n    //console.log(\"data - \",data.startDate,data.endDate,data.postOffice)\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        //console.log(data)\r\n        return data;\r\n    });\r\n}\r\n\r\nfunction* getPerformanceDataFromDelievered(data){\r\n    //console.log(\"data - \",data.startDate,data.endDate,data.postOffice)\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"DeliveredMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        //console.log(data)\r\n        return data;\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction* getRevenueList(data,performanceData){\r\n    var dayList=[]\r\n    for (var d = data.startDate; d <= data.endDate; d.setDate(d.getDate() + 1)) {\r\n        var currDate=dateFormat(new Date(d), \"yyyy/mm/dd\")\r\n        const reducer = ((previousValue, currentValue) => previousValue + parseFloat(currentValue.cost));\r\n        var normalMailsOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"NormalPost\"));\r\n        var registeredMailsOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"RegisteredPost\"));\r\n        var packageOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"Package\"));\r\n        var moneyOrderOnCurr=performanceData.filter((e) =>( e.date == currDate && e.type==\"MoneyOrder\"));\r\n        var normalMailTotal=normalMailsOnCurr.reduce(reducer,0);\r\n        var registeredMailTotal=registeredMailsOnCurr.reduce(reducer,0);\r\n        var moneyOrderTotal=moneyOrderOnCurr.reduce(reducer,0);\r\n        var packageTotal=packageOnCurr.reduce(reducer,0);\r\n        dayList.push({\r\n            date:currDate,\r\n            \"Normal Mail\": normalMailTotal,\r\n            \"Registered Mail\":registeredMailTotal,\r\n            \"Package Delievery\":packageTotal,\r\n            \"Money Order\":moneyOrderTotal\r\n        });\r\n    }\r\n    return dayList;\r\n}\r\n\r\n\r\n\r\nexport function* getPerformanceDataSaga(data){\r\n    try {\r\n        const performanceDataPending=yield call(getPerformanceDataFromPending,data);\r\n        const performanceDataDelivered=yield call(getPerformanceDataFromDelievered,data);\r\n        var performanceData=[...performanceDataPending,...performanceDataDelivered]\r\n        const revenueList=yield call(getRevenueList,data,performanceData)\r\n        yield put(performanceDataSuccess(revenueList));\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(performanceDataError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport { countDataSuccess, countDataError } from \"../views/Statistics/statisticsActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getCountDataFromPending(data){\r\n    //console.log(\"data - \",data.startDate,data.endDate,data.postOffice)\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        //console.log(data)\r\n        return data;\r\n    });\r\n}\r\n\r\n\r\nfunction* getCountDataFromDelievered(data){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(data.postOffice)\r\n    const ref = firestore.collection(\"DeliveredMails\").where(\"acceptedPostoffice\",\"==\",postOfficeRef).where('timestamp', '>',data.startDate).where(\"timestamp\",\"<\",data.endDate);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            cost:data.cost,\r\n            type:data.type,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\")\r\n        }\r\n        return data;\r\n    });\r\n}\r\n\r\n\r\n\r\nfunction* getCountList(data,countData){\r\n    var dayList=[]\r\n    for (var d = data.startDate; d <= data.endDate; d.setDate(d.getDate() + 1)) {\r\n        var currDate=dateFormat(new Date(d), \"yyyy/mm/dd\")\r\n        var normalMailsOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"NormalPost\"));\r\n        var registeredMailsOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"RegisteredPost\"));\r\n        var packageOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"Package\"));\r\n        var moneyOrderOnCurr=countData.filter((e) =>( e.date == currDate && e.type==\"MoneyOrder\"));\r\n        var normalMailTotal=normalMailsOnCurr.length;\r\n        var registeredMailTotal=registeredMailsOnCurr.length;\r\n        var moneyOrderTotal=moneyOrderOnCurr.length;\r\n        var packageTotal=packageOnCurr.length;\r\n        dayList.push({\r\n            Date:currDate,\r\n            \"Normal Mail\": normalMailTotal,\r\n            \"Registered Mail\":registeredMailTotal,\r\n            \"Package Delievery\":packageTotal,\r\n            \"Money Order\":moneyOrderTotal\r\n        });\r\n    }\r\n    return dayList;\r\n}\r\n\r\nfunction* getRevenuePieData(countData){\r\n    var normalMailsList=countData.filter((e) => e.type==\"NormalPost\");\r\n    var registeredMailsList=countData.filter((e) => e.type==\"RegisteredPost\");\r\n    var packageList=countData.filter((e) =>( e.type==\"Package\"));\r\n    var moneyOrderList=countData.filter((e) =>( e.type==\"MoneyOrder\"));\r\n    const reducer = ((previousValue, currentValue) => previousValue + parseFloat(currentValue.cost));\r\n    var normalMailTotal=normalMailsList.reduce(reducer,0);\r\n    var registeredMailTotal=registeredMailsList.reduce(reducer,0);\r\n    var moneyOrderTotal=moneyOrderList.reduce(reducer,0);\r\n    var packageTotal=packageList.reduce(reducer,0);\r\n    return[\r\n        { name: 'Normal Mail',value: normalMailTotal },\r\n        { name: \"Registered Mail\",value: registeredMailTotal },\r\n        { name: \"Package Delievery\",value: packageTotal },\r\n        { name: \"Money Order\",value: moneyOrderTotal },\r\n    ];\r\n}\r\n\r\nfunction* getCountPieData(countData){\r\n    var normalMailsList=countData.filter((e) => e.type==\"NormalPost\");\r\n    var registeredMailsList=countData.filter((e) => e.type==\"RegisteredPost\");\r\n    var packageList=countData.filter((e) =>( e.type==\"Package\"));\r\n    var moneyOrderList=countData.filter((e) =>( e.type==\"MoneyOrder\"));\r\n    var normalMailTotal=normalMailsList.length;\r\n    var registeredMailTotal=registeredMailsList.length;\r\n    var moneyOrderTotal=moneyOrderList.length;\r\n    var packageTotal=packageList.length;\r\n    return[\r\n        { name: 'Normal Mail',value: normalMailTotal },\r\n        { name: \"Registered Mail\",value: registeredMailTotal },\r\n        { name: \"Package Delievery\",value: packageTotal },\r\n        { name: \"Money Order\",value: moneyOrderTotal },\r\n    ];\r\n}\r\n\r\nexport function* getCountDataSaga(data){\r\n    try {\r\n        const countDataPending=yield call(getCountDataFromPending,data);\r\n        const countDataDelivered=yield call(getCountDataFromDelievered,data);\r\n        var countData=[...countDataPending,...countDataDelivered]\r\n        //console.log(\"Count Date - \",countData)\r\n        const countList=yield call(getCountList,data,countData)\r\n        const revenuePieData=yield call(getRevenuePieData,countData)\r\n        const countPieData=yield call(getCountPieData,countData)\r\n        yield put(countDataSuccess(countList,revenuePieData,countPieData));\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(countDataError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport { complainsDataSuccess,complainsDataError, markSolvedSuccess,markSolvedError } from \"../views/Complains/complainsActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getComplainsData(data){\r\n    const postOffice=data;\r\n    const state= \"unSolved\";\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"Complains\").where(\"state\",\"==\",state).where(\"postoffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return{\r\n            complainID:doc.id,\r\n            name:data.name,\r\n            email:data.email,\r\n            pid:data.pid,\r\n            contactNumber:data.contactNumber,\r\n            date:dateFormat(data.timestamp.toDate(), \"yyyy/mm/dd\"),\r\n            message:data.message\r\n        }\r\n    });\r\n}\r\n\r\nexport function* getComplainDataSaga(data){\r\n    try {\r\n        const complainsData=yield call(getComplainsData,data.postOffice);\r\n       yield put(complainsDataSuccess(complainsData));\r\n    } catch (error) {\r\n        console.log(\"Errorr -\",error);\r\n        yield put(complainsDataError(error));\r\n        \r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\nfunction* markComplainSolved(complainID){\r\n    return firestore\r\n        .collection(\"Complains\")\r\n        .doc(complainID)\r\n        .update({state:\"Solved\"})\r\n}\r\n\r\nexport function* setComplainSolvedSaga(data){\r\n    try {\r\n        const complainID=data.data;\r\n        const complainsSolved=yield call(markComplainSolved,complainID);\r\n        yield put(markSolvedSuccess())\r\n    } catch (error) {\r\n       console.log(\"Errorr -\",error);\r\n        yield put(markSolvedError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take} from \"redux-saga/effects\";\r\nimport { getMailsSuccess,getMailsError } from \"../views/MailAssignments/mailAssignmentsActions\";\r\nimport { submitMailAssignmentsSuccess, submitMailAssignmentsError } from \"../views/MailAssignments/mailAssignmentsActions\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport dateFormat from \"dateformat\";\r\nimport { arrayUnion } from \"firebase/firestore\";\r\n\r\nfunction* getMails(postOffice){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"state\",\"==\",\"destinationArrived\").where(\"destinationPostoffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return {\r\n            pid:doc.id,\r\n            addressNumber:data.recipientDetails.recipientAddressNo,\r\n            city:data.recipientDetails.recipientCity,\r\n            recepientName:data.recipientDetails.recipientName,\r\n            street1:data.recipientDetails?.recipientStreet1,\r\n            street2:data.recipientDetails?.recipientStreet2\r\n        };\r\n    });\r\n}\r\n\r\nfunction* getPostmenRoutes(postOffice){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"Users\").where(\"role\",\"==\",\"postman\").where(\"postOffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return {\r\n            id:doc.id,\r\n            email:data.email,\r\n            lastName:data.lastName,\r\n            firstName:data.firstName,\r\n            routes:data.route,\r\n        };\r\n    });\r\n}\r\n\r\n\r\nfunction* assignPostmen(mailsData,postmenRoutes){\r\n    return mailsData.map((mail)=>{\r\n        const availablePostmen = postmenRoutes.filter((postman)=>(postman.routes?.includes(mail.street1) || (postman.routes?.includes(mail.street2))))\r\n        //console.log(\"asign - \",mail,availablePostmen)\r\n        const availablePostman=availablePostmen[0];\r\n        return {\r\n            pid:mail.pid,\r\n            addressNumber:mail.addressNumber,\r\n            city:mail.city,\r\n            street1:mail?.street1,\r\n            street2:mail.street2?mail.street2:\"-\",\r\n            postmanID:availablePostman?availablePostman.id:\"-\",\r\n            postmanEmail: availablePostman?availablePostman.email:\"-\",\r\n            postmanFirstName:availablePostman?availablePostman.firstName:\"-\",\r\n            postmanLastName:availablePostman?availablePostman.lastName:\"-\"\r\n        }\r\n    })\r\n}\r\n\r\nexport function* getMailsSaga(data){\r\n    try {\r\n        const mailsData=yield call(getMails,data.postOffice);\r\n        const postmenRoutes=yield call(getPostmenRoutes,data.postOffice);\r\n        const assignments=yield call(assignPostmen,mailsData,postmenRoutes)\r\n        //console.log(\"Assignments - \",assignments)\r\n        yield put(getMailsSuccess(assignments,postmenRoutes));\r\n    } catch (error) {\r\n        console.log(\"Erorr -\",error);\r\n        yield put(getMailsError(error));\r\n        \r\n    }\r\n  \r\n}\r\n\r\n\r\n\r\n\r\nfunction* submitAssignments(assignments){\r\n    // console.log(\"Assignments - \",assignments);\r\n    return assignments.forEach((assignment)=>{\r\n        if(assignment.postmanID!=\"-\"){\r\n            var Mailref = firestore.collection('PendingMails').doc(assignment.pid);\r\n            Mailref.update({\r\n                \"state\": \"Assigned\",\r\n                \"histories\": arrayUnion({action:\"Assigned\",employee:firestore.doc('Users/' +assignment.postmanID)})\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\n\r\n\r\nexport function* submitAssignmentsSaga(data){\r\n    try {\r\n        const submitAssign=yield call(submitAssignments,data.assignments);\r\n        yield put(submitMailAssignmentsSuccess());\r\n    } catch (error) {\r\n        console.log(\"Erorr -\",error);\r\n        yield put(submitMailAssignmentsError(error));\r\n        \r\n    }\r\n  \r\n}","import {firestore} from \"../firebase/firestore\";\r\nimport { call, put, take,all} from \"redux-saga/effects\";\r\nimport { eventChannel } from \"redux-saga\";\r\nimport { confirmTransferError, confirmTransferSuccess, getTransfersError, getTransfersSuccess } from \"../views/MailTransfers/mailTransfersActions\";\r\nimport dateFormat from \"dateformat\";\r\n\r\nfunction* getPostOffices(){\r\n    const ref = firestore.collection(\"PostOffice\"); \r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        return {\r\n            code:data.code,\r\n            PostOffice:data.city\r\n        }\r\n    });\r\n}\r\n\r\n\r\nfunction* getTransfers(postOffice,postOffices){\r\n    const postOfficeRef= firestore.collection(\"PostOffice\").doc(postOffice)\r\n    const ref = firestore.collection(\"PendingMails\").where(\"state\",\"==\",\"Accepted\").where(\"acceptedPostoffice\",\"==\",postOfficeRef);\r\n    const channel = eventChannel((emit) => ref.onSnapshot(emit));\r\n    const Data = yield take(channel);\r\n    return Data.docs.map((doc) => {\r\n        const data = doc.data();\r\n        var office=(postOffices.filter((e) =>( e.code == data.destinationPostoffice.id)))[0];\r\n        return {\r\n            pid:doc.id,\r\n            addressNumber:data.recipientDetails.recipientAddressNo,\r\n            city:data.recipientDetails.recipientCity,\r\n            street1:data.recipientDetails?.recipientStreet1,\r\n            street2:data.recipientDetails?.recipientStreet2,\r\n            destinationPostOffice:office.PostOffice,\r\n            destinationPostOfficeCode:office.code,\r\n            type:data.type\r\n        };\r\n    });\r\n}\r\n\r\nfunction* groupTransfers(transferData,postOffices){\r\n    var transfers=[]\r\n    postOffices.forEach((office)=>{\r\n        var mails=(transferData.filter((e) =>( e.destinationPostOfficeCode == office.code)));\r\n        if(mails.length>0){\r\n            transfers.push({\r\n                postOfficeCode:office.code,\r\n                postOffice:office.PostOffice,\r\n                itemCount:mails.length,\r\n                mails:mails\r\n            })\r\n        }   \r\n    })\r\n    return transfers; \r\n}\r\n\r\n\r\nasync function markTransfer(date,transfer,acceptedPostoffice) {\r\n    var docID;\r\n    const destinationPostoffice=transfer.postOfficeCode;\r\n    const mails=transfer.mails\r\n    const mailList = mails.map((mail)=>{\r\n        return (\r\n            firestore.collection(\"PendingMails\").doc(mail.pid)\r\n        )\r\n    })\r\n    const relevantDocumentRef = await firestore\r\n      .collection(\"Transfers\")\r\n      .where(\"date\", \"==\", date)\r\n      .where(\"destinationPostoffice\",\"==\",destinationPostoffice)\r\n      .get();\r\n\r\n    if (relevantDocumentRef.empty) {\r\n        var doc =firestore\r\n        .collection(\"Transfers\")\r\n        .doc();\r\n       await (\r\n        doc.set({\r\n          mails: mailList,\r\n          date,\r\n          destinationPostoffice,\r\n          acceptedPostoffice,\r\n          state:\"Created\"\r\n        })\r\n        .then(() => {\r\n          docID= doc.id;\r\n        })\r\n        .catch((e) => {\r\n          throw e;\r\n        }));\r\n    }\r\n    else{\r\n       await (firestore\r\n        .collection(\"Transfers\")\r\n        .doc(relevantDocumentRef.docs[0].id)\r\n        .update({\r\n          \r\n          mails:mailList\r\n        })\r\n        .then(() => {\r\n          docID= relevantDocumentRef.docs[0].id;\r\n        })\r\n        .catch((e) => {\r\n          throw e;\r\n        }));\r\n    }\r\n        return {\r\n          id:docID,\r\n          postOfficeCode:transfer.postOfficeCode,\r\n          postOffice:transfer.postOffice,\r\n          itemCount:transfer.itemCount,\r\n          mails:mails\r\n    }\r\n}\r\n\r\nfunction* markTransfers(transferAssignments,postOffice){\r\n    const date=new Date();\r\n    const formattedDate=dateFormat(date, \"yyyy/mm/dd\");\r\n    const transferList= yield all(transferAssignments.map((transfer)=> \r\n         call (markTransfer,formattedDate,transfer,postOffice)\r\n    ))\r\n    return transferList;\r\n}\r\n  \r\nexport function* getTransfersSaga(data){\r\n    try {\r\n        const postOffice=(data.postOffice).toString();\r\n        const postOffices=yield call(getPostOffices);\r\n        const transferData=yield call(getTransfers,postOffice,postOffices);\r\n        const transferAssignments=yield call(groupTransfers,transferData,postOffices)\r\n        let transferMarking=yield call(markTransfers,transferAssignments,postOffice);\r\n        yield put(getTransfersSuccess(transferMarking));\r\n    } catch (error) {\r\n        console.log(\"Error -\",error);\r\n        yield put(getTransfersError(error)); \r\n    }\r\n}\r\n\r\nfunction* confirmTransfers(transfers){\r\n  return transfers.forEach((transfer)=>{\r\n          var transferRef = firestore.collection('Transfers').doc(transfer.id);\r\n          transferRef.update({\r\n              \"state\": \"Confirmed\"\r\n          })\r\n  })  \r\n}\r\n\r\nfunction* confirmMails(transfers){\r\n  return transfers.forEach((transfer)=>{\r\n    return transfer.mails.forEach((mail)=>{\r\n      var mailRef = firestore.collection('PendingMails').doc(mail.pid);\r\n      console.log(\"Mail update\",mail)\r\n      mailRef.update({\r\n          \"state\": \"Transfered\"\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nexport function* confirmTransfersSaga(data){\r\n  try {\r\n      const transfers=data.transfers;\r\n      const transferConfirm=yield call(confirmTransfers,transfers);\r\n      const mailsConfirm=yield call(confirmMails,transfers);     \r\n      yield put(confirmTransferSuccess());\r\n  } catch (error) {\r\n      console.log(\"Error -\",error);\r\n      yield put(confirmTransferError(error));   \r\n  }\r\n}","import { all, takeEvery } from \"redux-saga/effects\";\r\nimport * as loginActionTypes from \"./../views/Login/loginActionTypes.js\";\r\nimport * as homeActionTypes from \"./../views/Home/homeActionTypes.js\";\r\nimport * as addEmployeeActionTypes from \"./../views/Registration/registrationActionTypes\";\r\nimport * as liveDeliveryActionTypes from \"./../views/LiveDelivery/liveDeliveryActionTypes\";\r\nimport * as dashboardActionTypes from \"../views/Home/Dashboard/dashboardActionTypes\";\r\nimport * as statisticsActionTypes from \"./../views/Statistics/statisticActionTypes\";\r\nimport * as complainsActionTypes from \"./../views/Complains/complainsActionTypes\";\r\nimport * as mailAssignmentsActionTypes from \"./../views/MailAssignments/mailAssignmentsActionTypes\";\r\nimport * as mailTransfersActionTypes from \"./../views/MailTransfers/mailTransfersActionTypes\";\r\nimport { loginSaga,logoutSaga } from \"./loginSaga.js\";\r\nimport { getUserDetailsSaga } from \"./homeSaga.js\";\r\nimport { addEmployeeSaga } from \"./employeeRegistrationSaga.js\";\r\nimport { getLiveLocationsSaga } from \"./liveDeliverySaga.js\";\r\nimport { getPerformanceDataSaga } from \"./dashboardSaga.js\";\r\nimport { getCountDataSaga } from \"./statisticsSaga.js\";\r\nimport { getComplainDataSaga,setComplainSolvedSaga } from \"./complainsSaga.js\";\r\nimport { getMailsSaga,submitAssignmentsSaga } from \"./mailAssignmentsSaga.js\";\r\nimport { confirmTransfersSaga, getTransfersSaga } from \"./mailTransfersSaga.js\";\r\n\r\nexport default function* root() {\r\n  yield all([\r\n    takeEvery(loginActionTypes.LOGIN_REQUEST, loginSaga),\r\n    takeEvery(loginActionTypes.LOGOUT_REQUEST, logoutSaga),\r\n    takeEvery(homeActionTypes.AUTHORIZATION_REQUEST,getUserDetailsSaga),\r\n    takeEvery(addEmployeeActionTypes.ADD_EMPLOYEE_REQUEST,addEmployeeSaga),\r\n    takeEvery(liveDeliveryActionTypes.GET_LOCATIONS_REQUEST,getLiveLocationsSaga),\r\n    takeEvery(dashboardActionTypes.PERFORMANCE_DATA_REQUEST,getPerformanceDataSaga),\r\n    takeEvery(statisticsActionTypes.COUNT_DATA_REQUEST,getCountDataSaga),\r\n    takeEvery(complainsActionTypes.COMPLAINS_DATA_REQUEST,getComplainDataSaga),\r\n    takeEvery(complainsActionTypes.MARK_SOLVED_REQUEST,setComplainSolvedSaga),\r\n    takeEvery(mailAssignmentsActionTypes.GET_MAILS_REQUEST,getMailsSaga),\r\n    takeEvery(mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_REQUEST,submitAssignmentsSaga),\r\n    takeEvery(mailTransfersActionTypes.GET_TRANSFERS_REQUEST,getTransfersSaga),\r\n    takeEvery(mailTransfersActionTypes.CONFIRM_TRANSFER_REQUEST,confirmTransfersSaga),\r\n  ]);\r\n}","import * as actionTypes from \"./loginActionTypes.js\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  loggedIn: false,\r\n  requireLogin: false,\r\n  idToken: null,\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.LOGIN_REQUEST:\r\n      return { ...state, error: \"\", loggedIn: false, requireLogin: false };\r\n    case actionTypes.LOGIN_ERROR:\r\n      return { ...state, error: action.error, requireLogin: true };\r\n    case actionTypes.LOGIN_SUCCESS:   \r\n      return { ...state, error: \"\", loggedIn: true, requireLogin: false };\r\n    case actionTypes.SAVE_ID_TOKEN:\r\n      return { ...state, idToken: action.token };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import * as actionTypes from \"./homeActionTypes.js\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  firstName:\"\",\r\n  lastName:\"\",\r\n  contactNumber:\"\",\r\n  NIC:\"\",\r\n  role:\"\",\r\n  idToken: null,\r\n  postOffice:\"\",\r\n  isAuthorized:false,\r\n  currentUserID:\"\",\r\n  currentUserEmail:\"\"\r\n};\r\n\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.AUTHORIZATION_REQUEST:\r\n      return { ...state, error: \"\", isAuthorized: false };\r\n    case actionTypes.AUTHORIZATION_ERROR:\r\n      return { ...state, error: action.error, isAuthorized: false };\r\n    case actionTypes.AUTHORIZATION_SUCCESS:\r\n      return { ...state, error: \"\", isAuthorized: true, firstName:action.data.firstName,lastName:action.data.lastName,contactNumber:action.data.contactNumber,NIC:action.data.NIC,role:action.data.role,postOffice:action.data.postOffice.id,currentUserID:action.currentUserID,currentUserEmail:action.currentUserEmail};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import * as liveLocationActionTypes from \"./liveDeliveryActionTypes.js\";\r\nimport produce from \"immer\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  locationData: [],\r\n  locationsRetrieved:false,\r\n  postOffice:{},\r\n  isLoading:false\r\n};\r\n\r\nfunction LiveDeliveryReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case liveLocationActionTypes.GET_LOCATIONS_REQUEST:\r\n      return { ...state, error: \"\", locationsRetrieved:false,isLoading:true};\r\n    case liveLocationActionTypes.GET_LOCATIONS_ERROR:\r\n      return { ...state, error: action.error, locationsRetrieved:false,isLoading:false };\r\n    case liveLocationActionTypes.GET_LOCATIONS_SUCCESS:\r\n      return {...state,locationData:[...action.locationData],postOffice:{...action.postOfficeData.location}, locationsRetrieved:true, error: \"\",isLoading:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default LiveDeliveryReducer;\r\n","import * as actionTypes from \"./registrationActionTypes.js\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  isRequested: false,\r\n  requestSuccessful: false,\r\n  requestUnSuccessful: false,\r\n};\r\n\r\nfunction registrationReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_EMPLOYEE_REQUEST:\r\n      return { ...state, error: \"\", isRequested: true, requestSuccessful: false,error:\"\",requestUnSuccessful: false};\r\n    case actionTypes.ADD_EMPLOYEE_SUCCESS:\r\n      return { ...state, isRequested: false, requestSuccessful: true,error:\"\",requestUnSuccessful: false };\r\n    case actionTypes.ADD_EMPLOYEE_ERROR:  \r\n      return { ...state, isRequested: false, requestSuccessful: false ,error:action.data,requestUnSuccessful: true};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default registrationReducer;\r\n","import * as actionTypes from \"./dashboardActionTypes.js\";\r\n\r\nconst initialState = {\r\n  isRequested:false,\r\n  revenueData:[],\r\n  error:\"\",\r\n  dataRetreived:false\r\n};\r\n\r\nfunction dashboardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.PERFORMANCE_DATA_REQUEST:\r\n      return { ...state, error: \"\",  revenueData:[],isRequested: true, dataRetreived:false};\r\n    case actionTypes.PERFORMANCE_DATA_ERROR:\r\n      return { ...state, error: action.error, revenueData:[],isRequested:false, dataRetreived:false };\r\n    case actionTypes.PERFORMANCE_DATA_SUCCESS:\r\n      return { ...state, revenueData:[...action.data],isRequested: false, error:\"\", dataRetreived:true};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default dashboardReducer;\r\n","import * as actionTypes from \"./statisticActionTypes.js\";\r\n\r\nconst initialState = {\r\n  isRequested:false,\r\n  countData:[],\r\n  error:\"\",\r\n  revenuePieData:[],\r\n  countPieData:[]\r\n};\r\n\r\nfunction statisticsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.COUNT_DATA_REQUEST:\r\n      return { ...state, error: \"\",  countData:[],isRequested: true};\r\n    case actionTypes.COUNT_DATA_ERROR:\r\n      return { ...state, error: action.error, countData:[],isRequested:false };\r\n    case actionTypes.COUNT_DATA_SUCCESS:\r\n      return { ...state, countData:[...action.countList],revenuePieData:[...action.revenuePieData],countPieData:[...action.countPieData],isRequested: false, error:\"\" };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default statisticsReducer;\r\n","import * as actionTypes from \"./complainsActionTypes.js\";\r\n\r\nconst initialState = {\r\n  isRequested:false,\r\n  complainData:[],\r\n  error:\"\",\r\n  dataRetrieved:false,\r\n  ismarkRequested:false,\r\n  ismarkSuccess:false,\r\n  markError:\"\"\r\n};\r\n\r\nfunction complainsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case actionTypes.COMPLAINS_DATA_REQUEST:\r\n      return { ...state, error: \"\", complainData:[],isRequested: true,dataRetrieved:false};\r\n    case actionTypes.COMPLAINS_DATA_ERROR:\r\n      return { ...state, error: action.error, complainData:[],isRequested:false,dataRetrieved:false};\r\n    case actionTypes.COMPLAINS_DATA_SUCCESS:\r\n      return { ...state,complainData:[...action.data],isRequested: false, error:\"\",dataRetrieved:true };\r\n    case actionTypes.MARK_SOLVED_REQUEST:\r\n      return { ...state,ismarkRequested: true,ismarkSuccess:false,markError:\"\"};\r\n    case actionTypes.MARK_SOLVED_ERROR:\r\n      return { ...state,ismarkRequested: false,ismarkSuccess:false,markError:action.data};\r\n    case actionTypes.MARK_SOLVED_SUCCESS:\r\n      return { ...state,ismarkRequested: false,ismarkSuccess:true,markError:\"\"};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default complainsReducer;","import * as mailAssignmentsActionTypes from \"./mailAssignmentsActionTypes\";\r\nimport produce from \"immer\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  assignments: [],\r\n  postmenData:[],\r\n  isLoading:false,\r\n  dataRetreived:false,\r\n  changedCount:0,\r\n  submitRequested:false,\r\n  submitSuccess:false,\r\n  submitFailure:false\r\n};\r\n\r\nfunction MailAssignmentsReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case mailAssignmentsActionTypes.GET_MAILS_REQUEST:\r\n      return { ...state, error: \"\", dataRetreived:false,isLoading:true,changedCount:0};\r\n    case mailAssignmentsActionTypes. GET_MAILS_ERROR:\r\n      return { ...state, error: action.error, dataRetreived:false,isLoading:false };\r\n    case mailAssignmentsActionTypes. GET_MAILS_SUCCESS:\r\n      return {...state,assignments:[...action.assignments],postmenData:[...action.postmenRoutes], dataRetreived:true, error: \"\",isLoading:false};\r\n    case mailAssignmentsActionTypes.CHANGE_POSTMAN:\r\n        const objIndex = state.assignments.findIndex((obj => obj.pid == action.pid));\r\n        state.assignments[objIndex].postmanID = action.id;\r\n        return { ...state,changedCount:state.changedCount+1};\r\n    case mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_REQUEST:\r\n        return { ...state, submitRequested:true, submitSuccess:false,submitFailure:false};\r\n    case mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_ERROR:\r\n        return { ...state,  submitRequested:false, submitSuccess:false,submitFailure:true};\r\n    case mailAssignmentsActionTypes.SUBMIT_ASSIGNMENTS_SUCCESS:\r\n        return {...state, submitRequested:false, submitSuccess:true,submitFailure:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default MailAssignmentsReducer;","import * as mailTransfersActionTypes from \"./mailTransfersActionTypes\";\r\n\r\nconst initialState = {\r\n  error: \"\",\r\n  transfers: [],\r\n  isLoading:false,\r\n  dataRetreived:false,\r\n  submitRequested:false,\r\n  submitSuccess:false,\r\n  submitFailure:false,\r\n  confirmationRequested:false,\r\n  confirmationSuccessfull:false,\r\n  confirmationUnsuccessfull:false,\r\n};\r\n\r\nfunction MailTransfersReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case  mailTransfersActionTypes.GET_TRANSFERS_REQUEST:\r\n      return { ...state, error: \"\", dataRetreived:false,isLoading:true};\r\n    case  mailTransfersActionTypes.GET_TRANSFERS_ERROR:\r\n      return { ...state, error: action.error, dataRetreived:false,isLoading:false };\r\n    case  mailTransfersActionTypes. GET_TRANSFERS_SUCCESS:\r\n      return {...state,transfers:[...action.transfers], dataRetreived:true, error: \"\",isLoading:false};\r\n    case  mailTransfersActionTypes.CONFIRM_TRANSFER_REQUEST:\r\n      return { ...state, error: \"\", confirmationRequested:true, confirmationSuccessfull:false, confirmationUnsuccessfull:false};\r\n    case  mailTransfersActionTypes.CONFIRM_TRANSFER_ERROR:\r\n      return { ...state, error: action.error, confirmationSuccessfull:false,confirmationRequested:false, confirmationUnsuccessfull:true};\r\n    case  mailTransfersActionTypes.CONFIRM_TRANSFER_SUCCESS:\r\n      return {...state, confirmationSuccessfull:true, error: \"\",confirmationRequested:false,confirmationUnsuccessfull:false};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default MailTransfersReducer;","import { combineReducers } from \"redux\";\r\nimport loginReducer from \"./views/Login/loginReducer.js\";\r\nimport homeReducer from \"./views/Home/homeReducer.js\";\r\nimport LiveDeliveryReducer from \"./views/LiveDelivery/liveDeliveryReducer\";\r\nimport registrationReducer from \"./views/Registration/registrationReducer\";\r\nimport dashboardReducer from \"./views/Home/Dashboard/dashboardReducer\";\r\nimport statisticsReducer from \"./views/Statistics/statisticsReducer.js\";\r\nimport complainsReducer from \"./views/Complains/complainsReducer.js\";\r\nimport MailAssignmentsReducer from \"./views/MailAssignments/mailAssignmentsReducer.js\";\r\nimport MailTransfersReducer from \"./views/MailTransfers/mailTransfersReducer.js\";\r\n\r\nexport default combineReducers({\r\n  loginReducer,\r\n  homeReducer,\r\n  LiveDeliveryReducer,\r\n  registrationReducer,\r\n  dashboardReducer,\r\n  statisticsReducer,\r\n  complainsReducer,\r\n  MailAssignmentsReducer,\r\n  MailTransfersReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"./sagas\";\r\nimport combinedReducers from \"./rootReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport {registerObserver} from 'react-perf-devtool';\r\nregisterObserver()\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst store = createStore(\r\n  combinedReducers,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}